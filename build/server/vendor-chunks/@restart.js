"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@restart";
exports.ids = ["vendor-chunks/@restart"];
exports.modules = {

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nvar _useCallbackRef = _interopRequireDefault(__webpack_require__(/*! ./useCallbackRef */ \"(ssr)/./node_modules/@restart/hooks/cjs/useCallbackRef.js\"));\nexports.useCallbackRef = _useCallbackRef.default;\nvar _useCommittedRef = _interopRequireDefault(__webpack_require__(/*! ./useCommittedRef */ \"(ssr)/./node_modules/@restart/hooks/cjs/useCommittedRef.js\"));\nexports.useCommittedRef = _useCommittedRef.default;\nvar _useEventCallback = _interopRequireDefault(__webpack_require__(/*! ./useEventCallback */ \"(ssr)/./node_modules/@restart/hooks/cjs/useEventCallback.js\"));\nexports.useEventCallback = _useEventCallback.default;\nvar _useEventListener = _interopRequireDefault(__webpack_require__(/*! ./useEventListener */ \"(ssr)/./node_modules/@restart/hooks/cjs/useEventListener.js\"));\nexports.useEventListener = _useEventListener.default;\nvar _useGlobalListener = _interopRequireDefault(__webpack_require__(/*! ./useGlobalListener */ \"(ssr)/./node_modules/@restart/hooks/cjs/useGlobalListener.js\"));\nexports.useGlobalListener = _useGlobalListener.default;\nvar _useInterval = _interopRequireDefault(__webpack_require__(/*! ./useInterval */ \"(ssr)/./node_modules/@restart/hooks/cjs/useInterval.js\"));\nexports.useInterval = _useInterval.default;\nvar _useRafInterval = _interopRequireDefault(__webpack_require__(/*! ./useRafInterval */ \"(ssr)/./node_modules/@restart/hooks/cjs/useRafInterval.js\"));\nexports.useRafInterval = _useRafInterval.default;\nvar _useMergeState = _interopRequireDefault(__webpack_require__(/*! ./useMergeState */ \"(ssr)/./node_modules/@restart/hooks/cjs/useMergeState.js\"));\nexports.useMergeState = _useMergeState.default;\nvar _useMergeStateFromProps = _interopRequireDefault(__webpack_require__(/*! ./useMergeStateFromProps */ \"(ssr)/./node_modules/@restart/hooks/cjs/useMergeStateFromProps.js\"));\nexports.useMergeStateFromProps = _useMergeStateFromProps.default;\nvar _useMounted = _interopRequireDefault(__webpack_require__(/*! ./useMounted */ \"(ssr)/./node_modules/@restart/hooks/cjs/useMounted.js\"));\nexports.useMounted = _useMounted.default;\nvar _usePrevious = _interopRequireDefault(__webpack_require__(/*! ./usePrevious */ \"(ssr)/./node_modules/@restart/hooks/cjs/usePrevious.js\"));\nexports.usePrevious = _usePrevious.default;\nvar _useImage = _interopRequireDefault(__webpack_require__(/*! ./useImage */ \"(ssr)/./node_modules/@restart/hooks/cjs/useImage.js\"));\nexports.useImage = _useImage.default;\nvar _useResizeObserver = _interopRequireDefault(__webpack_require__(/*! ./useResizeObserver */ \"(ssr)/./node_modules/@restart/hooks/cjs/useResizeObserver.js\"));\nexports.useResizeObserver = _useResizeObserver.default;\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCLElBQUlFLGtCQUFrQkMsdUJBQXVCQyxtQkFBT0EsQ0FBQyxtRkFBa0I7QUFDdkVKLHNCQUFzQixHQUFHRSxnQkFBZ0JJLE9BQU87QUFDaEQsSUFBSUMsbUJBQW1CSix1QkFBdUJDLG1CQUFPQSxDQUFDLHFGQUFtQjtBQUN6RUosdUJBQXVCLEdBQUdPLGlCQUFpQkQsT0FBTztBQUNsRCxJQUFJRyxvQkFBb0JOLHVCQUF1QkMsbUJBQU9BLENBQUMsdUZBQW9CO0FBQzNFSix3QkFBd0IsR0FBR1Msa0JBQWtCSCxPQUFPO0FBQ3BELElBQUlLLG9CQUFvQlIsdUJBQXVCQyxtQkFBT0EsQ0FBQyx1RkFBb0I7QUFDM0VKLHdCQUF3QixHQUFHVyxrQkFBa0JMLE9BQU87QUFDcEQsSUFBSU8scUJBQXFCVix1QkFBdUJDLG1CQUFPQSxDQUFDLHlGQUFxQjtBQUM3RUoseUJBQXlCLEdBQUdhLG1CQUFtQlAsT0FBTztBQUN0RCxJQUFJUyxlQUFlWix1QkFBdUJDLG1CQUFPQSxDQUFDLDZFQUFlO0FBQ2pFSixtQkFBbUIsR0FBR2UsYUFBYVQsT0FBTztBQUMxQyxJQUFJVyxrQkFBa0JkLHVCQUF1QkMsbUJBQU9BLENBQUMsbUZBQWtCO0FBQ3ZFSixzQkFBc0IsR0FBR2lCLGdCQUFnQlgsT0FBTztBQUNoRCxJQUFJYSxpQkFBaUJoQix1QkFBdUJDLG1CQUFPQSxDQUFDLGlGQUFpQjtBQUNyRUoscUJBQXFCLEdBQUdtQixlQUFlYixPQUFPO0FBQzlDLElBQUllLDBCQUEwQmxCLHVCQUF1QkMsbUJBQU9BLENBQUMsbUdBQTBCO0FBQ3ZGSiw4QkFBOEIsR0FBR3FCLHdCQUF3QmYsT0FBTztBQUNoRSxJQUFJaUIsY0FBY3BCLHVCQUF1QkMsbUJBQU9BLENBQUMsMkVBQWM7QUFDL0RKLGtCQUFrQixHQUFHdUIsWUFBWWpCLE9BQU87QUFDeEMsSUFBSW1CLGVBQWV0Qix1QkFBdUJDLG1CQUFPQSxDQUFDLDZFQUFlO0FBQ2pFSixtQkFBbUIsR0FBR3lCLGFBQWFuQixPQUFPO0FBQzFDLElBQUlxQixZQUFZeEIsdUJBQXVCQyxtQkFBT0EsQ0FBQyx1RUFBWTtBQUMzREosZ0JBQWdCLEdBQUcyQixVQUFVckIsT0FBTztBQUNwQyxJQUFJdUIscUJBQXFCMUIsdUJBQXVCQyxtQkFBT0EsQ0FBQyx5RkFBcUI7QUFDN0VKLHlCQUF5QixHQUFHNkIsbUJBQW1CdkIsT0FBTztBQUN0RCxTQUFTSCx1QkFBdUI0QixHQUFHO0lBQUksT0FBT0EsT0FBT0EsSUFBSTlCLFVBQVUsR0FBRzhCLE1BQU07UUFBRXpCLFNBQVN5QjtJQUFJO0FBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L2hvb2tzL2Nqcy9pbmRleC5qcz9mOTk3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xudmFyIF91c2VDYWxsYmFja1JlZiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdXNlQ2FsbGJhY2tSZWZcIikpO1xuZXhwb3J0cy51c2VDYWxsYmFja1JlZiA9IF91c2VDYWxsYmFja1JlZi5kZWZhdWx0O1xudmFyIF91c2VDb21taXR0ZWRSZWYgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3VzZUNvbW1pdHRlZFJlZlwiKSk7XG5leHBvcnRzLnVzZUNvbW1pdHRlZFJlZiA9IF91c2VDb21taXR0ZWRSZWYuZGVmYXVsdDtcbnZhciBfdXNlRXZlbnRDYWxsYmFjayA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdXNlRXZlbnRDYWxsYmFja1wiKSk7XG5leHBvcnRzLnVzZUV2ZW50Q2FsbGJhY2sgPSBfdXNlRXZlbnRDYWxsYmFjay5kZWZhdWx0O1xudmFyIF91c2VFdmVudExpc3RlbmVyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91c2VFdmVudExpc3RlbmVyXCIpKTtcbmV4cG9ydHMudXNlRXZlbnRMaXN0ZW5lciA9IF91c2VFdmVudExpc3RlbmVyLmRlZmF1bHQ7XG52YXIgX3VzZUdsb2JhbExpc3RlbmVyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91c2VHbG9iYWxMaXN0ZW5lclwiKSk7XG5leHBvcnRzLnVzZUdsb2JhbExpc3RlbmVyID0gX3VzZUdsb2JhbExpc3RlbmVyLmRlZmF1bHQ7XG52YXIgX3VzZUludGVydmFsID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91c2VJbnRlcnZhbFwiKSk7XG5leHBvcnRzLnVzZUludGVydmFsID0gX3VzZUludGVydmFsLmRlZmF1bHQ7XG52YXIgX3VzZVJhZkludGVydmFsID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91c2VSYWZJbnRlcnZhbFwiKSk7XG5leHBvcnRzLnVzZVJhZkludGVydmFsID0gX3VzZVJhZkludGVydmFsLmRlZmF1bHQ7XG52YXIgX3VzZU1lcmdlU3RhdGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3VzZU1lcmdlU3RhdGVcIikpO1xuZXhwb3J0cy51c2VNZXJnZVN0YXRlID0gX3VzZU1lcmdlU3RhdGUuZGVmYXVsdDtcbnZhciBfdXNlTWVyZ2VTdGF0ZUZyb21Qcm9wcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdXNlTWVyZ2VTdGF0ZUZyb21Qcm9wc1wiKSk7XG5leHBvcnRzLnVzZU1lcmdlU3RhdGVGcm9tUHJvcHMgPSBfdXNlTWVyZ2VTdGF0ZUZyb21Qcm9wcy5kZWZhdWx0O1xudmFyIF91c2VNb3VudGVkID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91c2VNb3VudGVkXCIpKTtcbmV4cG9ydHMudXNlTW91bnRlZCA9IF91c2VNb3VudGVkLmRlZmF1bHQ7XG52YXIgX3VzZVByZXZpb3VzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91c2VQcmV2aW91c1wiKSk7XG5leHBvcnRzLnVzZVByZXZpb3VzID0gX3VzZVByZXZpb3VzLmRlZmF1bHQ7XG52YXIgX3VzZUltYWdlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91c2VJbWFnZVwiKSk7XG5leHBvcnRzLnVzZUltYWdlID0gX3VzZUltYWdlLmRlZmF1bHQ7XG52YXIgX3VzZVJlc2l6ZU9ic2VydmVyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91c2VSZXNpemVPYnNlcnZlclwiKSk7XG5leHBvcnRzLnVzZVJlc2l6ZU9ic2VydmVyID0gX3VzZVJlc2l6ZU9ic2VydmVyLmRlZmF1bHQ7XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfSJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsIl91c2VDYWxsYmFja1JlZiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwidXNlQ2FsbGJhY2tSZWYiLCJkZWZhdWx0IiwiX3VzZUNvbW1pdHRlZFJlZiIsInVzZUNvbW1pdHRlZFJlZiIsIl91c2VFdmVudENhbGxiYWNrIiwidXNlRXZlbnRDYWxsYmFjayIsIl91c2VFdmVudExpc3RlbmVyIiwidXNlRXZlbnRMaXN0ZW5lciIsIl91c2VHbG9iYWxMaXN0ZW5lciIsInVzZUdsb2JhbExpc3RlbmVyIiwiX3VzZUludGVydmFsIiwidXNlSW50ZXJ2YWwiLCJfdXNlUmFmSW50ZXJ2YWwiLCJ1c2VSYWZJbnRlcnZhbCIsIl91c2VNZXJnZVN0YXRlIiwidXNlTWVyZ2VTdGF0ZSIsIl91c2VNZXJnZVN0YXRlRnJvbVByb3BzIiwidXNlTWVyZ2VTdGF0ZUZyb21Qcm9wcyIsIl91c2VNb3VudGVkIiwidXNlTW91bnRlZCIsIl91c2VQcmV2aW91cyIsInVzZVByZXZpb3VzIiwiX3VzZUltYWdlIiwidXNlSW1hZ2UiLCJfdXNlUmVzaXplT2JzZXJ2ZXIiLCJ1c2VSZXNpemVPYnNlcnZlciIsIm9iaiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useCallbackRef.js":
/*!***********************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useCallbackRef.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useCallbackRef;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */ function useCallbackRef() {\n    return (0, _react.useState)(null);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZUNhbGxiYWNrUmVmLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBZSxHQUFHRztBQUNsQixJQUFJQyxTQUFTQyxtQkFBT0EsQ0FBQyx3R0FBTztBQUM1Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0F1QkMsR0FDRCxTQUFTRjtJQUNQLE9BQU8sQ0FBQyxHQUFHQyxPQUFPRSxRQUFRLEVBQUU7QUFDOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L2hvb2tzL2Nqcy91c2VDYWxsYmFja1JlZi5qcz9jMTI5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdXNlQ2FsbGJhY2tSZWY7XG52YXIgX3JlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuLyoqXG4gKiBBIGNvbnZlbmllbmNlIGhvb2sgYXJvdW5kIGB1c2VTdGF0ZWAgZGVzaWduZWQgdG8gYmUgcGFpcmVkIHdpdGhcbiAqIHRoZSBjb21wb25lbnQgW2NhbGxiYWNrIHJlZl0oaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL3JlZnMtYW5kLXRoZS1kb20uaHRtbCNjYWxsYmFjay1yZWZzKSBhcGkuXG4gKiBDYWxsYmFjayByZWZzIGFyZSB1c2VmdWwgb3ZlciBgdXNlUmVmKClgIHdoZW4geW91IG5lZWQgdG8gcmVzcG9uZCB0byB0aGUgcmVmIGJlaW5nIHNldFxuICogaW5zdGVhZCBvZiBsYXppbHkgYWNjZXNzaW5nIGl0IGluIGFuIGVmZmVjdC5cbiAqXG4gKiBgYGB0c1xuICogY29uc3QgW2VsZW1lbnQsIGF0dGFjaFJlZl0gPSB1c2VDYWxsYmFja1JlZjxIVE1MRGl2RWxlbWVudD4oKVxuICpcbiAqIHVzZUVmZmVjdCgoKSA9PiB7XG4gKiAgIGlmICghZWxlbWVudCkgcmV0dXJuXG4gKlxuICogICBjb25zdCBjYWxlbmRhciA9IG5ldyBGdWxsQ2FsZW5kYXIuQ2FsZW5kYXIoZWxlbWVudClcbiAqXG4gKiAgIHJldHVybiAoKSA9PiB7XG4gKiAgICAgY2FsZW5kYXIuZGVzdHJveSgpXG4gKiAgIH1cbiAqIH0sIFtlbGVtZW50XSlcbiAqXG4gKiByZXR1cm4gPGRpdiByZWY9e2F0dGFjaFJlZn0gLz5cbiAqIGBgYFxuICpcbiAqIEBjYXRlZ29yeSByZWZzXG4gKi9cbmZ1bmN0aW9uIHVzZUNhbGxiYWNrUmVmKCkge1xuICByZXR1cm4gKDAsIF9yZWFjdC51c2VTdGF0ZSkobnVsbCk7XG59Il0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInVzZUNhbGxiYWNrUmVmIiwiX3JlYWN0IiwicmVxdWlyZSIsInVzZVN0YXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useCallbackRef.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useCommittedRef.js":
/*!************************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useCommittedRef.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */ function useCommittedRef(value) {\n    const ref = (0, _react.useRef)(value);\n    (0, _react.useEffect)(()=>{\n        ref.current = value;\n    }, [\n        value\n    ]);\n    return ref;\n}\nvar _default = useCommittedRef;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZUNvbW1pdHRlZFJlZi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSxrQkFBa0IsR0FBRztBQUNyQkEsa0JBQWUsR0FBRyxLQUFLO0FBQ3ZCLElBQUlHLFNBQVNDLG1CQUFPQSxDQUFDLHdHQUFPO0FBQzVCOzs7Ozs7OztDQVFDLEdBQ0QsU0FBU0MsZ0JBQWdCQyxLQUFLO0lBQzVCLE1BQU1DLE1BQU0sQ0FBQyxHQUFHSixPQUFPSyxNQUFNLEVBQUVGO0lBQzlCLElBQUdILE9BQU9NLFNBQVMsRUFBRTtRQUNwQkYsSUFBSUcsT0FBTyxHQUFHSjtJQUNoQixHQUFHO1FBQUNBO0tBQU07SUFDVixPQUFPQztBQUNUO0FBQ0EsSUFBSUksV0FBV047QUFDZkwsa0JBQWUsR0FBR1ciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L2hvb2tzL2Nqcy91c2VDb21taXR0ZWRSZWYuanM/ZDViNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBfcmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG4vKipcbiAqIENyZWF0ZXMgYSBgUmVmYCB3aG9zZSB2YWx1ZSBpcyB1cGRhdGVkIGluIGFuIGVmZmVjdCwgZW5zdXJpbmcgdGhlIG1vc3QgcmVjZW50XG4gKiB2YWx1ZSBpcyB0aGUgb25lIHJlbmRlcmVkIHdpdGguIEdlbmVyYWxseSBvbmx5IHJlcXVpcmVkIGZvciBDb25jdXJyZW50IG1vZGUgdXNhZ2VcbiAqIHdoZXJlIHByZXZpb3VzIHdvcmsgaW4gYHJlbmRlcigpYCBtYXkgYmUgZGlzY2FyZGVkIGJlZm9yZSBiZWluZyB1c2VkLlxuICpcbiAqIFRoaXMgaXMgc2FmZSB0byBhY2Nlc3MgaW4gYW4gZXZlbnQgaGFuZGxlci5cbiAqXG4gKiBAcGFyYW0gdmFsdWUgVGhlIGBSZWZgIHZhbHVlXG4gKi9cbmZ1bmN0aW9uIHVzZUNvbW1pdHRlZFJlZih2YWx1ZSkge1xuICBjb25zdCByZWYgPSAoMCwgX3JlYWN0LnVzZVJlZikodmFsdWUpO1xuICAoMCwgX3JlYWN0LnVzZUVmZmVjdCkoKCkgPT4ge1xuICAgIHJlZi5jdXJyZW50ID0gdmFsdWU7XG4gIH0sIFt2YWx1ZV0pO1xuICByZXR1cm4gcmVmO1xufVxudmFyIF9kZWZhdWx0ID0gdXNlQ29tbWl0dGVkUmVmO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIl9yZWFjdCIsInJlcXVpcmUiLCJ1c2VDb21taXR0ZWRSZWYiLCJ2YWx1ZSIsInJlZiIsInVzZVJlZiIsInVzZUVmZmVjdCIsImN1cnJlbnQiLCJfZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useCommittedRef.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useEventCallback.js":
/*!*************************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useEventCallback.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useEventCallback;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _useCommittedRef = _interopRequireDefault(__webpack_require__(/*! ./useCommittedRef */ \"(ssr)/./node_modules/@restart/hooks/cjs/useCommittedRef.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction useEventCallback(fn) {\n    const ref = (0, _useCommittedRef.default)(fn);\n    return (0, _react.useCallback)(function(...args) {\n        return ref.current && ref.current(...args);\n    }, [\n        ref\n    ]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZUV2ZW50Q2FsbGJhY2suanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGtCQUFlLEdBQUdHO0FBQ2xCLElBQUlDLFNBQVNDLG1CQUFPQSxDQUFDLHdHQUFPO0FBQzVCLElBQUlDLG1CQUFtQkMsdUJBQXVCRixtQkFBT0EsQ0FBQyxxRkFBbUI7QUFDekUsU0FBU0UsdUJBQXVCQyxHQUFHO0lBQUksT0FBT0EsT0FBT0EsSUFBSVAsVUFBVSxHQUFHTyxNQUFNO1FBQUVOLFNBQVNNO0lBQUk7QUFBRztBQUM5RixTQUFTTCxpQkFBaUJNLEVBQUU7SUFDMUIsTUFBTUMsTUFBTSxDQUFDLEdBQUdKLGlCQUFpQkosT0FBTyxFQUFFTztJQUMxQyxPQUFPLENBQUMsR0FBR0wsT0FBT08sV0FBVyxFQUFFLFNBQVUsR0FBR0MsSUFBSTtRQUM5QyxPQUFPRixJQUFJRyxPQUFPLElBQUlILElBQUlHLE9BQU8sSUFBSUQ7SUFDdkMsR0FBRztRQUFDRjtLQUFJO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L2hvb2tzL2Nqcy91c2VFdmVudENhbGxiYWNrLmpzP2Q5NzIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSB1c2VFdmVudENhbGxiYWNrO1xudmFyIF9yZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbnZhciBfdXNlQ29tbWl0dGVkUmVmID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91c2VDb21taXR0ZWRSZWZcIikpO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cbmZ1bmN0aW9uIHVzZUV2ZW50Q2FsbGJhY2soZm4pIHtcbiAgY29uc3QgcmVmID0gKDAsIF91c2VDb21taXR0ZWRSZWYuZGVmYXVsdCkoZm4pO1xuICByZXR1cm4gKDAsIF9yZWFjdC51c2VDYWxsYmFjaykoZnVuY3Rpb24gKC4uLmFyZ3MpIHtcbiAgICByZXR1cm4gcmVmLmN1cnJlbnQgJiYgcmVmLmN1cnJlbnQoLi4uYXJncyk7XG4gIH0sIFtyZWZdKTtcbn0iXSwibmFtZXMiOlsiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidXNlRXZlbnRDYWxsYmFjayIsIl9yZWFjdCIsInJlcXVpcmUiLCJfdXNlQ29tbWl0dGVkUmVmIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIm9iaiIsImZuIiwicmVmIiwidXNlQ2FsbGJhY2siLCJhcmdzIiwiY3VycmVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useEventCallback.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useEventListener.js":
/*!*************************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useEventListener.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useEventListener;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _useEventCallback = _interopRequireDefault(__webpack_require__(/*! ./useEventCallback */ \"(ssr)/./node_modules/@restart/hooks/cjs/useEventCallback.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */ function useEventListener(eventTarget, event, listener, capture = false) {\n    const handler = (0, _useEventCallback.default)(listener);\n    (0, _react.useEffect)(()=>{\n        const target = typeof eventTarget === \"function\" ? eventTarget() : eventTarget;\n        target.addEventListener(event, handler, capture);\n        return ()=>target.removeEventListener(event, handler, capture);\n    }, [\n        eventTarget\n    ]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZUV2ZW50TGlzdGVuZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGtCQUFlLEdBQUdHO0FBQ2xCLElBQUlDLFNBQVNDLG1CQUFPQSxDQUFDLHdHQUFPO0FBQzVCLElBQUlDLG9CQUFvQkMsdUJBQXVCRixtQkFBT0EsQ0FBQyx1RkFBb0I7QUFDM0UsU0FBU0UsdUJBQXVCQyxHQUFHO0lBQUksT0FBT0EsT0FBT0EsSUFBSVAsVUFBVSxHQUFHTyxNQUFNO1FBQUVOLFNBQVNNO0lBQUk7QUFBRztBQUM5Rjs7Ozs7Ozs7Q0FRQyxHQUNELFNBQVNMLGlCQUFpQk0sV0FBVyxFQUFFQyxLQUFLLEVBQUVDLFFBQVEsRUFBRUMsVUFBVSxLQUFLO0lBQ3JFLE1BQU1DLFVBQVUsQ0FBQyxHQUFHUCxrQkFBa0JKLE9BQU8sRUFBRVM7SUFDOUMsSUFBR1AsT0FBT1UsU0FBUyxFQUFFO1FBQ3BCLE1BQU1DLFNBQVMsT0FBT04sZ0JBQWdCLGFBQWFBLGdCQUFnQkE7UUFDbkVNLE9BQU9DLGdCQUFnQixDQUFDTixPQUFPRyxTQUFTRDtRQUN4QyxPQUFPLElBQU1HLE9BQU9FLG1CQUFtQixDQUFDUCxPQUFPRyxTQUFTRDtJQUMxRCxHQUFHO1FBQUNIO0tBQVk7QUFDbEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L2hvb2tzL2Nqcy91c2VFdmVudExpc3RlbmVyLmpzPzBhMjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSB1c2VFdmVudExpc3RlbmVyO1xudmFyIF9yZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbnZhciBfdXNlRXZlbnRDYWxsYmFjayA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdXNlRXZlbnRDYWxsYmFja1wiKSk7XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuLyoqXG4gKiBBdHRhY2hlcyBhbiBldmVudCBoYW5kbGVyIG91dHNpZGUgZGlyZWN0bHkgdG8gc3BlY2lmaWVkIERPTSBlbGVtZW50XG4gKiBieXBhc3NpbmcgdGhlIHJlYWN0IHN5bnRoZXRpYyBldmVudCBzeXN0ZW0uXG4gKlxuICogQHBhcmFtIGVsZW1lbnQgVGhlIHRhcmdldCB0byBsaXN0ZW4gZm9yIGV2ZW50cyBvblxuICogQHBhcmFtIGV2ZW50IFRoZSBET00gZXZlbnQgbmFtZVxuICogQHBhcmFtIGhhbmRsZXIgQW4gZXZlbnQgaGFuZGxlclxuICogQHBhcmFtIGNhcHR1cmUgV2hldGhlciBvciBub3QgdG8gbGlzdGVuIGR1cmluZyB0aGUgY2FwdHVyZSBldmVudCBwaGFzZVxuICovXG5mdW5jdGlvbiB1c2VFdmVudExpc3RlbmVyKGV2ZW50VGFyZ2V0LCBldmVudCwgbGlzdGVuZXIsIGNhcHR1cmUgPSBmYWxzZSkge1xuICBjb25zdCBoYW5kbGVyID0gKDAsIF91c2VFdmVudENhbGxiYWNrLmRlZmF1bHQpKGxpc3RlbmVyKTtcbiAgKDAsIF9yZWFjdC51c2VFZmZlY3QpKCgpID0+IHtcbiAgICBjb25zdCB0YXJnZXQgPSB0eXBlb2YgZXZlbnRUYXJnZXQgPT09ICdmdW5jdGlvbicgPyBldmVudFRhcmdldCgpIDogZXZlbnRUYXJnZXQ7XG4gICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIGhhbmRsZXIsIGNhcHR1cmUpO1xuICAgIHJldHVybiAoKSA9PiB0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgaGFuZGxlciwgY2FwdHVyZSk7XG4gIH0sIFtldmVudFRhcmdldF0pO1xufSJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ1c2VFdmVudExpc3RlbmVyIiwiX3JlYWN0IiwicmVxdWlyZSIsIl91c2VFdmVudENhbGxiYWNrIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIm9iaiIsImV2ZW50VGFyZ2V0IiwiZXZlbnQiLCJsaXN0ZW5lciIsImNhcHR1cmUiLCJoYW5kbGVyIiwidXNlRWZmZWN0IiwidGFyZ2V0IiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useEventListener.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useForceUpdate.js":
/*!***********************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useForceUpdate.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useForceUpdate;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */ function useForceUpdate() {\n    // The toggling state value is designed to defeat React optimizations for skipping\n    // updates when they are strictly equal to the last state value\n    const [, dispatch] = (0, _react.useReducer)((state)=>!state, false);\n    return dispatch;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZUZvcmNlVXBkYXRlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBZSxHQUFHRztBQUNsQixJQUFJQyxTQUFTQyxtQkFBT0EsQ0FBQyx3R0FBTztBQUM1Qjs7Ozs7Ozs7Ozs7Ozs7O0NBZUMsR0FDRCxTQUFTRjtJQUNQLGtGQUFrRjtJQUNsRiwrREFBK0Q7SUFDL0QsTUFBTSxHQUFHRyxTQUFTLEdBQUcsQ0FBQyxHQUFHRixPQUFPRyxVQUFVLEVBQUVDLENBQUFBLFFBQVMsQ0FBQ0EsT0FBTztJQUM3RCxPQUFPRjtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC9ob29rcy9janMvdXNlRm9yY2VVcGRhdGUuanM/NzM2YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHVzZUZvcmNlVXBkYXRlO1xudmFyIF9yZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbi8qKlxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRoYXQgdHJpZ2dlcnMgYSBjb21wb25lbnQgdXBkYXRlLiB0aGUgaG9vayBlcXVpdmFsZW50IHRvXG4gKiBgdGhpcy5mb3JjZVVwZGF0ZSgpYCBpbiBhIGNsYXNzIGNvbXBvbmVudC4gSW4gbW9zdCBjYXNlcyB1c2luZyBhIHN0YXRlIHZhbHVlIGRpcmVjdGx5XG4gKiBpcyBwcmVmZXJhYmxlIGJ1dCBtYXkgYmUgcmVxdWlyZWQgaW4gc29tZSBhZHZhbmNlZCB1c2FnZXMgb2YgcmVmcyBmb3IgaW50ZXJvcCBvclxuICogd2hlbiBkaXJlY3QgRE9NIG1hbmlwdWxhdGlvbiBpcyByZXF1aXJlZC5cbiAqXG4gKiBgYGB0c1xuICogY29uc3QgZm9yY2VVcGRhdGUgPSB1c2VGb3JjZVVwZGF0ZSgpO1xuICpcbiAqIGNvbnN0IHVwZGF0ZU9uQ2xpY2sgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gKiAgZm9yY2VVcGRhdGUoKVxuICogfSwgW2ZvcmNlVXBkYXRlXSlcbiAqXG4gKiByZXR1cm4gPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgb25DbGljaz17dXBkYXRlT25DbGlja30+SGkgdGhlcmU8L2J1dHRvbj5cbiAqIGBgYFxuICovXG5mdW5jdGlvbiB1c2VGb3JjZVVwZGF0ZSgpIHtcbiAgLy8gVGhlIHRvZ2dsaW5nIHN0YXRlIHZhbHVlIGlzIGRlc2lnbmVkIHRvIGRlZmVhdCBSZWFjdCBvcHRpbWl6YXRpb25zIGZvciBza2lwcGluZ1xuICAvLyB1cGRhdGVzIHdoZW4gdGhleSBhcmUgc3RyaWN0bHkgZXF1YWwgdG8gdGhlIGxhc3Qgc3RhdGUgdmFsdWVcbiAgY29uc3QgWywgZGlzcGF0Y2hdID0gKDAsIF9yZWFjdC51c2VSZWR1Y2VyKShzdGF0ZSA9PiAhc3RhdGUsIGZhbHNlKTtcbiAgcmV0dXJuIGRpc3BhdGNoO1xufSJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ1c2VGb3JjZVVwZGF0ZSIsIl9yZWFjdCIsInJlcXVpcmUiLCJkaXNwYXRjaCIsInVzZVJlZHVjZXIiLCJzdGF0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useForceUpdate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useGlobalListener.js":
/*!**************************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useGlobalListener.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useGlobalListener;\nvar _useEventListener = _interopRequireDefault(__webpack_require__(/*! ./useEventListener */ \"(ssr)/./node_modules/@restart/hooks/cjs/useEventListener.js\"));\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n/**\n * Attaches an event handler outside directly to the `document`,\n * bypassing the react synthetic event system.\n *\n * ```ts\n * useGlobalListener('keydown', (event) => {\n *  console.log(event.key)\n * })\n * ```\n *\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */ function useGlobalListener(event, handler, capture = false) {\n    const documentTarget = (0, _react.useCallback)(()=>document, []);\n    return (0, _useEventListener.default)(documentTarget, event, handler, capture);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZUdsb2JhbExpc3RlbmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBZSxHQUFHRztBQUNsQixJQUFJQyxvQkFBb0JDLHVCQUF1QkMsbUJBQU9BLENBQUMsdUZBQW9CO0FBQzNFLElBQUlDLFNBQVNELG1CQUFPQSxDQUFDLHdHQUFPO0FBQzVCLFNBQVNELHVCQUF1QkcsR0FBRztJQUFJLE9BQU9BLE9BQU9BLElBQUlQLFVBQVUsR0FBR08sTUFBTTtRQUFFTixTQUFTTTtJQUFJO0FBQUc7QUFDOUY7Ozs7Ozs7Ozs7Ozs7Q0FhQyxHQUNELFNBQVNMLGtCQUFrQk0sS0FBSyxFQUFFQyxPQUFPLEVBQUVDLFVBQVUsS0FBSztJQUN4RCxNQUFNQyxpQkFBaUIsQ0FBQyxHQUFHTCxPQUFPTSxXQUFXLEVBQUUsSUFBTUMsVUFBVSxFQUFFO0lBQ2pFLE9BQU8sQ0FBQyxHQUFHVixrQkFBa0JGLE9BQU8sRUFBRVUsZ0JBQWdCSCxPQUFPQyxTQUFTQztBQUN4RSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZUdsb2JhbExpc3RlbmVyLmpzP2NlMDYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSB1c2VHbG9iYWxMaXN0ZW5lcjtcbnZhciBfdXNlRXZlbnRMaXN0ZW5lciA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdXNlRXZlbnRMaXN0ZW5lclwiKSk7XG52YXIgX3JlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cbi8qKlxuICogQXR0YWNoZXMgYW4gZXZlbnQgaGFuZGxlciBvdXRzaWRlIGRpcmVjdGx5IHRvIHRoZSBgZG9jdW1lbnRgLFxuICogYnlwYXNzaW5nIHRoZSByZWFjdCBzeW50aGV0aWMgZXZlbnQgc3lzdGVtLlxuICpcbiAqIGBgYHRzXG4gKiB1c2VHbG9iYWxMaXN0ZW5lcigna2V5ZG93bicsIChldmVudCkgPT4ge1xuICogIGNvbnNvbGUubG9nKGV2ZW50LmtleSlcbiAqIH0pXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gZXZlbnQgVGhlIERPTSBldmVudCBuYW1lXG4gKiBAcGFyYW0gaGFuZGxlciBBbiBldmVudCBoYW5kbGVyXG4gKiBAcGFyYW0gY2FwdHVyZSBXaGV0aGVyIG9yIG5vdCB0byBsaXN0ZW4gZHVyaW5nIHRoZSBjYXB0dXJlIGV2ZW50IHBoYXNlXG4gKi9cbmZ1bmN0aW9uIHVzZUdsb2JhbExpc3RlbmVyKGV2ZW50LCBoYW5kbGVyLCBjYXB0dXJlID0gZmFsc2UpIHtcbiAgY29uc3QgZG9jdW1lbnRUYXJnZXQgPSAoMCwgX3JlYWN0LnVzZUNhbGxiYWNrKSgoKSA9PiBkb2N1bWVudCwgW10pO1xuICByZXR1cm4gKDAsIF91c2VFdmVudExpc3RlbmVyLmRlZmF1bHQpKGRvY3VtZW50VGFyZ2V0LCBldmVudCwgaGFuZGxlciwgY2FwdHVyZSk7XG59Il0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInVzZUdsb2JhbExpc3RlbmVyIiwiX3VzZUV2ZW50TGlzdGVuZXIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdCIsIm9iaiIsImV2ZW50IiwiaGFuZGxlciIsImNhcHR1cmUiLCJkb2N1bWVudFRhcmdldCIsInVzZUNhbGxiYWNrIiwiZG9jdW1lbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useGlobalListener.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useImage.js":
/*!*****************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useImage.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useImage;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/**\n * Fetch and load an image for programatic use such as in a `<canvas>` element.\n *\n * @param imageOrUrl The `HtmlImageElement` or image url to load\n * @param crossOrigin The `crossorigin` attribute to set\n *\n * ```ts\n * const { image, error } = useImage('/static/kittens.png')\n * const ref = useRef<HTMLCanvasElement>()\n *\n * useEffect(() => {\n *   const ctx = ref.current.getContext('2d')\n *\n *   if (image) {\n *     ctx.drawImage(image, 0, 0)\n *   }\n * }, [ref, image])\n *\n * return (\n *   <>\n *     {error && \"there was a problem loading the image\"}\n *     <canvas ref={ref} />\n *   </>\n * ```\n */ function useImage(imageOrUrl, crossOrigin) {\n    const [state, setState] = (0, _react.useState)({\n        image: null,\n        error: null\n    });\n    (0, _react.useEffect)(()=>{\n        if (!imageOrUrl) return undefined;\n        let image;\n        if (typeof imageOrUrl === \"string\") {\n            image = new Image();\n            if (crossOrigin) image.crossOrigin = crossOrigin;\n            image.src = imageOrUrl;\n        } else {\n            image = imageOrUrl;\n            if (image.complete && image.naturalHeight > 0) {\n                setState({\n                    image,\n                    error: null\n                });\n                return;\n            }\n        }\n        function onLoad() {\n            setState({\n                image,\n                error: null\n            });\n        }\n        function onError(error) {\n            setState({\n                image,\n                error\n            });\n        }\n        image.addEventListener(\"load\", onLoad);\n        image.addEventListener(\"error\", onError);\n        return ()=>{\n            image.removeEventListener(\"load\", onLoad);\n            image.removeEventListener(\"error\", onError);\n        };\n    }, [\n        imageOrUrl,\n        crossOrigin\n    ]);\n    return state;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZUltYWdlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBZSxHQUFHRztBQUNsQixJQUFJQyxTQUFTQyxtQkFBT0EsQ0FBQyx3R0FBTztBQUM1Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBd0JDLEdBQ0QsU0FBU0YsU0FBU0csVUFBVSxFQUFFQyxXQUFXO0lBQ3ZDLE1BQU0sQ0FBQ0MsT0FBT0MsU0FBUyxHQUFHLENBQUMsR0FBR0wsT0FBT00sUUFBUSxFQUFFO1FBQzdDQyxPQUFPO1FBQ1BDLE9BQU87SUFDVDtJQUNDLElBQUdSLE9BQU9TLFNBQVMsRUFBRTtRQUNwQixJQUFJLENBQUNQLFlBQVksT0FBT1E7UUFDeEIsSUFBSUg7UUFDSixJQUFJLE9BQU9MLGVBQWUsVUFBVTtZQUNsQ0ssUUFBUSxJQUFJSTtZQUNaLElBQUlSLGFBQWFJLE1BQU1KLFdBQVcsR0FBR0E7WUFDckNJLE1BQU1LLEdBQUcsR0FBR1Y7UUFDZCxPQUFPO1lBQ0xLLFFBQVFMO1lBQ1IsSUFBSUssTUFBTU0sUUFBUSxJQUFJTixNQUFNTyxhQUFhLEdBQUcsR0FBRztnQkFDN0NULFNBQVM7b0JBQ1BFO29CQUNBQyxPQUFPO2dCQUNUO2dCQUNBO1lBQ0Y7UUFDRjtRQUNBLFNBQVNPO1lBQ1BWLFNBQVM7Z0JBQ1BFO2dCQUNBQyxPQUFPO1lBQ1Q7UUFDRjtRQUNBLFNBQVNRLFFBQVFSLEtBQUs7WUFDcEJILFNBQVM7Z0JBQ1BFO2dCQUNBQztZQUNGO1FBQ0Y7UUFDQUQsTUFBTVUsZ0JBQWdCLENBQUMsUUFBUUY7UUFDL0JSLE1BQU1VLGdCQUFnQixDQUFDLFNBQVNEO1FBQ2hDLE9BQU87WUFDTFQsTUFBTVcsbUJBQW1CLENBQUMsUUFBUUg7WUFDbENSLE1BQU1XLG1CQUFtQixDQUFDLFNBQVNGO1FBQ3JDO0lBQ0YsR0FBRztRQUFDZDtRQUFZQztLQUFZO0lBQzVCLE9BQU9DO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L2hvb2tzL2Nqcy91c2VJbWFnZS5qcz80MjFlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdXNlSW1hZ2U7XG52YXIgX3JlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuLyoqXG4gKiBGZXRjaCBhbmQgbG9hZCBhbiBpbWFnZSBmb3IgcHJvZ3JhbWF0aWMgdXNlIHN1Y2ggYXMgaW4gYSBgPGNhbnZhcz5gIGVsZW1lbnQuXG4gKlxuICogQHBhcmFtIGltYWdlT3JVcmwgVGhlIGBIdG1sSW1hZ2VFbGVtZW50YCBvciBpbWFnZSB1cmwgdG8gbG9hZFxuICogQHBhcmFtIGNyb3NzT3JpZ2luIFRoZSBgY3Jvc3NvcmlnaW5gIGF0dHJpYnV0ZSB0byBzZXRcbiAqXG4gKiBgYGB0c1xuICogY29uc3QgeyBpbWFnZSwgZXJyb3IgfSA9IHVzZUltYWdlKCcvc3RhdGljL2tpdHRlbnMucG5nJylcbiAqIGNvbnN0IHJlZiA9IHVzZVJlZjxIVE1MQ2FudmFzRWxlbWVudD4oKVxuICpcbiAqIHVzZUVmZmVjdCgoKSA9PiB7XG4gKiAgIGNvbnN0IGN0eCA9IHJlZi5jdXJyZW50LmdldENvbnRleHQoJzJkJylcbiAqXG4gKiAgIGlmIChpbWFnZSkge1xuICogICAgIGN0eC5kcmF3SW1hZ2UoaW1hZ2UsIDAsIDApXG4gKiAgIH1cbiAqIH0sIFtyZWYsIGltYWdlXSlcbiAqXG4gKiByZXR1cm4gKFxuICogICA8PlxuICogICAgIHtlcnJvciAmJiBcInRoZXJlIHdhcyBhIHByb2JsZW0gbG9hZGluZyB0aGUgaW1hZ2VcIn1cbiAqICAgICA8Y2FudmFzIHJlZj17cmVmfSAvPlxuICogICA8Lz5cbiAqIGBgYFxuICovXG5mdW5jdGlvbiB1c2VJbWFnZShpbWFnZU9yVXJsLCBjcm9zc09yaWdpbikge1xuICBjb25zdCBbc3RhdGUsIHNldFN0YXRlXSA9ICgwLCBfcmVhY3QudXNlU3RhdGUpKHtcbiAgICBpbWFnZTogbnVsbCxcbiAgICBlcnJvcjogbnVsbFxuICB9KTtcbiAgKDAsIF9yZWFjdC51c2VFZmZlY3QpKCgpID0+IHtcbiAgICBpZiAoIWltYWdlT3JVcmwpIHJldHVybiB1bmRlZmluZWQ7XG4gICAgbGV0IGltYWdlO1xuICAgIGlmICh0eXBlb2YgaW1hZ2VPclVybCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGltYWdlID0gbmV3IEltYWdlKCk7XG4gICAgICBpZiAoY3Jvc3NPcmlnaW4pIGltYWdlLmNyb3NzT3JpZ2luID0gY3Jvc3NPcmlnaW47XG4gICAgICBpbWFnZS5zcmMgPSBpbWFnZU9yVXJsO1xuICAgIH0gZWxzZSB7XG4gICAgICBpbWFnZSA9IGltYWdlT3JVcmw7XG4gICAgICBpZiAoaW1hZ2UuY29tcGxldGUgJiYgaW1hZ2UubmF0dXJhbEhlaWdodCA+IDApIHtcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIGltYWdlLFxuICAgICAgICAgIGVycm9yOiBudWxsXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIG9uTG9hZCgpIHtcbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgaW1hZ2UsXG4gICAgICAgIGVycm9yOiBudWxsXG4gICAgICB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gb25FcnJvcihlcnJvcikge1xuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBpbWFnZSxcbiAgICAgICAgZXJyb3JcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpbWFnZS5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgb25Mb2FkKTtcbiAgICBpbWFnZS5hZGRFdmVudExpc3RlbmVyKCdlcnJvcicsIG9uRXJyb3IpO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBpbWFnZS5yZW1vdmVFdmVudExpc3RlbmVyKCdsb2FkJywgb25Mb2FkKTtcbiAgICAgIGltYWdlLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgb25FcnJvcik7XG4gICAgfTtcbiAgfSwgW2ltYWdlT3JVcmwsIGNyb3NzT3JpZ2luXSk7XG4gIHJldHVybiBzdGF0ZTtcbn0iXSwibmFtZXMiOlsiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidXNlSW1hZ2UiLCJfcmVhY3QiLCJyZXF1aXJlIiwiaW1hZ2VPclVybCIsImNyb3NzT3JpZ2luIiwic3RhdGUiLCJzZXRTdGF0ZSIsInVzZVN0YXRlIiwiaW1hZ2UiLCJlcnJvciIsInVzZUVmZmVjdCIsInVuZGVmaW5lZCIsIkltYWdlIiwic3JjIiwiY29tcGxldGUiLCJuYXR1cmFsSGVpZ2h0Iiwib25Mb2FkIiwib25FcnJvciIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useImage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useInterval.js":
/*!********************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useInterval.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _useCommittedRef = _interopRequireDefault(__webpack_require__(/*! ./useCommittedRef */ \"(ssr)/./node_modules/@restart/hooks/cjs/useCommittedRef.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n/**\n * Creates a `setInterval` that is properly cleaned up when a component unmounted\n *\n * ```tsx\n *  function Timer() {\n *    const [timer, setTimer] = useState(0)\n *    useInterval(() => setTimer(i => i + 1), 1000)\n *\n *    return <span>{timer} seconds past</span>\n *  }\n * ```\n *\n * @param fn an function run on each interval\n * @param ms The milliseconds duration of the interval\n */ /**\n * Creates a pausable `setInterval` that is properly cleaned up when a component unmounted\n *\n * ```tsx\n *  const [paused, setPaused] = useState(false)\n *  const [timer, setTimer] = useState(0)\n *\n *  useInterval(() => setTimer(i => i + 1), 1000, paused)\n *\n *  return (\n *    <span>\n *      {timer} seconds past\n *\n *      <button onClick={() => setPaused(p => !p)}>{paused ? 'Play' : 'Pause' }</button>\n *    </span>\n * )\n * ```\n *\n * @param fn an function run on each interval\n * @param ms The milliseconds duration of the interval\n * @param paused Whether or not the interval is currently running\n */ /**\n * Creates a pausable `setInterval` that _fires_ immediately and is\n * properly cleaned up when a component unmounted\n *\n * ```tsx\n *  const [timer, setTimer] = useState(-1)\n *  useInterval(() => setTimer(i => i + 1), 1000, false, true)\n *\n *  // will update to 0 on the first effect\n *  return <span>{timer} seconds past</span>\n * ```\n *\n * @param fn an function run on each interval\n * @param ms The milliseconds duration of the interval\n * @param paused Whether or not the interval is currently running\n * @param runImmediately Whether to run the function immediately on mount or unpause\n * rather than waiting for the first interval to elapse\n *\n\n */ function useInterval(fn, ms, paused = false, runImmediately = false) {\n    let handle;\n    const fnRef = (0, _useCommittedRef.default)(fn);\n    // this ref is necessary b/c useEffect will sometimes miss a paused toggle\n    // orphaning a setTimeout chain in the aether, so relying on it's refresh logic is not reliable.\n    const pausedRef = (0, _useCommittedRef.default)(paused);\n    const tick = ()=>{\n        if (pausedRef.current) return;\n        fnRef.current();\n        schedule(); // eslint-disable-line no-use-before-define\n    };\n    const schedule = ()=>{\n        clearTimeout(handle);\n        handle = setTimeout(tick, ms);\n    };\n    (0, _react.useEffect)(()=>{\n        if (runImmediately) {\n            tick();\n        } else {\n            schedule();\n        }\n        return ()=>clearTimeout(handle);\n    }, [\n        paused,\n        runImmediately\n    ]);\n}\nvar _default = useInterval;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZUludGVydmFsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBZSxHQUFHLEtBQUs7QUFDdkIsSUFBSUcsU0FBU0MsbUJBQU9BLENBQUMsd0dBQU87QUFDNUIsSUFBSUMsbUJBQW1CQyx1QkFBdUJGLG1CQUFPQSxDQUFDLHFGQUFtQjtBQUN6RSxTQUFTRSx1QkFBdUJDLEdBQUc7SUFBSSxPQUFPQSxPQUFPQSxJQUFJTixVQUFVLEdBQUdNLE1BQU07UUFBRUwsU0FBU0s7SUFBSTtBQUFHO0FBQzlGOzs7Ozs7Ozs7Ozs7OztDQWNDLEdBRUQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQXFCQyxHQUVEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBbUJDLEdBRUQsU0FBU0MsWUFBWUMsRUFBRSxFQUFFQyxFQUFFLEVBQUVDLFNBQVMsS0FBSyxFQUFFQyxpQkFBaUIsS0FBSztJQUNqRSxJQUFJQztJQUNKLE1BQU1DLFFBQVEsQ0FBQyxHQUFHVCxpQkFBaUJILE9BQU8sRUFBRU87SUFDNUMsMEVBQTBFO0lBQzFFLGdHQUFnRztJQUNoRyxNQUFNTSxZQUFZLENBQUMsR0FBR1YsaUJBQWlCSCxPQUFPLEVBQUVTO0lBQ2hELE1BQU1LLE9BQU87UUFDWCxJQUFJRCxVQUFVRSxPQUFPLEVBQUU7UUFDdkJILE1BQU1HLE9BQU87UUFDYkMsWUFBWSwyQ0FBMkM7SUFDekQ7SUFFQSxNQUFNQSxXQUFXO1FBQ2ZDLGFBQWFOO1FBQ2JBLFNBQVNPLFdBQVdKLE1BQU1OO0lBQzVCO0lBQ0MsSUFBR1AsT0FBT2tCLFNBQVMsRUFBRTtRQUNwQixJQUFJVCxnQkFBZ0I7WUFDbEJJO1FBQ0YsT0FBTztZQUNMRTtRQUNGO1FBQ0EsT0FBTyxJQUFNQyxhQUFhTjtJQUM1QixHQUFHO1FBQUNGO1FBQVFDO0tBQWU7QUFDN0I7QUFDQSxJQUFJVSxXQUFXZDtBQUNmUixrQkFBZSxHQUFHc0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L2hvb2tzL2Nqcy91c2VJbnRlcnZhbC5qcz84ZWM2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIF9yZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbnZhciBfdXNlQ29tbWl0dGVkUmVmID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91c2VDb21taXR0ZWRSZWZcIikpO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cbi8qKlxuICogQ3JlYXRlcyBhIGBzZXRJbnRlcnZhbGAgdGhhdCBpcyBwcm9wZXJseSBjbGVhbmVkIHVwIHdoZW4gYSBjb21wb25lbnQgdW5tb3VudGVkXG4gKlxuICogYGBgdHN4XG4gKiAgZnVuY3Rpb24gVGltZXIoKSB7XG4gKiAgICBjb25zdCBbdGltZXIsIHNldFRpbWVyXSA9IHVzZVN0YXRlKDApXG4gKiAgICB1c2VJbnRlcnZhbCgoKSA9PiBzZXRUaW1lcihpID0+IGkgKyAxKSwgMTAwMClcbiAqXG4gKiAgICByZXR1cm4gPHNwYW4+e3RpbWVyfSBzZWNvbmRzIHBhc3Q8L3NwYW4+XG4gKiAgfVxuICogYGBgXG4gKlxuICogQHBhcmFtIGZuIGFuIGZ1bmN0aW9uIHJ1biBvbiBlYWNoIGludGVydmFsXG4gKiBAcGFyYW0gbXMgVGhlIG1pbGxpc2Vjb25kcyBkdXJhdGlvbiBvZiB0aGUgaW50ZXJ2YWxcbiAqL1xuXG4vKipcbiAqIENyZWF0ZXMgYSBwYXVzYWJsZSBgc2V0SW50ZXJ2YWxgIHRoYXQgaXMgcHJvcGVybHkgY2xlYW5lZCB1cCB3aGVuIGEgY29tcG9uZW50IHVubW91bnRlZFxuICpcbiAqIGBgYHRzeFxuICogIGNvbnN0IFtwYXVzZWQsIHNldFBhdXNlZF0gPSB1c2VTdGF0ZShmYWxzZSlcbiAqICBjb25zdCBbdGltZXIsIHNldFRpbWVyXSA9IHVzZVN0YXRlKDApXG4gKlxuICogIHVzZUludGVydmFsKCgpID0+IHNldFRpbWVyKGkgPT4gaSArIDEpLCAxMDAwLCBwYXVzZWQpXG4gKlxuICogIHJldHVybiAoXG4gKiAgICA8c3Bhbj5cbiAqICAgICAge3RpbWVyfSBzZWNvbmRzIHBhc3RcbiAqXG4gKiAgICAgIDxidXR0b24gb25DbGljaz17KCkgPT4gc2V0UGF1c2VkKHAgPT4gIXApfT57cGF1c2VkID8gJ1BsYXknIDogJ1BhdXNlJyB9PC9idXR0b24+XG4gKiAgICA8L3NwYW4+XG4gKiApXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gZm4gYW4gZnVuY3Rpb24gcnVuIG9uIGVhY2ggaW50ZXJ2YWxcbiAqIEBwYXJhbSBtcyBUaGUgbWlsbGlzZWNvbmRzIGR1cmF0aW9uIG9mIHRoZSBpbnRlcnZhbFxuICogQHBhcmFtIHBhdXNlZCBXaGV0aGVyIG9yIG5vdCB0aGUgaW50ZXJ2YWwgaXMgY3VycmVudGx5IHJ1bm5pbmdcbiAqL1xuXG4vKipcbiAqIENyZWF0ZXMgYSBwYXVzYWJsZSBgc2V0SW50ZXJ2YWxgIHRoYXQgX2ZpcmVzXyBpbW1lZGlhdGVseSBhbmQgaXNcbiAqIHByb3Blcmx5IGNsZWFuZWQgdXAgd2hlbiBhIGNvbXBvbmVudCB1bm1vdW50ZWRcbiAqXG4gKiBgYGB0c3hcbiAqICBjb25zdCBbdGltZXIsIHNldFRpbWVyXSA9IHVzZVN0YXRlKC0xKVxuICogIHVzZUludGVydmFsKCgpID0+IHNldFRpbWVyKGkgPT4gaSArIDEpLCAxMDAwLCBmYWxzZSwgdHJ1ZSlcbiAqXG4gKiAgLy8gd2lsbCB1cGRhdGUgdG8gMCBvbiB0aGUgZmlyc3QgZWZmZWN0XG4gKiAgcmV0dXJuIDxzcGFuPnt0aW1lcn0gc2Vjb25kcyBwYXN0PC9zcGFuPlxuICogYGBgXG4gKlxuICogQHBhcmFtIGZuIGFuIGZ1bmN0aW9uIHJ1biBvbiBlYWNoIGludGVydmFsXG4gKiBAcGFyYW0gbXMgVGhlIG1pbGxpc2Vjb25kcyBkdXJhdGlvbiBvZiB0aGUgaW50ZXJ2YWxcbiAqIEBwYXJhbSBwYXVzZWQgV2hldGhlciBvciBub3QgdGhlIGludGVydmFsIGlzIGN1cnJlbnRseSBydW5uaW5nXG4gKiBAcGFyYW0gcnVuSW1tZWRpYXRlbHkgV2hldGhlciB0byBydW4gdGhlIGZ1bmN0aW9uIGltbWVkaWF0ZWx5IG9uIG1vdW50IG9yIHVucGF1c2VcbiAqIHJhdGhlciB0aGFuIHdhaXRpbmcgZm9yIHRoZSBmaXJzdCBpbnRlcnZhbCB0byBlbGFwc2VcbiAqXG5cbiAqL1xuXG5mdW5jdGlvbiB1c2VJbnRlcnZhbChmbiwgbXMsIHBhdXNlZCA9IGZhbHNlLCBydW5JbW1lZGlhdGVseSA9IGZhbHNlKSB7XG4gIGxldCBoYW5kbGU7XG4gIGNvbnN0IGZuUmVmID0gKDAsIF91c2VDb21taXR0ZWRSZWYuZGVmYXVsdCkoZm4pO1xuICAvLyB0aGlzIHJlZiBpcyBuZWNlc3NhcnkgYi9jIHVzZUVmZmVjdCB3aWxsIHNvbWV0aW1lcyBtaXNzIGEgcGF1c2VkIHRvZ2dsZVxuICAvLyBvcnBoYW5pbmcgYSBzZXRUaW1lb3V0IGNoYWluIGluIHRoZSBhZXRoZXIsIHNvIHJlbHlpbmcgb24gaXQncyByZWZyZXNoIGxvZ2ljIGlzIG5vdCByZWxpYWJsZS5cbiAgY29uc3QgcGF1c2VkUmVmID0gKDAsIF91c2VDb21taXR0ZWRSZWYuZGVmYXVsdCkocGF1c2VkKTtcbiAgY29uc3QgdGljayA9ICgpID0+IHtcbiAgICBpZiAocGF1c2VkUmVmLmN1cnJlbnQpIHJldHVybjtcbiAgICBmblJlZi5jdXJyZW50KCk7XG4gICAgc2NoZWR1bGUoKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11c2UtYmVmb3JlLWRlZmluZVxuICB9O1xuXG4gIGNvbnN0IHNjaGVkdWxlID0gKCkgPT4ge1xuICAgIGNsZWFyVGltZW91dChoYW5kbGUpO1xuICAgIGhhbmRsZSA9IHNldFRpbWVvdXQodGljaywgbXMpO1xuICB9O1xuICAoMCwgX3JlYWN0LnVzZUVmZmVjdCkoKCkgPT4ge1xuICAgIGlmIChydW5JbW1lZGlhdGVseSkge1xuICAgICAgdGljaygpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzY2hlZHVsZSgpO1xuICAgIH1cbiAgICByZXR1cm4gKCkgPT4gY2xlYXJUaW1lb3V0KGhhbmRsZSk7XG4gIH0sIFtwYXVzZWQsIHJ1bkltbWVkaWF0ZWx5XSk7XG59XG52YXIgX2RlZmF1bHQgPSB1c2VJbnRlcnZhbDtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfcmVhY3QiLCJyZXF1aXJlIiwiX3VzZUNvbW1pdHRlZFJlZiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJvYmoiLCJ1c2VJbnRlcnZhbCIsImZuIiwibXMiLCJwYXVzZWQiLCJydW5JbW1lZGlhdGVseSIsImhhbmRsZSIsImZuUmVmIiwicGF1c2VkUmVmIiwidGljayIsImN1cnJlbnQiLCJzY2hlZHVsZSIsImNsZWFyVGltZW91dCIsInNldFRpbWVvdXQiLCJ1c2VFZmZlY3QiLCJfZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useInterval.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useIsomorphicEffect.js":
/*!****************************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useIsomorphicEffect.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nconst isReactNative = typeof global !== \"undefined\" && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === \"ReactNative\";\nconst isDOM = typeof document !== \"undefined\";\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */ var _default = isDOM || isReactNative ? _react.useLayoutEffect : _react.useEffect;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZUlzb21vcnBoaWNFZmZlY3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGtCQUFlLEdBQUcsS0FBSztBQUN2QixJQUFJRyxTQUFTQyxtQkFBT0EsQ0FBQyx3R0FBTztBQUM1QixNQUFNQyxnQkFBZ0IsT0FBT0MsV0FBVyxlQUN4QyxhQUFhO0FBQ2JBLE9BQU9DLFNBQVMsSUFDaEIsYUFBYTtBQUNiRCxPQUFPQyxTQUFTLENBQUNDLE9BQU8sS0FBSztBQUM3QixNQUFNQyxRQUFRLE9BQU9DLGFBQWE7QUFFbEM7Ozs7Ozs7Q0FPQyxHQUNELElBQUlDLFdBQVdGLFNBQVNKLGdCQUFnQkYsT0FBT1MsZUFBZSxHQUFHVCxPQUFPVSxTQUFTO0FBQ2pGYixrQkFBZSxHQUFHVyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZUlzb21vcnBoaWNFZmZlY3QuanM/YWE4MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBfcmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCBpc1JlYWN0TmF0aXZlID0gdHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgJiZcbi8vIEB0cy1pZ25vcmVcbmdsb2JhbC5uYXZpZ2F0b3IgJiZcbi8vIEB0cy1pZ25vcmVcbmdsb2JhbC5uYXZpZ2F0b3IucHJvZHVjdCA9PT0gJ1JlYWN0TmF0aXZlJztcbmNvbnN0IGlzRE9NID0gdHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJztcblxuLyoqXG4gKiBJcyBgdXNlTGF5b3V0RWZmZWN0YCBpbiBhIERPTSBvciBSZWFjdCBOYXRpdmUgZW52aXJvbm1lbnQsIG90aGVyd2lzZSByZXNvbHZlcyB0byB1c2VFZmZlY3RcbiAqIE9ubHkgdXNlZnVsIHRvIGF2b2lkIHRoZSBjb25zb2xlIHdhcm5pbmcuXG4gKlxuICogUFJFRkVSIGB1c2VFZmZlY3RgIFVOTEVTUyBZT1UgS05PVyBXSEFUIFlPVSBBUkUgRE9JTkcuXG4gKlxuICogQGNhdGVnb3J5IGVmZmVjdHNcbiAqL1xudmFyIF9kZWZhdWx0ID0gaXNET00gfHwgaXNSZWFjdE5hdGl2ZSA/IF9yZWFjdC51c2VMYXlvdXRFZmZlY3QgOiBfcmVhY3QudXNlRWZmZWN0O1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIl9yZWFjdCIsInJlcXVpcmUiLCJpc1JlYWN0TmF0aXZlIiwiZ2xvYmFsIiwibmF2aWdhdG9yIiwicHJvZHVjdCIsImlzRE9NIiwiZG9jdW1lbnQiLCJfZGVmYXVsdCIsInVzZUxheW91dEVmZmVjdCIsInVzZUVmZmVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useIsomorphicEffect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useMergeState.js":
/*!**********************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useMergeState.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useMergeState;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/**\n * Updates state, partial updates are merged into existing state values\n */ /**\n * Mimics a React class component's state model, of having a single unified\n * `state` object and an updater that merges updates into the existing state, as\n * opposed to replacing it.\n *\n * ```js\n * const [state, setState] = useMergeState({ name: 'Betsy', age: 24 })\n *\n * setState({ name: 'Johan' }) // { name: 'Johan', age: 24 }\n *\n * setState(state => ({ age: state.age + 10 })) // { name: 'Johan', age: 34 }\n * ```\n *\n * @param initialState The initial state object\n */ function useMergeState(initialState) {\n    const [state, setState] = (0, _react.useState)(initialState);\n    const updater = (0, _react.useCallback)((update)=>{\n        if (update === null) return;\n        if (typeof update === \"function\") {\n            setState((state)=>{\n                const nextState = update(state);\n                return nextState == null ? state : Object.assign({}, state, nextState);\n            });\n        } else {\n            setState((state)=>Object.assign({}, state, update));\n        }\n    }, [\n        setState\n    ]);\n    return [\n        state,\n        updater\n    ];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZU1lcmdlU3RhdGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGtCQUFlLEdBQUdHO0FBQ2xCLElBQUlDLFNBQVNDLG1CQUFPQSxDQUFDLHdHQUFPO0FBQzVCOztDQUVDLEdBRUQ7Ozs7Ozs7Ozs7Ozs7O0NBY0MsR0FDRCxTQUFTRixjQUFjRyxZQUFZO0lBQ2pDLE1BQU0sQ0FBQ0MsT0FBT0MsU0FBUyxHQUFHLENBQUMsR0FBR0osT0FBT0ssUUFBUSxFQUFFSDtJQUMvQyxNQUFNSSxVQUFVLENBQUMsR0FBR04sT0FBT08sV0FBVyxFQUFFQyxDQUFBQTtRQUN0QyxJQUFJQSxXQUFXLE1BQU07UUFDckIsSUFBSSxPQUFPQSxXQUFXLFlBQVk7WUFDaENKLFNBQVNELENBQUFBO2dCQUNQLE1BQU1NLFlBQVlELE9BQU9MO2dCQUN6QixPQUFPTSxhQUFhLE9BQU9OLFFBQVFPLE9BQU9DLE1BQU0sQ0FBQyxDQUFDLEdBQUdSLE9BQU9NO1lBQzlEO1FBQ0YsT0FBTztZQUNMTCxTQUFTRCxDQUFBQSxRQUFTTyxPQUFPQyxNQUFNLENBQUMsQ0FBQyxHQUFHUixPQUFPSztRQUM3QztJQUNGLEdBQUc7UUFBQ0o7S0FBUztJQUNiLE9BQU87UUFBQ0Q7UUFBT0c7S0FBUTtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZU1lcmdlU3RhdGUuanM/MTFiMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHVzZU1lcmdlU3RhdGU7XG52YXIgX3JlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuLyoqXG4gKiBVcGRhdGVzIHN0YXRlLCBwYXJ0aWFsIHVwZGF0ZXMgYXJlIG1lcmdlZCBpbnRvIGV4aXN0aW5nIHN0YXRlIHZhbHVlc1xuICovXG5cbi8qKlxuICogTWltaWNzIGEgUmVhY3QgY2xhc3MgY29tcG9uZW50J3Mgc3RhdGUgbW9kZWwsIG9mIGhhdmluZyBhIHNpbmdsZSB1bmlmaWVkXG4gKiBgc3RhdGVgIG9iamVjdCBhbmQgYW4gdXBkYXRlciB0aGF0IG1lcmdlcyB1cGRhdGVzIGludG8gdGhlIGV4aXN0aW5nIHN0YXRlLCBhc1xuICogb3Bwb3NlZCB0byByZXBsYWNpbmcgaXQuXG4gKlxuICogYGBganNcbiAqIGNvbnN0IFtzdGF0ZSwgc2V0U3RhdGVdID0gdXNlTWVyZ2VTdGF0ZSh7IG5hbWU6ICdCZXRzeScsIGFnZTogMjQgfSlcbiAqXG4gKiBzZXRTdGF0ZSh7IG5hbWU6ICdKb2hhbicgfSkgLy8geyBuYW1lOiAnSm9oYW4nLCBhZ2U6IDI0IH1cbiAqXG4gKiBzZXRTdGF0ZShzdGF0ZSA9PiAoeyBhZ2U6IHN0YXRlLmFnZSArIDEwIH0pKSAvLyB7IG5hbWU6ICdKb2hhbicsIGFnZTogMzQgfVxuICogYGBgXG4gKlxuICogQHBhcmFtIGluaXRpYWxTdGF0ZSBUaGUgaW5pdGlhbCBzdGF0ZSBvYmplY3RcbiAqL1xuZnVuY3Rpb24gdXNlTWVyZ2VTdGF0ZShpbml0aWFsU3RhdGUpIHtcbiAgY29uc3QgW3N0YXRlLCBzZXRTdGF0ZV0gPSAoMCwgX3JlYWN0LnVzZVN0YXRlKShpbml0aWFsU3RhdGUpO1xuICBjb25zdCB1cGRhdGVyID0gKDAsIF9yZWFjdC51c2VDYWxsYmFjaykodXBkYXRlID0+IHtcbiAgICBpZiAodXBkYXRlID09PSBudWxsKSByZXR1cm47XG4gICAgaWYgKHR5cGVvZiB1cGRhdGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHNldFN0YXRlKHN0YXRlID0+IHtcbiAgICAgICAgY29uc3QgbmV4dFN0YXRlID0gdXBkYXRlKHN0YXRlKTtcbiAgICAgICAgcmV0dXJuIG5leHRTdGF0ZSA9PSBudWxsID8gc3RhdGUgOiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwgbmV4dFN0YXRlKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZXRTdGF0ZShzdGF0ZSA9PiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwgdXBkYXRlKSk7XG4gICAgfVxuICB9LCBbc2V0U3RhdGVdKTtcbiAgcmV0dXJuIFtzdGF0ZSwgdXBkYXRlcl07XG59Il0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInVzZU1lcmdlU3RhdGUiLCJfcmVhY3QiLCJyZXF1aXJlIiwiaW5pdGlhbFN0YXRlIiwic3RhdGUiLCJzZXRTdGF0ZSIsInVzZVN0YXRlIiwidXBkYXRlciIsInVzZUNhbGxiYWNrIiwidXBkYXRlIiwibmV4dFN0YXRlIiwiT2JqZWN0IiwiYXNzaWduIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useMergeState.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useMergeStateFromProps.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useMergeStateFromProps.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useMergeStateFromProps;\nvar _useMergeState = _interopRequireDefault(__webpack_require__(/*! ./useMergeState */ \"(ssr)/./node_modules/@restart/hooks/cjs/useMergeState.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction useMergeStateFromProps(props, gDSFP, initialState) {\n    const [state, setState] = (0, _useMergeState.default)(initialState);\n    const nextState = gDSFP(props, state);\n    if (nextState !== null) setState(nextState);\n    return [\n        state,\n        setState\n    ];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZU1lcmdlU3RhdGVGcm9tUHJvcHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGtCQUFlLEdBQUdHO0FBQ2xCLElBQUlDLGlCQUFpQkMsdUJBQXVCQyxtQkFBT0EsQ0FBQyxpRkFBaUI7QUFDckUsU0FBU0QsdUJBQXVCRSxHQUFHO0lBQUksT0FBT0EsT0FBT0EsSUFBSU4sVUFBVSxHQUFHTSxNQUFNO1FBQUVMLFNBQVNLO0lBQUk7QUFBRztBQUM5RixTQUFTSix1QkFBdUJLLEtBQUssRUFBRUMsS0FBSyxFQUFFQyxZQUFZO0lBQ3hELE1BQU0sQ0FBQ0MsT0FBT0MsU0FBUyxHQUFHLENBQUMsR0FBR1IsZUFBZUYsT0FBTyxFQUFFUTtJQUN0RCxNQUFNRyxZQUFZSixNQUFNRCxPQUFPRztJQUMvQixJQUFJRSxjQUFjLE1BQU1ELFNBQVNDO0lBQ2pDLE9BQU87UUFBQ0Y7UUFBT0M7S0FBUztBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZU1lcmdlU3RhdGVGcm9tUHJvcHMuanM/NTFjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHVzZU1lcmdlU3RhdGVGcm9tUHJvcHM7XG52YXIgX3VzZU1lcmdlU3RhdGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3VzZU1lcmdlU3RhdGVcIikpO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cbmZ1bmN0aW9uIHVzZU1lcmdlU3RhdGVGcm9tUHJvcHMocHJvcHMsIGdEU0ZQLCBpbml0aWFsU3RhdGUpIHtcbiAgY29uc3QgW3N0YXRlLCBzZXRTdGF0ZV0gPSAoMCwgX3VzZU1lcmdlU3RhdGUuZGVmYXVsdCkoaW5pdGlhbFN0YXRlKTtcbiAgY29uc3QgbmV4dFN0YXRlID0gZ0RTRlAocHJvcHMsIHN0YXRlKTtcbiAgaWYgKG5leHRTdGF0ZSAhPT0gbnVsbCkgc2V0U3RhdGUobmV4dFN0YXRlKTtcbiAgcmV0dXJuIFtzdGF0ZSwgc2V0U3RhdGVdO1xufSJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ1c2VNZXJnZVN0YXRlRnJvbVByb3BzIiwiX3VzZU1lcmdlU3RhdGUiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIm9iaiIsInByb3BzIiwiZ0RTRlAiLCJpbml0aWFsU3RhdGUiLCJzdGF0ZSIsInNldFN0YXRlIiwibmV4dFN0YXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useMergeStateFromProps.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useMergedRefs.js":
/*!**********************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useMergedRefs.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nexports.mergeRefs = mergeRefs;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nconst toFnRef = (ref)=>!ref || typeof ref === \"function\" ? ref : (value)=>{\n        ref.current = value;\n    };\nfunction mergeRefs(refA, refB) {\n    const a = toFnRef(refA);\n    const b = toFnRef(refB);\n    return (value)=>{\n        if (a) a(value);\n        if (b) b(value);\n    };\n}\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */ function useMergedRefs(refA, refB) {\n    return (0, _react.useMemo)(()=>mergeRefs(refA, refB), [\n        refA,\n        refB\n    ]);\n}\nvar _default = useMergedRefs;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZU1lcmdlZFJlZnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGtCQUFlLEdBQUcsS0FBSztBQUN2QkEsaUJBQWlCLEdBQUdHO0FBQ3BCLElBQUlDLFNBQVNDLG1CQUFPQSxDQUFDLHdHQUFPO0FBQzVCLE1BQU1DLFVBQVVDLENBQUFBLE1BQU8sQ0FBQ0EsT0FBTyxPQUFPQSxRQUFRLGFBQWFBLE1BQU1DLENBQUFBO1FBQy9ERCxJQUFJRSxPQUFPLEdBQUdEO0lBQ2hCO0FBQ0EsU0FBU0wsVUFBVU8sSUFBSSxFQUFFQyxJQUFJO0lBQzNCLE1BQU1DLElBQUlOLFFBQVFJO0lBQ2xCLE1BQU1HLElBQUlQLFFBQVFLO0lBQ2xCLE9BQU9ILENBQUFBO1FBQ0wsSUFBSUksR0FBR0EsRUFBRUo7UUFDVCxJQUFJSyxHQUFHQSxFQUFFTDtJQUNYO0FBQ0Y7QUFFQTs7Ozs7Ozs7Ozs7Ozs7O0NBZUMsR0FDRCxTQUFTTSxjQUFjSixJQUFJLEVBQUVDLElBQUk7SUFDL0IsT0FBTyxDQUFDLEdBQUdQLE9BQU9XLE9BQU8sRUFBRSxJQUFNWixVQUFVTyxNQUFNQyxPQUFPO1FBQUNEO1FBQU1DO0tBQUs7QUFDdEU7QUFDQSxJQUFJSyxXQUFXRjtBQUNmZCxrQkFBZSxHQUFHZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L2hvb2tzL2Nqcy91c2VNZXJnZWRSZWZzLmpzP2I2ZDciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5leHBvcnRzLm1lcmdlUmVmcyA9IG1lcmdlUmVmcztcbnZhciBfcmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCB0b0ZuUmVmID0gcmVmID0+ICFyZWYgfHwgdHlwZW9mIHJlZiA9PT0gJ2Z1bmN0aW9uJyA/IHJlZiA6IHZhbHVlID0+IHtcbiAgcmVmLmN1cnJlbnQgPSB2YWx1ZTtcbn07XG5mdW5jdGlvbiBtZXJnZVJlZnMocmVmQSwgcmVmQikge1xuICBjb25zdCBhID0gdG9GblJlZihyZWZBKTtcbiAgY29uc3QgYiA9IHRvRm5SZWYocmVmQik7XG4gIHJldHVybiB2YWx1ZSA9PiB7XG4gICAgaWYgKGEpIGEodmFsdWUpO1xuICAgIGlmIChiKSBiKHZhbHVlKTtcbiAgfTtcbn1cblxuLyoqXG4gKiBDcmVhdGUgYW5kIHJldHVybnMgYSBzaW5nbGUgY2FsbGJhY2sgcmVmIGNvbXBvc2VkIGZyb20gdHdvIG90aGVyIFJlZnMuXG4gKlxuICogYGBgdHN4XG4gKiBjb25zdCBCdXR0b24gPSBSZWFjdC5mb3J3YXJkUmVmKChwcm9wcywgcmVmKSA9PiB7XG4gKiAgIGNvbnN0IFtlbGVtZW50LCBhdHRhY2hSZWZdID0gdXNlQ2FsbGJhY2tSZWY8SFRNTEJ1dHRvbkVsZW1lbnQ+KCk7XG4gKiAgIGNvbnN0IG1lcmdlZFJlZiA9IHVzZU1lcmdlZFJlZnMocmVmLCBhdHRhY2hSZWYpO1xuICpcbiAqICAgcmV0dXJuIDxidXR0b24gcmVmPXttZXJnZWRSZWZ9IHsuLi5wcm9wc30vPlxuICogfSlcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSByZWZBIEEgQ2FsbGJhY2sgb3IgbXV0YWJsZSBSZWZcbiAqIEBwYXJhbSByZWZCIEEgQ2FsbGJhY2sgb3IgbXV0YWJsZSBSZWZcbiAqIEBjYXRlZ29yeSByZWZzXG4gKi9cbmZ1bmN0aW9uIHVzZU1lcmdlZFJlZnMocmVmQSwgcmVmQikge1xuICByZXR1cm4gKDAsIF9yZWFjdC51c2VNZW1vKSgoKSA9PiBtZXJnZVJlZnMocmVmQSwgcmVmQiksIFtyZWZBLCByZWZCXSk7XG59XG52YXIgX2RlZmF1bHQgPSB1c2VNZXJnZWRSZWZzO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIm1lcmdlUmVmcyIsIl9yZWFjdCIsInJlcXVpcmUiLCJ0b0ZuUmVmIiwicmVmIiwidmFsdWUiLCJjdXJyZW50IiwicmVmQSIsInJlZkIiLCJhIiwiYiIsInVzZU1lcmdlZFJlZnMiLCJ1c2VNZW1vIiwiX2RlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useMergedRefs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useMounted.js":
/*!*******************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useMounted.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useMounted;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */ function useMounted() {\n    const mounted = (0, _react.useRef)(true);\n    const isMounted = (0, _react.useRef)(()=>mounted.current);\n    (0, _react.useEffect)(()=>{\n        mounted.current = true;\n        return ()=>{\n            mounted.current = false;\n        };\n    }, []);\n    return isMounted.current;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZU1vdW50ZWQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGtCQUFlLEdBQUdHO0FBQ2xCLElBQUlDLFNBQVNDLG1CQUFPQSxDQUFDLHdHQUFPO0FBQzVCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBbUJDLEdBQ0QsU0FBU0Y7SUFDUCxNQUFNRyxVQUFVLENBQUMsR0FBR0YsT0FBT0csTUFBTSxFQUFFO0lBQ25DLE1BQU1DLFlBQVksQ0FBQyxHQUFHSixPQUFPRyxNQUFNLEVBQUUsSUFBTUQsUUFBUUcsT0FBTztJQUN6RCxJQUFHTCxPQUFPTSxTQUFTLEVBQUU7UUFDcEJKLFFBQVFHLE9BQU8sR0FBRztRQUNsQixPQUFPO1lBQ0xILFFBQVFHLE9BQU8sR0FBRztRQUNwQjtJQUNGLEdBQUcsRUFBRTtJQUNMLE9BQU9ELFVBQVVDLE9BQU87QUFDMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L2hvb2tzL2Nqcy91c2VNb3VudGVkLmpzP2JjYmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSB1c2VNb3VudGVkO1xudmFyIF9yZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbi8qKlxuICogVHJhY2sgd2hldGhlciBhIGNvbXBvbmVudCBpcyBjdXJyZW50IG1vdW50ZWQuIEdlbmVyYWxseSBsZXNzIHByZWZlcmFibGUgdGhhblxuICogcHJvcGVybGx5IGNhbmNlbGluZyBlZmZlY3RzIHNvIHRoZXkgZG9uJ3QgcnVuIGFmdGVyIGEgY29tcG9uZW50IGlzIHVubW91bnRlZCxcbiAqIGJ1dCBoZWxwZnVsIGluIGNhc2VzIHdoZXJlIHRoYXQgaXNuJ3QgZmVhc2libGUsIHN1Y2ggYXMgYSBgUHJvbWlzZWAgcmVzb2x1dGlvbi5cbiAqXG4gKiBAcmV0dXJucyBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyB0aGUgY3VycmVudCBpc01vdW50ZWQgc3RhdGUgb2YgdGhlIGNvbXBvbmVudFxuICpcbiAqIGBgYHRzXG4gKiBjb25zdCBbZGF0YSwgc2V0RGF0YV0gPSB1c2VTdGF0ZShudWxsKVxuICogY29uc3QgaXNNb3VudGVkID0gdXNlTW91bnRlZCgpXG4gKlxuICogdXNlRWZmZWN0KCgpID0+IHtcbiAqICAgZmV0Y2hkYXRhKCkudGhlbigobmV3RGF0YSkgPT4ge1xuICogICAgICBpZiAoaXNNb3VudGVkKCkpIHtcbiAqICAgICAgICBzZXREYXRhKG5ld0RhdGEpO1xuICogICAgICB9XG4gKiAgIH0pXG4gKiB9KVxuICogYGBgXG4gKi9cbmZ1bmN0aW9uIHVzZU1vdW50ZWQoKSB7XG4gIGNvbnN0IG1vdW50ZWQgPSAoMCwgX3JlYWN0LnVzZVJlZikodHJ1ZSk7XG4gIGNvbnN0IGlzTW91bnRlZCA9ICgwLCBfcmVhY3QudXNlUmVmKSgoKSA9PiBtb3VudGVkLmN1cnJlbnQpO1xuICAoMCwgX3JlYWN0LnVzZUVmZmVjdCkoKCkgPT4ge1xuICAgIG1vdW50ZWQuY3VycmVudCA9IHRydWU7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIG1vdW50ZWQuY3VycmVudCA9IGZhbHNlO1xuICAgIH07XG4gIH0sIFtdKTtcbiAgcmV0dXJuIGlzTW91bnRlZC5jdXJyZW50O1xufSJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ1c2VNb3VudGVkIiwiX3JlYWN0IiwicmVxdWlyZSIsIm1vdW50ZWQiLCJ1c2VSZWYiLCJpc01vdW50ZWQiLCJjdXJyZW50IiwidXNlRWZmZWN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useMounted.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/usePrevious.js":
/*!********************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/usePrevious.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = usePrevious;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */ function usePrevious(value) {\n    const ref = (0, _react.useRef)(null);\n    (0, _react.useEffect)(()=>{\n        ref.current = value;\n    });\n    return ref.current;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZVByZXZpb3VzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBZSxHQUFHRztBQUNsQixJQUFJQyxTQUFTQyxtQkFBT0EsQ0FBQyx3R0FBTztBQUM1Qjs7Ozs7Ozs7Ozs7Ozs7OztDQWdCQyxHQUNELFNBQVNGLFlBQVlHLEtBQUs7SUFDeEIsTUFBTUMsTUFBTSxDQUFDLEdBQUdILE9BQU9JLE1BQU0sRUFBRTtJQUM5QixJQUFHSixPQUFPSyxTQUFTLEVBQUU7UUFDcEJGLElBQUlHLE9BQU8sR0FBR0o7SUFDaEI7SUFDQSxPQUFPQyxJQUFJRyxPQUFPO0FBQ3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC9ob29rcy9janMvdXNlUHJldmlvdXMuanM/ZmIyYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHVzZVByZXZpb3VzO1xudmFyIF9yZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbi8qKlxuICogU3RvcmUgdGhlIGxhc3Qgb2Ygc29tZSB2YWx1ZS4gVHJhY2tlZCB2aWEgYSBgUmVmYCBvbmx5IHVwZGF0aW5nIGl0XG4gKiBhZnRlciB0aGUgY29tcG9uZW50IHJlbmRlcnMuXG4gKlxuICogSGVscGZ1bCBpZiB5b3UgbmVlZCB0byBjb21wYXJlIGEgcHJvcCB2YWx1ZSB0byBpdCdzIHByZXZpb3VzIHZhbHVlIGR1cmluZyByZW5kZXIuXG4gKlxuICogYGBgdHNcbiAqIGZ1bmN0aW9uIENvbXBvbmVudChwcm9wcykge1xuICogICBjb25zdCBsYXN0UHJvcHMgPSB1c2VQcmV2aW91cyhwcm9wcylcbiAqXG4gKiAgIGlmIChsYXN0UHJvcHMuZm9vICE9PSBwcm9wcy5mb28pXG4gKiAgICAgcmVzZXRWYWx1ZUZyb21Qcm9wcyhwcm9wcy5mb28pXG4gKiB9XG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gdmFsdWUgdGhlIHZhbHVlIHRvIHRyYWNrXG4gKi9cbmZ1bmN0aW9uIHVzZVByZXZpb3VzKHZhbHVlKSB7XG4gIGNvbnN0IHJlZiA9ICgwLCBfcmVhY3QudXNlUmVmKShudWxsKTtcbiAgKDAsIF9yZWFjdC51c2VFZmZlY3QpKCgpID0+IHtcbiAgICByZWYuY3VycmVudCA9IHZhbHVlO1xuICB9KTtcbiAgcmV0dXJuIHJlZi5jdXJyZW50O1xufSJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ1c2VQcmV2aW91cyIsIl9yZWFjdCIsInJlcXVpcmUiLCJ2YWx1ZSIsInJlZiIsInVzZVJlZiIsInVzZUVmZmVjdCIsImN1cnJlbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/usePrevious.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useRafInterval.js":
/*!***********************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useRafInterval.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _useCommittedRef = _interopRequireDefault(__webpack_require__(/*! ./useCommittedRef */ \"(ssr)/./node_modules/@restart/hooks/cjs/useCommittedRef.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction useRafInterval(fn, ms, paused = false) {\n    let handle;\n    let start = new Date().getTime();\n    const fnRef = (0, _useCommittedRef.default)(fn);\n    // this ref is necessary b/c useEffect will sometimes miss a paused toggle\n    // orphaning a setTimeout chain in the aether, so relying on it's refresh logic is not reliable.\n    const pausedRef = (0, _useCommittedRef.default)(paused);\n    function loop() {\n        const current = new Date().getTime();\n        const delta = current - start;\n        if (pausedRef.current) return;\n        if (delta >= ms && fnRef.current) {\n            fnRef.current();\n            start = new Date().getTime();\n        }\n        cancelAnimationFrame(handle);\n        handle = requestAnimationFrame(loop);\n    }\n    (0, _react.useEffect)(()=>{\n        handle = requestAnimationFrame(loop);\n        return ()=>cancelAnimationFrame(handle);\n    }, []);\n}\nvar _default = useRafInterval;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZVJhZkludGVydmFsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBZSxHQUFHLEtBQUs7QUFDdkIsSUFBSUcsU0FBU0MsbUJBQU9BLENBQUMsd0dBQU87QUFDNUIsSUFBSUMsbUJBQW1CQyx1QkFBdUJGLG1CQUFPQSxDQUFDLHFGQUFtQjtBQUN6RSxTQUFTRSx1QkFBdUJDLEdBQUc7SUFBSSxPQUFPQSxPQUFPQSxJQUFJTixVQUFVLEdBQUdNLE1BQU07UUFBRUwsU0FBU0s7SUFBSTtBQUFHO0FBQzlGLFNBQVNDLGVBQWVDLEVBQUUsRUFBRUMsRUFBRSxFQUFFQyxTQUFTLEtBQUs7SUFDNUMsSUFBSUM7SUFDSixJQUFJQyxRQUFRLElBQUlDLE9BQU9DLE9BQU87SUFDOUIsTUFBTUMsUUFBUSxDQUFDLEdBQUdYLGlCQUFpQkgsT0FBTyxFQUFFTztJQUM1QywwRUFBMEU7SUFDMUUsZ0dBQWdHO0lBQ2hHLE1BQU1RLFlBQVksQ0FBQyxHQUFHWixpQkFBaUJILE9BQU8sRUFBRVM7SUFDaEQsU0FBU087UUFDUCxNQUFNQyxVQUFVLElBQUlMLE9BQU9DLE9BQU87UUFDbEMsTUFBTUssUUFBUUQsVUFBVU47UUFDeEIsSUFBSUksVUFBVUUsT0FBTyxFQUFFO1FBQ3ZCLElBQUlDLFNBQVNWLE1BQU1NLE1BQU1HLE9BQU8sRUFBRTtZQUNoQ0gsTUFBTUcsT0FBTztZQUNiTixRQUFRLElBQUlDLE9BQU9DLE9BQU87UUFDNUI7UUFDQU0scUJBQXFCVDtRQUNyQkEsU0FBU1Usc0JBQXNCSjtJQUNqQztJQUNDLElBQUdmLE9BQU9vQixTQUFTLEVBQUU7UUFDcEJYLFNBQVNVLHNCQUFzQko7UUFDL0IsT0FBTyxJQUFNRyxxQkFBcUJUO0lBQ3BDLEdBQUcsRUFBRTtBQUNQO0FBQ0EsSUFBSVksV0FBV2hCO0FBQ2ZSLGtCQUFlLEdBQUd3QiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZVJhZkludGVydmFsLmpzPzMwOTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgX3JlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xudmFyIF91c2VDb21taXR0ZWRSZWYgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3VzZUNvbW1pdHRlZFJlZlwiKSk7XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuZnVuY3Rpb24gdXNlUmFmSW50ZXJ2YWwoZm4sIG1zLCBwYXVzZWQgPSBmYWxzZSkge1xuICBsZXQgaGFuZGxlO1xuICBsZXQgc3RhcnQgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgY29uc3QgZm5SZWYgPSAoMCwgX3VzZUNvbW1pdHRlZFJlZi5kZWZhdWx0KShmbik7XG4gIC8vIHRoaXMgcmVmIGlzIG5lY2Vzc2FyeSBiL2MgdXNlRWZmZWN0IHdpbGwgc29tZXRpbWVzIG1pc3MgYSBwYXVzZWQgdG9nZ2xlXG4gIC8vIG9ycGhhbmluZyBhIHNldFRpbWVvdXQgY2hhaW4gaW4gdGhlIGFldGhlciwgc28gcmVseWluZyBvbiBpdCdzIHJlZnJlc2ggbG9naWMgaXMgbm90IHJlbGlhYmxlLlxuICBjb25zdCBwYXVzZWRSZWYgPSAoMCwgX3VzZUNvbW1pdHRlZFJlZi5kZWZhdWx0KShwYXVzZWQpO1xuICBmdW5jdGlvbiBsb29wKCkge1xuICAgIGNvbnN0IGN1cnJlbnQgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICBjb25zdCBkZWx0YSA9IGN1cnJlbnQgLSBzdGFydDtcbiAgICBpZiAocGF1c2VkUmVmLmN1cnJlbnQpIHJldHVybjtcbiAgICBpZiAoZGVsdGEgPj0gbXMgJiYgZm5SZWYuY3VycmVudCkge1xuICAgICAgZm5SZWYuY3VycmVudCgpO1xuICAgICAgc3RhcnQgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICB9XG4gICAgY2FuY2VsQW5pbWF0aW9uRnJhbWUoaGFuZGxlKTtcbiAgICBoYW5kbGUgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUobG9vcCk7XG4gIH1cbiAgKDAsIF9yZWFjdC51c2VFZmZlY3QpKCgpID0+IHtcbiAgICBoYW5kbGUgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUobG9vcCk7XG4gICAgcmV0dXJuICgpID0+IGNhbmNlbEFuaW1hdGlvbkZyYW1lKGhhbmRsZSk7XG4gIH0sIFtdKTtcbn1cbnZhciBfZGVmYXVsdCA9IHVzZVJhZkludGVydmFsO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIl9yZWFjdCIsInJlcXVpcmUiLCJfdXNlQ29tbWl0dGVkUmVmIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIm9iaiIsInVzZVJhZkludGVydmFsIiwiZm4iLCJtcyIsInBhdXNlZCIsImhhbmRsZSIsInN0YXJ0IiwiRGF0ZSIsImdldFRpbWUiLCJmblJlZiIsInBhdXNlZFJlZiIsImxvb3AiLCJjdXJyZW50IiwiZGVsdGEiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsInVzZUVmZmVjdCIsIl9kZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useRafInterval.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useResizeObserver.js":
/*!**************************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useResizeObserver.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useResizeObserver;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _useIsomorphicEffect = _interopRequireDefault(__webpack_require__(/*! ./useIsomorphicEffect */ \"(ssr)/./node_modules/@restart/hooks/cjs/useIsomorphicEffect.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst targetMap = new WeakMap();\nlet resizeObserver;\nfunction getResizeObserver() {\n    // eslint-disable-next-line no-return-assign\n    return resizeObserver = resizeObserver || new window.ResizeObserver((entries)=>{\n        entries.forEach((entry)=>{\n            const handler = targetMap.get(entry.target);\n            if (handler) handler(entry.contentRect);\n        });\n    });\n}\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */ function useResizeObserver(element) {\n    const [rect, setRect] = (0, _react.useState)(null);\n    (0, _useIsomorphicEffect.default)(()=>{\n        if (!element) return;\n        getResizeObserver().observe(element);\n        setRect(element.getBoundingClientRect());\n        targetMap.set(element, (rect)=>{\n            setRect(rect);\n        });\n        return ()=>{\n            targetMap.delete(element);\n        };\n    }, [\n        element\n    ]);\n    return rect;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZVJlc2l6ZU9ic2VydmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBZSxHQUFHRztBQUNsQixJQUFJQyxTQUFTQyxtQkFBT0EsQ0FBQyx3R0FBTztBQUM1QixJQUFJQyx1QkFBdUJDLHVCQUF1QkYsbUJBQU9BLENBQUMsNkZBQXVCO0FBQ2pGLFNBQVNFLHVCQUF1QkMsR0FBRztJQUFJLE9BQU9BLE9BQU9BLElBQUlQLFVBQVUsR0FBR08sTUFBTTtRQUFFTixTQUFTTTtJQUFJO0FBQUc7QUFDOUYsTUFBTUMsWUFBWSxJQUFJQztBQUN0QixJQUFJQztBQUNKLFNBQVNDO0lBQ1AsNENBQTRDO0lBQzVDLE9BQU9ELGlCQUFpQkEsa0JBQWtCLElBQUlFLE9BQU9DLGNBQWMsQ0FBQ0MsQ0FBQUE7UUFDbEVBLFFBQVFDLE9BQU8sQ0FBQ0MsQ0FBQUE7WUFDZCxNQUFNQyxVQUFVVCxVQUFVVSxHQUFHLENBQUNGLE1BQU1HLE1BQU07WUFDMUMsSUFBSUYsU0FBU0EsUUFBUUQsTUFBTUksV0FBVztRQUN4QztJQUNGO0FBQ0Y7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FpQkMsR0FDRCxTQUFTbEIsa0JBQWtCbUIsT0FBTztJQUNoQyxNQUFNLENBQUNDLE1BQU1DLFFBQVEsR0FBRyxDQUFDLEdBQUdwQixPQUFPcUIsUUFBUSxFQUFFO0lBQzVDLElBQUduQixxQkFBcUJKLE9BQU8sRUFBRTtRQUNoQyxJQUFJLENBQUNvQixTQUFTO1FBQ2RWLG9CQUFvQmMsT0FBTyxDQUFDSjtRQUM1QkUsUUFBUUYsUUFBUUsscUJBQXFCO1FBQ3JDbEIsVUFBVW1CLEdBQUcsQ0FBQ04sU0FBU0MsQ0FBQUE7WUFDckJDLFFBQVFEO1FBQ1Y7UUFDQSxPQUFPO1lBQ0xkLFVBQVVvQixNQUFNLENBQUNQO1FBQ25CO0lBQ0YsR0FBRztRQUFDQTtLQUFRO0lBQ1osT0FBT0M7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZVJlc2l6ZU9ic2VydmVyLmpzP2QxMTMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSB1c2VSZXNpemVPYnNlcnZlcjtcbnZhciBfcmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG52YXIgX3VzZUlzb21vcnBoaWNFZmZlY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3VzZUlzb21vcnBoaWNFZmZlY3RcIikpO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cbmNvbnN0IHRhcmdldE1hcCA9IG5ldyBXZWFrTWFwKCk7XG5sZXQgcmVzaXplT2JzZXJ2ZXI7XG5mdW5jdGlvbiBnZXRSZXNpemVPYnNlcnZlcigpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJldHVybi1hc3NpZ25cbiAgcmV0dXJuIHJlc2l6ZU9ic2VydmVyID0gcmVzaXplT2JzZXJ2ZXIgfHwgbmV3IHdpbmRvdy5SZXNpemVPYnNlcnZlcihlbnRyaWVzID0+IHtcbiAgICBlbnRyaWVzLmZvckVhY2goZW50cnkgPT4ge1xuICAgICAgY29uc3QgaGFuZGxlciA9IHRhcmdldE1hcC5nZXQoZW50cnkudGFyZ2V0KTtcbiAgICAgIGlmIChoYW5kbGVyKSBoYW5kbGVyKGVudHJ5LmNvbnRlbnRSZWN0KTtcbiAgICB9KTtcbiAgfSk7XG59XG5cbi8qKlxuICogRWZmaWNpZW50bHkgb2JzZXJ2ZSBzaXplIGNoYW5nZXMgb24gYW4gZWxlbWVudC4gRGVwZW5kcyBvbiB0aGUgYFJlc2l6ZU9ic2VydmVyYCBhcGksXG4gKiBhbmQgcG9seWZpbGxzIGFyZSBuZWVkZWQgaW4gb2xkZXIgYnJvd3NlcnMuXG4gKlxuICogYGBgdHNcbiAqIGNvbnN0IFtyZWYsIGF0dGFjaFJlZl0gPSB1c2VDYWxsYmFja1JlZihudWxsKTtcbiAqXG4gKiBjb25zdCByZWN0ID0gdXNlUmVzaXplT2JzZXJ2ZXIocmVmKTtcbiAqXG4gKiByZXR1cm4gKFxuICogIDxkaXYgcmVmPXthdHRhY2hSZWZ9PlxuICogICAge0pTT04uc3RyaW5naWZ5KHJlY3QpfVxuICogIDwvZGl2PlxuICogKVxuICogYGBgXG4gKlxuICogQHBhcmFtIGVsZW1lbnQgVGhlIERPTSBlbGVtZW50IHRvIG9ic2VydmVcbiAqL1xuZnVuY3Rpb24gdXNlUmVzaXplT2JzZXJ2ZXIoZWxlbWVudCkge1xuICBjb25zdCBbcmVjdCwgc2V0UmVjdF0gPSAoMCwgX3JlYWN0LnVzZVN0YXRlKShudWxsKTtcbiAgKDAsIF91c2VJc29tb3JwaGljRWZmZWN0LmRlZmF1bHQpKCgpID0+IHtcbiAgICBpZiAoIWVsZW1lbnQpIHJldHVybjtcbiAgICBnZXRSZXNpemVPYnNlcnZlcigpLm9ic2VydmUoZWxlbWVudCk7XG4gICAgc2V0UmVjdChlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpKTtcbiAgICB0YXJnZXRNYXAuc2V0KGVsZW1lbnQsIHJlY3QgPT4ge1xuICAgICAgc2V0UmVjdChyZWN0KTtcbiAgICB9KTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgdGFyZ2V0TWFwLmRlbGV0ZShlbGVtZW50KTtcbiAgICB9O1xuICB9LCBbZWxlbWVudF0pO1xuICByZXR1cm4gcmVjdDtcbn0iXSwibmFtZXMiOlsiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidXNlUmVzaXplT2JzZXJ2ZXIiLCJfcmVhY3QiLCJyZXF1aXJlIiwiX3VzZUlzb21vcnBoaWNFZmZlY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0Iiwib2JqIiwidGFyZ2V0TWFwIiwiV2Vha01hcCIsInJlc2l6ZU9ic2VydmVyIiwiZ2V0UmVzaXplT2JzZXJ2ZXIiLCJ3aW5kb3ciLCJSZXNpemVPYnNlcnZlciIsImVudHJpZXMiLCJmb3JFYWNoIiwiZW50cnkiLCJoYW5kbGVyIiwiZ2V0IiwidGFyZ2V0IiwiY29udGVudFJlY3QiLCJlbGVtZW50IiwicmVjdCIsInNldFJlY3QiLCJ1c2VTdGF0ZSIsIm9ic2VydmUiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJzZXQiLCJkZWxldGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useResizeObserver.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useSafeState.js":
/*!*********************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useSafeState.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _useMounted = _interopRequireDefault(__webpack_require__(/*! ./useMounted */ \"(ssr)/./node_modules/@restart/hooks/cjs/useMounted.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n/**\n * `useSafeState` takes the return value of a `useState` hook and wraps the\n * setter to prevent updates onces the component has unmounted. Can used\n * with `useMergeState` and `useStateAsync` as well\n *\n * @param state The return value of a useStateHook\n *\n * ```ts\n * const [show, setShow] = useSafeState(useState(true));\n * ```\n */ function useSafeState(state) {\n    const isMounted = (0, _useMounted.default)();\n    return [\n        state[0],\n        (0, _react.useCallback)((nextState)=>{\n            if (!isMounted()) return;\n            return state[1](nextState);\n        }, [\n            isMounted,\n            state[1]\n        ])\n    ];\n}\nvar _default = useSafeState;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZVNhZmVTdGF0ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSxrQkFBa0IsR0FBRztBQUNyQkEsa0JBQWUsR0FBRyxLQUFLO0FBQ3ZCLElBQUlHLFNBQVNDLG1CQUFPQSxDQUFDLHdHQUFPO0FBQzVCLElBQUlDLGNBQWNDLHVCQUF1QkYsbUJBQU9BLENBQUMsMkVBQWM7QUFDL0QsU0FBU0UsdUJBQXVCQyxHQUFHO0lBQUksT0FBT0EsT0FBT0EsSUFBSU4sVUFBVSxHQUFHTSxNQUFNO1FBQUVMLFNBQVNLO0lBQUk7QUFBRztBQUM5Rjs7Ozs7Ozs7OztDQVVDLEdBRUQsU0FBU0MsYUFBYUMsS0FBSztJQUN6QixNQUFNQyxZQUFZLENBQUMsR0FBR0wsWUFBWUgsT0FBTztJQUN6QyxPQUFPO1FBQUNPLEtBQUssQ0FBQyxFQUFFO1FBQUcsSUFBR04sT0FBT1EsV0FBVyxFQUFFQyxDQUFBQTtZQUN4QyxJQUFJLENBQUNGLGFBQWE7WUFDbEIsT0FBT0QsS0FBSyxDQUFDLEVBQUUsQ0FBQ0c7UUFDbEIsR0FBRztZQUFDRjtZQUFXRCxLQUFLLENBQUMsRUFBRTtTQUFDO0tBQUU7QUFDNUI7QUFDQSxJQUFJSSxXQUFXTDtBQUNmUixrQkFBZSxHQUFHYSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZVNhZmVTdGF0ZS5qcz9iY2MwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIF9yZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbnZhciBfdXNlTW91bnRlZCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdXNlTW91bnRlZFwiKSk7XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuLyoqXG4gKiBgdXNlU2FmZVN0YXRlYCB0YWtlcyB0aGUgcmV0dXJuIHZhbHVlIG9mIGEgYHVzZVN0YXRlYCBob29rIGFuZCB3cmFwcyB0aGVcbiAqIHNldHRlciB0byBwcmV2ZW50IHVwZGF0ZXMgb25jZXMgdGhlIGNvbXBvbmVudCBoYXMgdW5tb3VudGVkLiBDYW4gdXNlZFxuICogd2l0aCBgdXNlTWVyZ2VTdGF0ZWAgYW5kIGB1c2VTdGF0ZUFzeW5jYCBhcyB3ZWxsXG4gKlxuICogQHBhcmFtIHN0YXRlIFRoZSByZXR1cm4gdmFsdWUgb2YgYSB1c2VTdGF0ZUhvb2tcbiAqXG4gKiBgYGB0c1xuICogY29uc3QgW3Nob3csIHNldFNob3ddID0gdXNlU2FmZVN0YXRlKHVzZVN0YXRlKHRydWUpKTtcbiAqIGBgYFxuICovXG5cbmZ1bmN0aW9uIHVzZVNhZmVTdGF0ZShzdGF0ZSkge1xuICBjb25zdCBpc01vdW50ZWQgPSAoMCwgX3VzZU1vdW50ZWQuZGVmYXVsdCkoKTtcbiAgcmV0dXJuIFtzdGF0ZVswXSwgKDAsIF9yZWFjdC51c2VDYWxsYmFjaykobmV4dFN0YXRlID0+IHtcbiAgICBpZiAoIWlzTW91bnRlZCgpKSByZXR1cm47XG4gICAgcmV0dXJuIHN0YXRlWzFdKG5leHRTdGF0ZSk7XG4gIH0sIFtpc01vdW50ZWQsIHN0YXRlWzFdXSldO1xufVxudmFyIF9kZWZhdWx0ID0gdXNlU2FmZVN0YXRlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIl9yZWFjdCIsInJlcXVpcmUiLCJfdXNlTW91bnRlZCIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJvYmoiLCJ1c2VTYWZlU3RhdGUiLCJzdGF0ZSIsImlzTW91bnRlZCIsInVzZUNhbGxiYWNrIiwibmV4dFN0YXRlIiwiX2RlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useSafeState.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useUpdatedRef.js":
/*!**********************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useUpdatedRef.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useUpdatedRef;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */ function useUpdatedRef(value) {\n    const valueRef = (0, _react.useRef)(value);\n    valueRef.current = value;\n    return valueRef;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZVVwZGF0ZWRSZWYuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGtCQUFlLEdBQUdHO0FBQ2xCLElBQUlDLFNBQVNDLG1CQUFPQSxDQUFDLHdHQUFPO0FBQzVCOzs7OztDQUtDLEdBQ0QsU0FBU0YsY0FBY0csS0FBSztJQUMxQixNQUFNQyxXQUFXLENBQUMsR0FBR0gsT0FBT0ksTUFBTSxFQUFFRjtJQUNwQ0MsU0FBU0UsT0FBTyxHQUFHSDtJQUNuQixPQUFPQztBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC9ob29rcy9janMvdXNlVXBkYXRlZFJlZi5qcz81OWE1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdXNlVXBkYXRlZFJlZjtcbnZhciBfcmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG4vKipcbiAqIFJldHVybnMgYSByZWYgdGhhdCBpcyBpbW1lZGlhdGVseSB1cGRhdGVkIHdpdGggdGhlIG5ldyB2YWx1ZVxuICpcbiAqIEBwYXJhbSB2YWx1ZSBUaGUgUmVmIHZhbHVlXG4gKiBAY2F0ZWdvcnkgcmVmc1xuICovXG5mdW5jdGlvbiB1c2VVcGRhdGVkUmVmKHZhbHVlKSB7XG4gIGNvbnN0IHZhbHVlUmVmID0gKDAsIF9yZWFjdC51c2VSZWYpKHZhbHVlKTtcbiAgdmFsdWVSZWYuY3VycmVudCA9IHZhbHVlO1xuICByZXR1cm4gdmFsdWVSZWY7XG59Il0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInVzZVVwZGF0ZWRSZWYiLCJfcmVhY3QiLCJyZXF1aXJlIiwidmFsdWUiLCJ2YWx1ZVJlZiIsInVzZVJlZiIsImN1cnJlbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useUpdatedRef.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useWillUnmount.js":
/*!***********************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useWillUnmount.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useWillUnmount;\nvar _useUpdatedRef = _interopRequireDefault(__webpack_require__(/*! ./useUpdatedRef */ \"(ssr)/./node_modules/@restart/hooks/cjs/useUpdatedRef.js\"));\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */ function useWillUnmount(fn) {\n    const onUnmount = (0, _useUpdatedRef.default)(fn);\n    (0, _react.useEffect)(()=>()=>onUnmount.current(), []);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZVdpbGxVbm1vdW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBZSxHQUFHRztBQUNsQixJQUFJQyxpQkFBaUJDLHVCQUF1QkMsbUJBQU9BLENBQUMsaUZBQWlCO0FBQ3JFLElBQUlDLFNBQVNELG1CQUFPQSxDQUFDLHdHQUFPO0FBQzVCLFNBQVNELHVCQUF1QkcsR0FBRztJQUFJLE9BQU9BLE9BQU9BLElBQUlQLFVBQVUsR0FBR08sTUFBTTtRQUFFTixTQUFTTTtJQUFJO0FBQUc7QUFDOUY7Ozs7O0NBS0MsR0FDRCxTQUFTTCxlQUFlTSxFQUFFO0lBQ3hCLE1BQU1DLFlBQVksQ0FBQyxHQUFHTixlQUFlRixPQUFPLEVBQUVPO0lBQzdDLElBQUdGLE9BQU9JLFNBQVMsRUFBRSxJQUFNLElBQU1ELFVBQVVFLE9BQU8sSUFBSSxFQUFFO0FBQzNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC9ob29rcy9janMvdXNlV2lsbFVubW91bnQuanM/ODc5ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHVzZVdpbGxVbm1vdW50O1xudmFyIF91c2VVcGRhdGVkUmVmID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91c2VVcGRhdGVkUmVmXCIpKTtcbnZhciBfcmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuLyoqXG4gKiBBdHRhY2ggYSBjYWxsYmFjayB0aGF0IGZpcmVzIHdoZW4gYSBjb21wb25lbnQgdW5tb3VudHNcbiAqXG4gKiBAcGFyYW0gZm4gSGFuZGxlciB0byBydW4gd2hlbiB0aGUgY29tcG9uZW50IHVubW91bnRzXG4gKiBAY2F0ZWdvcnkgZWZmZWN0c1xuICovXG5mdW5jdGlvbiB1c2VXaWxsVW5tb3VudChmbikge1xuICBjb25zdCBvblVubW91bnQgPSAoMCwgX3VzZVVwZGF0ZWRSZWYuZGVmYXVsdCkoZm4pO1xuICAoMCwgX3JlYWN0LnVzZUVmZmVjdCkoKCkgPT4gKCkgPT4gb25Vbm1vdW50LmN1cnJlbnQoKSwgW10pO1xufSJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ1c2VXaWxsVW5tb3VudCIsIl91c2VVcGRhdGVkUmVmIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfcmVhY3QiLCJvYmoiLCJmbiIsIm9uVW5tb3VudCIsInVzZUVmZmVjdCIsImN1cnJlbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useWillUnmount.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/esm/useBreakpoint.js":
/*!**********************************************************!*\
  !*** ./node_modules/@restart/hooks/esm/useBreakpoint.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createBreakpointHook: () => (/* binding */ createBreakpointHook),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _useMediaQuery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./useMediaQuery */ \"(ssr)/./node_modules/@restart/hooks/esm/useMediaQuery.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\n/**\n * Create a responsive hook we a set of breakpoint names and widths.\n * You can use any valid css units as well as a numbers (for pixels).\n *\n * **NOTE:** The object key order is important! it's assumed to be in order from smallest to largest\n *\n * ```ts\n * const useBreakpoint = createBreakpointHook({\n *  xs: 0,\n *  sm: 576,\n *  md: 768,\n *  lg: 992,\n *  xl: 1200,\n * })\n * ```\n *\n * **Watch out!** using string values will sometimes construct media queries using css `calc()` which\n * is NOT supported in media queries by all browsers at the moment. use numbers for\n * the widest range of browser support.\n *\n * @param breakpointValues A object hash of names to breakpoint dimensions\n */ function createBreakpointHook(breakpointValues) {\n    const names = Object.keys(breakpointValues);\n    function and(query, next) {\n        if (query === next) {\n            return next;\n        }\n        return query ? `${query} and ${next}` : next;\n    }\n    function getNext(breakpoint) {\n        return names[Math.min(names.indexOf(breakpoint) + 1, names.length - 1)];\n    }\n    function getMaxQuery(breakpoint) {\n        const next = getNext(breakpoint);\n        let value = breakpointValues[next];\n        if (typeof value === \"number\") value = `${value - 0.2}px`;\n        else value = `calc(${value} - 0.2px)`;\n        return `(max-width: ${value})`;\n    }\n    function getMinQuery(breakpoint) {\n        let value = breakpointValues[breakpoint];\n        if (typeof value === \"number\") {\n            value = `${value}px`;\n        }\n        return `(min-width: ${value})`;\n    }\n    /**\n   * Match a set of breakpoints\n   *\n   * ```tsx\n   * const MidSizeOnly = () => {\n   *   const isMid = useBreakpoint({ lg: 'down', sm: 'up' });\n   *\n   *   if (isMid) return <div>On a Reasonable sized Screen!</div>\n   *   return null;\n   * }\n   * ```\n   * @param breakpointMap An object map of breakpoints and directions, queries are constructed using \"and\" to join\n   * breakpoints together\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */ /**\n   * Match a single breakpoint exactly, up, or down.\n   *\n   * ```tsx\n   * const PhoneOnly = () => {\n   *   const isSmall = useBreakpoint('sm', 'down');\n   *\n   *   if (isSmall) return <div>On a Small Screen!</div>\n   *   return null;\n   * }\n   * ```\n   *\n   * @param breakpoint The breakpoint key\n   * @param direction A direction 'up' for a max, 'down' for min, true to match only the breakpoint\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */ function useBreakpoint(breakpointOrMap, direction, window) {\n        let breakpointMap;\n        if (typeof breakpointOrMap === \"object\") {\n            breakpointMap = breakpointOrMap;\n            window = direction;\n            direction = true;\n        } else {\n            direction = direction || true;\n            breakpointMap = {\n                [breakpointOrMap]: direction\n            };\n        }\n        let query = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>Object.entries(breakpointMap).reduce((query, [key, direction])=>{\n                if (direction === \"up\" || direction === true) {\n                    query = and(query, getMinQuery(key));\n                }\n                if (direction === \"down\" || direction === true) {\n                    query = and(query, getMaxQuery(key));\n                }\n                return query;\n            }, \"\"), [\n            JSON.stringify(breakpointMap)\n        ]);\n        return (0,_useMediaQuery__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(query, window);\n    }\n    return useBreakpoint;\n}\nconst useBreakpoint = createBreakpointHook({\n    xs: 0,\n    sm: 576,\n    md: 768,\n    lg: 992,\n    xl: 1200,\n    xxl: 1400\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useBreakpoint);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZUJyZWFrcG9pbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNEM7QUFDWjtBQUNoQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBcUJDLEdBQ00sU0FBU0UscUJBQXFCQyxnQkFBZ0I7SUFDbkQsTUFBTUMsUUFBUUMsT0FBT0MsSUFBSSxDQUFDSDtJQUMxQixTQUFTSSxJQUFJQyxLQUFLLEVBQUVDLElBQUk7UUFDdEIsSUFBSUQsVUFBVUMsTUFBTTtZQUNsQixPQUFPQTtRQUNUO1FBQ0EsT0FBT0QsUUFBUSxDQUFDLEVBQUVBLE1BQU0sS0FBSyxFQUFFQyxLQUFLLENBQUMsR0FBR0E7SUFDMUM7SUFDQSxTQUFTQyxRQUFRQyxVQUFVO1FBQ3pCLE9BQU9QLEtBQUssQ0FBQ1EsS0FBS0MsR0FBRyxDQUFDVCxNQUFNVSxPQUFPLENBQUNILGNBQWMsR0FBR1AsTUFBTVcsTUFBTSxHQUFHLEdBQUc7SUFDekU7SUFDQSxTQUFTQyxZQUFZTCxVQUFVO1FBQzdCLE1BQU1GLE9BQU9DLFFBQVFDO1FBQ3JCLElBQUlNLFFBQVFkLGdCQUFnQixDQUFDTSxLQUFLO1FBQ2xDLElBQUksT0FBT1EsVUFBVSxVQUFVQSxRQUFRLENBQUMsRUFBRUEsUUFBUSxJQUFJLEVBQUUsQ0FBQzthQUFNQSxRQUFRLENBQUMsS0FBSyxFQUFFQSxNQUFNLFNBQVMsQ0FBQztRQUMvRixPQUFPLENBQUMsWUFBWSxFQUFFQSxNQUFNLENBQUMsQ0FBQztJQUNoQztJQUNBLFNBQVNDLFlBQVlQLFVBQVU7UUFDN0IsSUFBSU0sUUFBUWQsZ0JBQWdCLENBQUNRLFdBQVc7UUFDeEMsSUFBSSxPQUFPTSxVQUFVLFVBQVU7WUFDN0JBLFFBQVEsQ0FBQyxFQUFFQSxNQUFNLEVBQUUsQ0FBQztRQUN0QjtRQUNBLE9BQU8sQ0FBQyxZQUFZLEVBQUVBLE1BQU0sQ0FBQyxDQUFDO0lBQ2hDO0lBRUE7Ozs7Ozs7Ozs7Ozs7O0dBY0MsR0FFRDs7Ozs7Ozs7Ozs7Ozs7O0dBZUMsR0FFRCxTQUFTRSxjQUFjQyxlQUFlLEVBQUVDLFNBQVMsRUFBRUMsTUFBTTtRQUN2RCxJQUFJQztRQUNKLElBQUksT0FBT0gsb0JBQW9CLFVBQVU7WUFDdkNHLGdCQUFnQkg7WUFDaEJFLFNBQVNEO1lBQ1RBLFlBQVk7UUFDZCxPQUFPO1lBQ0xBLFlBQVlBLGFBQWE7WUFDekJFLGdCQUFnQjtnQkFDZCxDQUFDSCxnQkFBZ0IsRUFBRUM7WUFDckI7UUFDRjtRQUNBLElBQUliLFFBQVFQLDhDQUFPQSxDQUFDLElBQU1JLE9BQU9tQixPQUFPLENBQUNELGVBQWVFLE1BQU0sQ0FBQyxDQUFDakIsT0FBTyxDQUFDa0IsS0FBS0wsVUFBVTtnQkFDckYsSUFBSUEsY0FBYyxRQUFRQSxjQUFjLE1BQU07b0JBQzVDYixRQUFRRCxJQUFJQyxPQUFPVSxZQUFZUTtnQkFDakM7Z0JBQ0EsSUFBSUwsY0FBYyxVQUFVQSxjQUFjLE1BQU07b0JBQzlDYixRQUFRRCxJQUFJQyxPQUFPUSxZQUFZVTtnQkFDakM7Z0JBQ0EsT0FBT2xCO1lBQ1QsR0FBRyxLQUFLO1lBQUNtQixLQUFLQyxTQUFTLENBQUNMO1NBQWU7UUFDdkMsT0FBT3ZCLDBEQUFhQSxDQUFDUSxPQUFPYztJQUM5QjtJQUNBLE9BQU9IO0FBQ1Q7QUFDQSxNQUFNQSxnQkFBZ0JqQixxQkFBcUI7SUFDekMyQixJQUFJO0lBQ0pDLElBQUk7SUFDSkMsSUFBSTtJQUNKQyxJQUFJO0lBQ0pDLElBQUk7SUFDSkMsS0FBSztBQUNQO0FBQ0EsaUVBQWVmLGFBQWFBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L2hvb2tzL2VzbS91c2VCcmVha3BvaW50LmpzPzg3OTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHVzZU1lZGlhUXVlcnkgZnJvbSAnLi91c2VNZWRpYVF1ZXJ5JztcbmltcG9ydCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG4vKipcbiAqIENyZWF0ZSBhIHJlc3BvbnNpdmUgaG9vayB3ZSBhIHNldCBvZiBicmVha3BvaW50IG5hbWVzIGFuZCB3aWR0aHMuXG4gKiBZb3UgY2FuIHVzZSBhbnkgdmFsaWQgY3NzIHVuaXRzIGFzIHdlbGwgYXMgYSBudW1iZXJzIChmb3IgcGl4ZWxzKS5cbiAqXG4gKiAqKk5PVEU6KiogVGhlIG9iamVjdCBrZXkgb3JkZXIgaXMgaW1wb3J0YW50ISBpdCdzIGFzc3VtZWQgdG8gYmUgaW4gb3JkZXIgZnJvbSBzbWFsbGVzdCB0byBsYXJnZXN0XG4gKlxuICogYGBgdHNcbiAqIGNvbnN0IHVzZUJyZWFrcG9pbnQgPSBjcmVhdGVCcmVha3BvaW50SG9vayh7XG4gKiAgeHM6IDAsXG4gKiAgc206IDU3NixcbiAqICBtZDogNzY4LFxuICogIGxnOiA5OTIsXG4gKiAgeGw6IDEyMDAsXG4gKiB9KVxuICogYGBgXG4gKlxuICogKipXYXRjaCBvdXQhKiogdXNpbmcgc3RyaW5nIHZhbHVlcyB3aWxsIHNvbWV0aW1lcyBjb25zdHJ1Y3QgbWVkaWEgcXVlcmllcyB1c2luZyBjc3MgYGNhbGMoKWAgd2hpY2hcbiAqIGlzIE5PVCBzdXBwb3J0ZWQgaW4gbWVkaWEgcXVlcmllcyBieSBhbGwgYnJvd3NlcnMgYXQgdGhlIG1vbWVudC4gdXNlIG51bWJlcnMgZm9yXG4gKiB0aGUgd2lkZXN0IHJhbmdlIG9mIGJyb3dzZXIgc3VwcG9ydC5cbiAqXG4gKiBAcGFyYW0gYnJlYWtwb2ludFZhbHVlcyBBIG9iamVjdCBoYXNoIG9mIG5hbWVzIHRvIGJyZWFrcG9pbnQgZGltZW5zaW9uc1xuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQnJlYWtwb2ludEhvb2soYnJlYWtwb2ludFZhbHVlcykge1xuICBjb25zdCBuYW1lcyA9IE9iamVjdC5rZXlzKGJyZWFrcG9pbnRWYWx1ZXMpO1xuICBmdW5jdGlvbiBhbmQocXVlcnksIG5leHQpIHtcbiAgICBpZiAocXVlcnkgPT09IG5leHQpIHtcbiAgICAgIHJldHVybiBuZXh0O1xuICAgIH1cbiAgICByZXR1cm4gcXVlcnkgPyBgJHtxdWVyeX0gYW5kICR7bmV4dH1gIDogbmV4dDtcbiAgfVxuICBmdW5jdGlvbiBnZXROZXh0KGJyZWFrcG9pbnQpIHtcbiAgICByZXR1cm4gbmFtZXNbTWF0aC5taW4obmFtZXMuaW5kZXhPZihicmVha3BvaW50KSArIDEsIG5hbWVzLmxlbmd0aCAtIDEpXTtcbiAgfVxuICBmdW5jdGlvbiBnZXRNYXhRdWVyeShicmVha3BvaW50KSB7XG4gICAgY29uc3QgbmV4dCA9IGdldE5leHQoYnJlYWtwb2ludCk7XG4gICAgbGV0IHZhbHVlID0gYnJlYWtwb2ludFZhbHVlc1tuZXh0XTtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJykgdmFsdWUgPSBgJHt2YWx1ZSAtIDAuMn1weGA7ZWxzZSB2YWx1ZSA9IGBjYWxjKCR7dmFsdWV9IC0gMC4ycHgpYDtcbiAgICByZXR1cm4gYChtYXgtd2lkdGg6ICR7dmFsdWV9KWA7XG4gIH1cbiAgZnVuY3Rpb24gZ2V0TWluUXVlcnkoYnJlYWtwb2ludCkge1xuICAgIGxldCB2YWx1ZSA9IGJyZWFrcG9pbnRWYWx1ZXNbYnJlYWtwb2ludF07XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpIHtcbiAgICAgIHZhbHVlID0gYCR7dmFsdWV9cHhgO1xuICAgIH1cbiAgICByZXR1cm4gYChtaW4td2lkdGg6ICR7dmFsdWV9KWA7XG4gIH1cblxuICAvKipcbiAgICogTWF0Y2ggYSBzZXQgb2YgYnJlYWtwb2ludHNcbiAgICpcbiAgICogYGBgdHN4XG4gICAqIGNvbnN0IE1pZFNpemVPbmx5ID0gKCkgPT4ge1xuICAgKiAgIGNvbnN0IGlzTWlkID0gdXNlQnJlYWtwb2ludCh7IGxnOiAnZG93bicsIHNtOiAndXAnIH0pO1xuICAgKlxuICAgKiAgIGlmIChpc01pZCkgcmV0dXJuIDxkaXY+T24gYSBSZWFzb25hYmxlIHNpemVkIFNjcmVlbiE8L2Rpdj5cbiAgICogICByZXR1cm4gbnVsbDtcbiAgICogfVxuICAgKiBgYGBcbiAgICogQHBhcmFtIGJyZWFrcG9pbnRNYXAgQW4gb2JqZWN0IG1hcCBvZiBicmVha3BvaW50cyBhbmQgZGlyZWN0aW9ucywgcXVlcmllcyBhcmUgY29uc3RydWN0ZWQgdXNpbmcgXCJhbmRcIiB0byBqb2luXG4gICAqIGJyZWFrcG9pbnRzIHRvZ2V0aGVyXG4gICAqIEBwYXJhbSB3aW5kb3cgT3B0aW9uYWxseSBzcGVjaWZ5IHRoZSB0YXJnZXQgd2luZG93IHRvIG1hdGNoIGFnYWluc3QgKHVzZWZ1bCB3aGVuIHJlbmRlcmluZyBpbnRvIGlmcmFtZXMpXG4gICAqL1xuXG4gIC8qKlxuICAgKiBNYXRjaCBhIHNpbmdsZSBicmVha3BvaW50IGV4YWN0bHksIHVwLCBvciBkb3duLlxuICAgKlxuICAgKiBgYGB0c3hcbiAgICogY29uc3QgUGhvbmVPbmx5ID0gKCkgPT4ge1xuICAgKiAgIGNvbnN0IGlzU21hbGwgPSB1c2VCcmVha3BvaW50KCdzbScsICdkb3duJyk7XG4gICAqXG4gICAqICAgaWYgKGlzU21hbGwpIHJldHVybiA8ZGl2Pk9uIGEgU21hbGwgU2NyZWVuITwvZGl2PlxuICAgKiAgIHJldHVybiBudWxsO1xuICAgKiB9XG4gICAqIGBgYFxuICAgKlxuICAgKiBAcGFyYW0gYnJlYWtwb2ludCBUaGUgYnJlYWtwb2ludCBrZXlcbiAgICogQHBhcmFtIGRpcmVjdGlvbiBBIGRpcmVjdGlvbiAndXAnIGZvciBhIG1heCwgJ2Rvd24nIGZvciBtaW4sIHRydWUgdG8gbWF0Y2ggb25seSB0aGUgYnJlYWtwb2ludFxuICAgKiBAcGFyYW0gd2luZG93IE9wdGlvbmFsbHkgc3BlY2lmeSB0aGUgdGFyZ2V0IHdpbmRvdyB0byBtYXRjaCBhZ2FpbnN0ICh1c2VmdWwgd2hlbiByZW5kZXJpbmcgaW50byBpZnJhbWVzKVxuICAgKi9cblxuICBmdW5jdGlvbiB1c2VCcmVha3BvaW50KGJyZWFrcG9pbnRPck1hcCwgZGlyZWN0aW9uLCB3aW5kb3cpIHtcbiAgICBsZXQgYnJlYWtwb2ludE1hcDtcbiAgICBpZiAodHlwZW9mIGJyZWFrcG9pbnRPck1hcCA9PT0gJ29iamVjdCcpIHtcbiAgICAgIGJyZWFrcG9pbnRNYXAgPSBicmVha3BvaW50T3JNYXA7XG4gICAgICB3aW5kb3cgPSBkaXJlY3Rpb247XG4gICAgICBkaXJlY3Rpb24gPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBkaXJlY3Rpb24gPSBkaXJlY3Rpb24gfHwgdHJ1ZTtcbiAgICAgIGJyZWFrcG9pbnRNYXAgPSB7XG4gICAgICAgIFticmVha3BvaW50T3JNYXBdOiBkaXJlY3Rpb25cbiAgICAgIH07XG4gICAgfVxuICAgIGxldCBxdWVyeSA9IHVzZU1lbW8oKCkgPT4gT2JqZWN0LmVudHJpZXMoYnJlYWtwb2ludE1hcCkucmVkdWNlKChxdWVyeSwgW2tleSwgZGlyZWN0aW9uXSkgPT4ge1xuICAgICAgaWYgKGRpcmVjdGlvbiA9PT0gJ3VwJyB8fCBkaXJlY3Rpb24gPT09IHRydWUpIHtcbiAgICAgICAgcXVlcnkgPSBhbmQocXVlcnksIGdldE1pblF1ZXJ5KGtleSkpO1xuICAgICAgfVxuICAgICAgaWYgKGRpcmVjdGlvbiA9PT0gJ2Rvd24nIHx8IGRpcmVjdGlvbiA9PT0gdHJ1ZSkge1xuICAgICAgICBxdWVyeSA9IGFuZChxdWVyeSwgZ2V0TWF4UXVlcnkoa2V5KSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcXVlcnk7XG4gICAgfSwgJycpLCBbSlNPTi5zdHJpbmdpZnkoYnJlYWtwb2ludE1hcCldKTtcbiAgICByZXR1cm4gdXNlTWVkaWFRdWVyeShxdWVyeSwgd2luZG93KTtcbiAgfVxuICByZXR1cm4gdXNlQnJlYWtwb2ludDtcbn1cbmNvbnN0IHVzZUJyZWFrcG9pbnQgPSBjcmVhdGVCcmVha3BvaW50SG9vayh7XG4gIHhzOiAwLFxuICBzbTogNTc2LFxuICBtZDogNzY4LFxuICBsZzogOTkyLFxuICB4bDogMTIwMCxcbiAgeHhsOiAxNDAwXG59KTtcbmV4cG9ydCBkZWZhdWx0IHVzZUJyZWFrcG9pbnQ7Il0sIm5hbWVzIjpbInVzZU1lZGlhUXVlcnkiLCJ1c2VNZW1vIiwiY3JlYXRlQnJlYWtwb2ludEhvb2siLCJicmVha3BvaW50VmFsdWVzIiwibmFtZXMiLCJPYmplY3QiLCJrZXlzIiwiYW5kIiwicXVlcnkiLCJuZXh0IiwiZ2V0TmV4dCIsImJyZWFrcG9pbnQiLCJNYXRoIiwibWluIiwiaW5kZXhPZiIsImxlbmd0aCIsImdldE1heFF1ZXJ5IiwidmFsdWUiLCJnZXRNaW5RdWVyeSIsInVzZUJyZWFrcG9pbnQiLCJicmVha3BvaW50T3JNYXAiLCJkaXJlY3Rpb24iLCJ3aW5kb3ciLCJicmVha3BvaW50TWFwIiwiZW50cmllcyIsInJlZHVjZSIsImtleSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ4cyIsInNtIiwibWQiLCJsZyIsInhsIiwieHhsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/esm/useBreakpoint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/esm/useCallbackRef.js":
/*!***********************************************************!*\
  !*** ./node_modules/@restart/hooks/esm/useCallbackRef.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ useCallbackRef)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */ function useCallbackRef() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZUNhbGxiYWNrUmVmLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFpQztBQUVqQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0F1QkMsR0FDYyxTQUFTQztJQUN0QixPQUFPRCwrQ0FBUUEsQ0FBQztBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZUNhbGxiYWNrUmVmLmpzP2Y2ODIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbi8qKlxuICogQSBjb252ZW5pZW5jZSBob29rIGFyb3VuZCBgdXNlU3RhdGVgIGRlc2lnbmVkIHRvIGJlIHBhaXJlZCB3aXRoXG4gKiB0aGUgY29tcG9uZW50IFtjYWxsYmFjayByZWZdKGh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9yZWZzLWFuZC10aGUtZG9tLmh0bWwjY2FsbGJhY2stcmVmcykgYXBpLlxuICogQ2FsbGJhY2sgcmVmcyBhcmUgdXNlZnVsIG92ZXIgYHVzZVJlZigpYCB3aGVuIHlvdSBuZWVkIHRvIHJlc3BvbmQgdG8gdGhlIHJlZiBiZWluZyBzZXRcbiAqIGluc3RlYWQgb2YgbGF6aWx5IGFjY2Vzc2luZyBpdCBpbiBhbiBlZmZlY3QuXG4gKlxuICogYGBgdHNcbiAqIGNvbnN0IFtlbGVtZW50LCBhdHRhY2hSZWZdID0gdXNlQ2FsbGJhY2tSZWY8SFRNTERpdkVsZW1lbnQ+KClcbiAqXG4gKiB1c2VFZmZlY3QoKCkgPT4ge1xuICogICBpZiAoIWVsZW1lbnQpIHJldHVyblxuICpcbiAqICAgY29uc3QgY2FsZW5kYXIgPSBuZXcgRnVsbENhbGVuZGFyLkNhbGVuZGFyKGVsZW1lbnQpXG4gKlxuICogICByZXR1cm4gKCkgPT4ge1xuICogICAgIGNhbGVuZGFyLmRlc3Ryb3koKVxuICogICB9XG4gKiB9LCBbZWxlbWVudF0pXG4gKlxuICogcmV0dXJuIDxkaXYgcmVmPXthdHRhY2hSZWZ9IC8+XG4gKiBgYGBcbiAqXG4gKiBAY2F0ZWdvcnkgcmVmc1xuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VDYWxsYmFja1JlZigpIHtcbiAgcmV0dXJuIHVzZVN0YXRlKG51bGwpO1xufSJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsInVzZUNhbGxiYWNrUmVmIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/esm/useCallbackRef.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/esm/useCommittedRef.js":
/*!************************************************************!*\
  !*** ./node_modules/@restart/hooks/esm/useCommittedRef.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */ function useCommittedRef(value) {\n    const ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(value);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        ref.current = value;\n    }, [\n        value\n    ]);\n    return ref;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useCommittedRef);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZUNvbW1pdHRlZFJlZi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMEM7QUFFMUM7Ozs7Ozs7O0NBUUMsR0FDRCxTQUFTRSxnQkFBZ0JDLEtBQUs7SUFDNUIsTUFBTUMsTUFBTUgsNkNBQU1BLENBQUNFO0lBQ25CSCxnREFBU0EsQ0FBQztRQUNSSSxJQUFJQyxPQUFPLEdBQUdGO0lBQ2hCLEdBQUc7UUFBQ0E7S0FBTTtJQUNWLE9BQU9DO0FBQ1Q7QUFDQSxpRUFBZUYsZUFBZUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZUNvbW1pdHRlZFJlZi5qcz9mNmQ5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBgUmVmYCB3aG9zZSB2YWx1ZSBpcyB1cGRhdGVkIGluIGFuIGVmZmVjdCwgZW5zdXJpbmcgdGhlIG1vc3QgcmVjZW50XG4gKiB2YWx1ZSBpcyB0aGUgb25lIHJlbmRlcmVkIHdpdGguIEdlbmVyYWxseSBvbmx5IHJlcXVpcmVkIGZvciBDb25jdXJyZW50IG1vZGUgdXNhZ2VcbiAqIHdoZXJlIHByZXZpb3VzIHdvcmsgaW4gYHJlbmRlcigpYCBtYXkgYmUgZGlzY2FyZGVkIGJlZm9yZSBiZWluZyB1c2VkLlxuICpcbiAqIFRoaXMgaXMgc2FmZSB0byBhY2Nlc3MgaW4gYW4gZXZlbnQgaGFuZGxlci5cbiAqXG4gKiBAcGFyYW0gdmFsdWUgVGhlIGBSZWZgIHZhbHVlXG4gKi9cbmZ1bmN0aW9uIHVzZUNvbW1pdHRlZFJlZih2YWx1ZSkge1xuICBjb25zdCByZWYgPSB1c2VSZWYodmFsdWUpO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHJlZi5jdXJyZW50ID0gdmFsdWU7XG4gIH0sIFt2YWx1ZV0pO1xuICByZXR1cm4gcmVmO1xufVxuZXhwb3J0IGRlZmF1bHQgdXNlQ29tbWl0dGVkUmVmOyJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJ1c2VDb21taXR0ZWRSZWYiLCJ2YWx1ZSIsInJlZiIsImN1cnJlbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/esm/useCommittedRef.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/esm/useEventCallback.js":
/*!*************************************************************!*\
  !*** ./node_modules/@restart/hooks/esm/useEventCallback.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ useEventCallback)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _useCommittedRef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useCommittedRef */ \"(ssr)/./node_modules/@restart/hooks/esm/useCommittedRef.js\");\n\n\nfunction useEventCallback(fn) {\n    const ref = (0,_useCommittedRef__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(fn);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function(...args) {\n        return ref.current && ref.current(...args);\n    }, [\n        ref\n    ]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZUV2ZW50Q2FsbGJhY2suanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFvQztBQUNZO0FBQ2pDLFNBQVNFLGlCQUFpQkMsRUFBRTtJQUN6QyxNQUFNQyxNQUFNSCw0REFBZUEsQ0FBQ0U7SUFDNUIsT0FBT0gsa0RBQVdBLENBQUMsU0FBVSxHQUFHSyxJQUFJO1FBQ2xDLE9BQU9ELElBQUlFLE9BQU8sSUFBSUYsSUFBSUUsT0FBTyxJQUFJRDtJQUN2QyxHQUFHO1FBQUNEO0tBQUk7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZUV2ZW50Q2FsbGJhY2suanM/NjIxOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VDb21taXR0ZWRSZWYgZnJvbSAnLi91c2VDb21taXR0ZWRSZWYnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlRXZlbnRDYWxsYmFjayhmbikge1xuICBjb25zdCByZWYgPSB1c2VDb21taXR0ZWRSZWYoZm4pO1xuICByZXR1cm4gdXNlQ2FsbGJhY2soZnVuY3Rpb24gKC4uLmFyZ3MpIHtcbiAgICByZXR1cm4gcmVmLmN1cnJlbnQgJiYgcmVmLmN1cnJlbnQoLi4uYXJncyk7XG4gIH0sIFtyZWZdKTtcbn0iXSwibmFtZXMiOlsidXNlQ2FsbGJhY2siLCJ1c2VDb21taXR0ZWRSZWYiLCJ1c2VFdmVudENhbGxiYWNrIiwiZm4iLCJyZWYiLCJhcmdzIiwiY3VycmVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/esm/useEventCallback.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/esm/useIsomorphicEffect.js":
/*!****************************************************************!*\
  !*** ./node_modules/@restart/hooks/esm/useIsomorphicEffect.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nconst isReactNative = typeof global !== \"undefined\" && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === \"ReactNative\";\nconst isDOM = typeof document !== \"undefined\";\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */ /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isDOM || isReactNative ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZUlzb21vcnBoaWNFZmZlY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW1EO0FBQ25ELE1BQU1FLGdCQUFnQixPQUFPQyxXQUFXLGVBQ3hDLGFBQWE7QUFDYkEsT0FBT0MsU0FBUyxJQUNoQixhQUFhO0FBQ2JELE9BQU9DLFNBQVMsQ0FBQ0MsT0FBTyxLQUFLO0FBQzdCLE1BQU1DLFFBQVEsT0FBT0MsYUFBYTtBQUVsQzs7Ozs7OztDQU9DLEdBQ0QsaUVBQWVELFNBQVNKLGdCQUFnQkQsa0RBQWVBLEdBQUdELDRDQUFTQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC9ob29rcy9lc20vdXNlSXNvbW9ycGhpY0VmZmVjdC5qcz8yZjBiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlTGF5b3V0RWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuY29uc3QgaXNSZWFjdE5hdGl2ZSA9IHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnICYmXG4vLyBAdHMtaWdub3JlXG5nbG9iYWwubmF2aWdhdG9yICYmXG4vLyBAdHMtaWdub3JlXG5nbG9iYWwubmF2aWdhdG9yLnByb2R1Y3QgPT09ICdSZWFjdE5hdGl2ZSc7XG5jb25zdCBpc0RPTSA9IHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCc7XG5cbi8qKlxuICogSXMgYHVzZUxheW91dEVmZmVjdGAgaW4gYSBET00gb3IgUmVhY3QgTmF0aXZlIGVudmlyb25tZW50LCBvdGhlcndpc2UgcmVzb2x2ZXMgdG8gdXNlRWZmZWN0XG4gKiBPbmx5IHVzZWZ1bCB0byBhdm9pZCB0aGUgY29uc29sZSB3YXJuaW5nLlxuICpcbiAqIFBSRUZFUiBgdXNlRWZmZWN0YCBVTkxFU1MgWU9VIEtOT1cgV0hBVCBZT1UgQVJFIERPSU5HLlxuICpcbiAqIEBjYXRlZ29yeSBlZmZlY3RzXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGlzRE9NIHx8IGlzUmVhY3ROYXRpdmUgPyB1c2VMYXlvdXRFZmZlY3QgOiB1c2VFZmZlY3Q7Il0sIm5hbWVzIjpbInVzZUVmZmVjdCIsInVzZUxheW91dEVmZmVjdCIsImlzUmVhY3ROYXRpdmUiLCJnbG9iYWwiLCJuYXZpZ2F0b3IiLCJwcm9kdWN0IiwiaXNET00iLCJkb2N1bWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/esm/useIsomorphicEffect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/esm/useMediaQuery.js":
/*!**********************************************************!*\
  !*** ./node_modules/@restart/hooks/esm/useMediaQuery.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ useMediaQuery)\n/* harmony export */ });\n/* harmony import */ var _useIsomorphicEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./useIsomorphicEffect */ \"(ssr)/./node_modules/@restart/hooks/esm/useIsomorphicEffect.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst matchersByWindow = new WeakMap();\nconst getMatcher = (query, targetWindow)=>{\n    if (!query || !targetWindow) return undefined;\n    const matchers = matchersByWindow.get(targetWindow) || new Map();\n    matchersByWindow.set(targetWindow, matchers);\n    let mql = matchers.get(query);\n    if (!mql) {\n        mql = targetWindow.matchMedia(query);\n        mql.refCount = 0;\n        matchers.set(mql.media, mql);\n    }\n    return mql;\n};\n/**\n * Match a media query and get updates as the match changes. The media string is\n * passed directly to `window.matchMedia` and run as a Layout Effect, so initial\n * matches are returned before the browser has a chance to paint.\n *\n * ```tsx\n * function Page() {\n *   const isWide = useMediaQuery('min-width: 1000px')\n *\n *   return isWide ? \"very wide\" : 'not so wide'\n * }\n * ```\n *\n * Media query lists are also reused globally, hook calls for the same query\n * will only create a matcher once under the hood.\n *\n * @param query A media query\n * @param targetWindow The window to match against, uses the globally available one as a default.\n */ function useMediaQuery(query, targetWindow =  true ? undefined : 0) {\n    const mql = getMatcher(query, targetWindow);\n    const [matches, setMatches] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(()=>mql ? mql.matches : false);\n    (0,_useIsomorphicEffect__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(()=>{\n        let mql = getMatcher(query, targetWindow);\n        if (!mql) {\n            return setMatches(false);\n        }\n        let matchers = matchersByWindow.get(targetWindow);\n        const handleChange = ()=>{\n            setMatches(mql.matches);\n        };\n        mql.refCount++;\n        mql.addListener(handleChange);\n        handleChange();\n        return ()=>{\n            mql.removeListener(handleChange);\n            mql.refCount--;\n            if (mql.refCount <= 0) {\n                matchers == null ? void 0 : matchers.delete(mql.media);\n            }\n            mql = undefined;\n        };\n    }, [\n        query\n    ]);\n    return matches;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZU1lZGlhUXVlcnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE4QztBQUNiO0FBQ2pDLE1BQU1FLG1CQUFtQixJQUFJQztBQUM3QixNQUFNQyxhQUFhLENBQUNDLE9BQU9DO0lBQ3pCLElBQUksQ0FBQ0QsU0FBUyxDQUFDQyxjQUFjLE9BQU9DO0lBQ3BDLE1BQU1DLFdBQVdOLGlCQUFpQk8sR0FBRyxDQUFDSCxpQkFBaUIsSUFBSUk7SUFDM0RSLGlCQUFpQlMsR0FBRyxDQUFDTCxjQUFjRTtJQUNuQyxJQUFJSSxNQUFNSixTQUFTQyxHQUFHLENBQUNKO0lBQ3ZCLElBQUksQ0FBQ08sS0FBSztRQUNSQSxNQUFNTixhQUFhTyxVQUFVLENBQUNSO1FBQzlCTyxJQUFJRSxRQUFRLEdBQUc7UUFDZk4sU0FBU0csR0FBRyxDQUFDQyxJQUFJRyxLQUFLLEVBQUVIO0lBQzFCO0lBQ0EsT0FBT0E7QUFDVDtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FrQkMsR0FDYyxTQUFTSSxjQUFjWCxLQUFLLEVBQUVDLGVBQWUsS0FBa0IsR0FBY0MsWUFBWVUsQ0FBTTtJQUM1RyxNQUFNTCxNQUFNUixXQUFXQyxPQUFPQztJQUM5QixNQUFNLENBQUNZLFNBQVNDLFdBQVcsR0FBR2xCLCtDQUFRQSxDQUFDLElBQU1XLE1BQU1BLElBQUlNLE9BQU8sR0FBRztJQUNqRWxCLGdFQUFTQSxDQUFDO1FBQ1IsSUFBSVksTUFBTVIsV0FBV0MsT0FBT0M7UUFDNUIsSUFBSSxDQUFDTSxLQUFLO1lBQ1IsT0FBT08sV0FBVztRQUNwQjtRQUNBLElBQUlYLFdBQVdOLGlCQUFpQk8sR0FBRyxDQUFDSDtRQUNwQyxNQUFNYyxlQUFlO1lBQ25CRCxXQUFXUCxJQUFJTSxPQUFPO1FBQ3hCO1FBQ0FOLElBQUlFLFFBQVE7UUFDWkYsSUFBSVMsV0FBVyxDQUFDRDtRQUNoQkE7UUFDQSxPQUFPO1lBQ0xSLElBQUlVLGNBQWMsQ0FBQ0Y7WUFDbkJSLElBQUlFLFFBQVE7WUFDWixJQUFJRixJQUFJRSxRQUFRLElBQUksR0FBRztnQkFDckJOLFlBQVksT0FBTyxLQUFLLElBQUlBLFNBQVNlLE1BQU0sQ0FBQ1gsSUFBSUcsS0FBSztZQUN2RDtZQUNBSCxNQUFNTDtRQUNSO0lBQ0YsR0FBRztRQUFDRjtLQUFNO0lBQ1YsT0FBT2E7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZU1lZGlhUXVlcnkuanM/YjgyYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdXNlRWZmZWN0IGZyb20gJy4vdXNlSXNvbW9ycGhpY0VmZmVjdCc7XG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmNvbnN0IG1hdGNoZXJzQnlXaW5kb3cgPSBuZXcgV2Vha01hcCgpO1xuY29uc3QgZ2V0TWF0Y2hlciA9IChxdWVyeSwgdGFyZ2V0V2luZG93KSA9PiB7XG4gIGlmICghcXVlcnkgfHwgIXRhcmdldFdpbmRvdykgcmV0dXJuIHVuZGVmaW5lZDtcbiAgY29uc3QgbWF0Y2hlcnMgPSBtYXRjaGVyc0J5V2luZG93LmdldCh0YXJnZXRXaW5kb3cpIHx8IG5ldyBNYXAoKTtcbiAgbWF0Y2hlcnNCeVdpbmRvdy5zZXQodGFyZ2V0V2luZG93LCBtYXRjaGVycyk7XG4gIGxldCBtcWwgPSBtYXRjaGVycy5nZXQocXVlcnkpO1xuICBpZiAoIW1xbCkge1xuICAgIG1xbCA9IHRhcmdldFdpbmRvdy5tYXRjaE1lZGlhKHF1ZXJ5KTtcbiAgICBtcWwucmVmQ291bnQgPSAwO1xuICAgIG1hdGNoZXJzLnNldChtcWwubWVkaWEsIG1xbCk7XG4gIH1cbiAgcmV0dXJuIG1xbDtcbn07XG4vKipcbiAqIE1hdGNoIGEgbWVkaWEgcXVlcnkgYW5kIGdldCB1cGRhdGVzIGFzIHRoZSBtYXRjaCBjaGFuZ2VzLiBUaGUgbWVkaWEgc3RyaW5nIGlzXG4gKiBwYXNzZWQgZGlyZWN0bHkgdG8gYHdpbmRvdy5tYXRjaE1lZGlhYCBhbmQgcnVuIGFzIGEgTGF5b3V0IEVmZmVjdCwgc28gaW5pdGlhbFxuICogbWF0Y2hlcyBhcmUgcmV0dXJuZWQgYmVmb3JlIHRoZSBicm93c2VyIGhhcyBhIGNoYW5jZSB0byBwYWludC5cbiAqXG4gKiBgYGB0c3hcbiAqIGZ1bmN0aW9uIFBhZ2UoKSB7XG4gKiAgIGNvbnN0IGlzV2lkZSA9IHVzZU1lZGlhUXVlcnkoJ21pbi13aWR0aDogMTAwMHB4JylcbiAqXG4gKiAgIHJldHVybiBpc1dpZGUgPyBcInZlcnkgd2lkZVwiIDogJ25vdCBzbyB3aWRlJ1xuICogfVxuICogYGBgXG4gKlxuICogTWVkaWEgcXVlcnkgbGlzdHMgYXJlIGFsc28gcmV1c2VkIGdsb2JhbGx5LCBob29rIGNhbGxzIGZvciB0aGUgc2FtZSBxdWVyeVxuICogd2lsbCBvbmx5IGNyZWF0ZSBhIG1hdGNoZXIgb25jZSB1bmRlciB0aGUgaG9vZC5cbiAqXG4gKiBAcGFyYW0gcXVlcnkgQSBtZWRpYSBxdWVyeVxuICogQHBhcmFtIHRhcmdldFdpbmRvdyBUaGUgd2luZG93IHRvIG1hdGNoIGFnYWluc3QsIHVzZXMgdGhlIGdsb2JhbGx5IGF2YWlsYWJsZSBvbmUgYXMgYSBkZWZhdWx0LlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VNZWRpYVF1ZXJ5KHF1ZXJ5LCB0YXJnZXRXaW5kb3cgPSB0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IHdpbmRvdykge1xuICBjb25zdCBtcWwgPSBnZXRNYXRjaGVyKHF1ZXJ5LCB0YXJnZXRXaW5kb3cpO1xuICBjb25zdCBbbWF0Y2hlcywgc2V0TWF0Y2hlc10gPSB1c2VTdGF0ZSgoKSA9PiBtcWwgPyBtcWwubWF0Y2hlcyA6IGZhbHNlKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBsZXQgbXFsID0gZ2V0TWF0Y2hlcihxdWVyeSwgdGFyZ2V0V2luZG93KTtcbiAgICBpZiAoIW1xbCkge1xuICAgICAgcmV0dXJuIHNldE1hdGNoZXMoZmFsc2UpO1xuICAgIH1cbiAgICBsZXQgbWF0Y2hlcnMgPSBtYXRjaGVyc0J5V2luZG93LmdldCh0YXJnZXRXaW5kb3cpO1xuICAgIGNvbnN0IGhhbmRsZUNoYW5nZSA9ICgpID0+IHtcbiAgICAgIHNldE1hdGNoZXMobXFsLm1hdGNoZXMpO1xuICAgIH07XG4gICAgbXFsLnJlZkNvdW50Kys7XG4gICAgbXFsLmFkZExpc3RlbmVyKGhhbmRsZUNoYW5nZSk7XG4gICAgaGFuZGxlQ2hhbmdlKCk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIG1xbC5yZW1vdmVMaXN0ZW5lcihoYW5kbGVDaGFuZ2UpO1xuICAgICAgbXFsLnJlZkNvdW50LS07XG4gICAgICBpZiAobXFsLnJlZkNvdW50IDw9IDApIHtcbiAgICAgICAgbWF0Y2hlcnMgPT0gbnVsbCA/IHZvaWQgMCA6IG1hdGNoZXJzLmRlbGV0ZShtcWwubWVkaWEpO1xuICAgICAgfVxuICAgICAgbXFsID0gdW5kZWZpbmVkO1xuICAgIH07XG4gIH0sIFtxdWVyeV0pO1xuICByZXR1cm4gbWF0Y2hlcztcbn0iXSwibmFtZXMiOlsidXNlRWZmZWN0IiwidXNlU3RhdGUiLCJtYXRjaGVyc0J5V2luZG93IiwiV2Vha01hcCIsImdldE1hdGNoZXIiLCJxdWVyeSIsInRhcmdldFdpbmRvdyIsInVuZGVmaW5lZCIsIm1hdGNoZXJzIiwiZ2V0IiwiTWFwIiwic2V0IiwibXFsIiwibWF0Y2hNZWRpYSIsInJlZkNvdW50IiwibWVkaWEiLCJ1c2VNZWRpYVF1ZXJ5Iiwid2luZG93IiwibWF0Y2hlcyIsInNldE1hdGNoZXMiLCJoYW5kbGVDaGFuZ2UiLCJhZGRMaXN0ZW5lciIsInJlbW92ZUxpc3RlbmVyIiwiZGVsZXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/esm/useMediaQuery.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/esm/useMergedRefs.js":
/*!**********************************************************!*\
  !*** ./node_modules/@restart/hooks/esm/useMergedRefs.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   mergeRefs: () => (/* binding */ mergeRefs)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nconst toFnRef = (ref)=>!ref || typeof ref === \"function\" ? ref : (value)=>{\n        ref.current = value;\n    };\nfunction mergeRefs(refA, refB) {\n    const a = toFnRef(refA);\n    const b = toFnRef(refB);\n    return (value)=>{\n        if (a) a(value);\n        if (b) b(value);\n    };\n}\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */ function useMergedRefs(refA, refB) {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>mergeRefs(refA, refB), [\n        refA,\n        refB\n    ]);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useMergedRefs);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZU1lcmdlZFJlZnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFnQztBQUNoQyxNQUFNQyxVQUFVQyxDQUFBQSxNQUFPLENBQUNBLE9BQU8sT0FBT0EsUUFBUSxhQUFhQSxNQUFNQyxDQUFBQTtRQUMvREQsSUFBSUUsT0FBTyxHQUFHRDtJQUNoQjtBQUNPLFNBQVNFLFVBQVVDLElBQUksRUFBRUMsSUFBSTtJQUNsQyxNQUFNQyxJQUFJUCxRQUFRSztJQUNsQixNQUFNRyxJQUFJUixRQUFRTTtJQUNsQixPQUFPSixDQUFBQTtRQUNMLElBQUlLLEdBQUdBLEVBQUVMO1FBQ1QsSUFBSU0sR0FBR0EsRUFBRU47SUFDWDtBQUNGO0FBRUE7Ozs7Ozs7Ozs7Ozs7OztDQWVDLEdBQ0QsU0FBU08sY0FBY0osSUFBSSxFQUFFQyxJQUFJO0lBQy9CLE9BQU9QLDhDQUFPQSxDQUFDLElBQU1LLFVBQVVDLE1BQU1DLE9BQU87UUFBQ0Q7UUFBTUM7S0FBSztBQUMxRDtBQUNBLGlFQUFlRyxhQUFhQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC9ob29rcy9lc20vdXNlTWVyZ2VkUmVmcy5qcz83YTkxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5jb25zdCB0b0ZuUmVmID0gcmVmID0+ICFyZWYgfHwgdHlwZW9mIHJlZiA9PT0gJ2Z1bmN0aW9uJyA/IHJlZiA6IHZhbHVlID0+IHtcbiAgcmVmLmN1cnJlbnQgPSB2YWx1ZTtcbn07XG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VSZWZzKHJlZkEsIHJlZkIpIHtcbiAgY29uc3QgYSA9IHRvRm5SZWYocmVmQSk7XG4gIGNvbnN0IGIgPSB0b0ZuUmVmKHJlZkIpO1xuICByZXR1cm4gdmFsdWUgPT4ge1xuICAgIGlmIChhKSBhKHZhbHVlKTtcbiAgICBpZiAoYikgYih2YWx1ZSk7XG4gIH07XG59XG5cbi8qKlxuICogQ3JlYXRlIGFuZCByZXR1cm5zIGEgc2luZ2xlIGNhbGxiYWNrIHJlZiBjb21wb3NlZCBmcm9tIHR3byBvdGhlciBSZWZzLlxuICpcbiAqIGBgYHRzeFxuICogY29uc3QgQnV0dG9uID0gUmVhY3QuZm9yd2FyZFJlZigocHJvcHMsIHJlZikgPT4ge1xuICogICBjb25zdCBbZWxlbWVudCwgYXR0YWNoUmVmXSA9IHVzZUNhbGxiYWNrUmVmPEhUTUxCdXR0b25FbGVtZW50PigpO1xuICogICBjb25zdCBtZXJnZWRSZWYgPSB1c2VNZXJnZWRSZWZzKHJlZiwgYXR0YWNoUmVmKTtcbiAqXG4gKiAgIHJldHVybiA8YnV0dG9uIHJlZj17bWVyZ2VkUmVmfSB7Li4ucHJvcHN9Lz5cbiAqIH0pXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gcmVmQSBBIENhbGxiYWNrIG9yIG11dGFibGUgUmVmXG4gKiBAcGFyYW0gcmVmQiBBIENhbGxiYWNrIG9yIG11dGFibGUgUmVmXG4gKiBAY2F0ZWdvcnkgcmVmc1xuICovXG5mdW5jdGlvbiB1c2VNZXJnZWRSZWZzKHJlZkEsIHJlZkIpIHtcbiAgcmV0dXJuIHVzZU1lbW8oKCkgPT4gbWVyZ2VSZWZzKHJlZkEsIHJlZkIpLCBbcmVmQSwgcmVmQl0pO1xufVxuZXhwb3J0IGRlZmF1bHQgdXNlTWVyZ2VkUmVmczsiXSwibmFtZXMiOlsidXNlTWVtbyIsInRvRm5SZWYiLCJyZWYiLCJ2YWx1ZSIsImN1cnJlbnQiLCJtZXJnZVJlZnMiLCJyZWZBIiwicmVmQiIsImEiLCJiIiwidXNlTWVyZ2VkUmVmcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/esm/useMergedRefs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/esm/useMounted.js":
/*!*******************************************************!*\
  !*** ./node_modules/@restart/hooks/esm/useMounted.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ useMounted)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */ function useMounted() {\n    const mounted = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(true);\n    const isMounted = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(()=>mounted.current);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        mounted.current = true;\n        return ()=>{\n            mounted.current = false;\n        };\n    }, []);\n    return isMounted.current;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZU1vdW50ZWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBDO0FBRTFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBbUJDLEdBQ2MsU0FBU0U7SUFDdEIsTUFBTUMsVUFBVUgsNkNBQU1BLENBQUM7SUFDdkIsTUFBTUksWUFBWUosNkNBQU1BLENBQUMsSUFBTUcsUUFBUUUsT0FBTztJQUM5Q0osZ0RBQVNBLENBQUM7UUFDUkUsUUFBUUUsT0FBTyxHQUFHO1FBQ2xCLE9BQU87WUFDTEYsUUFBUUUsT0FBTyxHQUFHO1FBQ3BCO0lBQ0YsR0FBRyxFQUFFO0lBQ0wsT0FBT0QsVUFBVUMsT0FBTztBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZU1vdW50ZWQuanM/N2Q3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VSZWYsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcblxuLyoqXG4gKiBUcmFjayB3aGV0aGVyIGEgY29tcG9uZW50IGlzIGN1cnJlbnQgbW91bnRlZC4gR2VuZXJhbGx5IGxlc3MgcHJlZmVyYWJsZSB0aGFuXG4gKiBwcm9wZXJsbHkgY2FuY2VsaW5nIGVmZmVjdHMgc28gdGhleSBkb24ndCBydW4gYWZ0ZXIgYSBjb21wb25lbnQgaXMgdW5tb3VudGVkLFxuICogYnV0IGhlbHBmdWwgaW4gY2FzZXMgd2hlcmUgdGhhdCBpc24ndCBmZWFzaWJsZSwgc3VjaCBhcyBhIGBQcm9taXNlYCByZXNvbHV0aW9uLlxuICpcbiAqIEByZXR1cm5zIGEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIHRoZSBjdXJyZW50IGlzTW91bnRlZCBzdGF0ZSBvZiB0aGUgY29tcG9uZW50XG4gKlxuICogYGBgdHNcbiAqIGNvbnN0IFtkYXRhLCBzZXREYXRhXSA9IHVzZVN0YXRlKG51bGwpXG4gKiBjb25zdCBpc01vdW50ZWQgPSB1c2VNb3VudGVkKClcbiAqXG4gKiB1c2VFZmZlY3QoKCkgPT4ge1xuICogICBmZXRjaGRhdGEoKS50aGVuKChuZXdEYXRhKSA9PiB7XG4gKiAgICAgIGlmIChpc01vdW50ZWQoKSkge1xuICogICAgICAgIHNldERhdGEobmV3RGF0YSk7XG4gKiAgICAgIH1cbiAqICAgfSlcbiAqIH0pXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlTW91bnRlZCgpIHtcbiAgY29uc3QgbW91bnRlZCA9IHVzZVJlZih0cnVlKTtcbiAgY29uc3QgaXNNb3VudGVkID0gdXNlUmVmKCgpID0+IG1vdW50ZWQuY3VycmVudCk7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgbW91bnRlZC5jdXJyZW50ID0gdHJ1ZTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgbW91bnRlZC5jdXJyZW50ID0gZmFsc2U7XG4gICAgfTtcbiAgfSwgW10pO1xuICByZXR1cm4gaXNNb3VudGVkLmN1cnJlbnQ7XG59Il0sIm5hbWVzIjpbInVzZVJlZiIsInVzZUVmZmVjdCIsInVzZU1vdW50ZWQiLCJtb3VudGVkIiwiaXNNb3VudGVkIiwiY3VycmVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/esm/useMounted.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/esm/useTimeout.js":
/*!*******************************************************!*\
  !*** ./node_modules/@restart/hooks/esm/useTimeout.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ useTimeout)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _useMounted__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useMounted */ \"(ssr)/./node_modules/@restart/hooks/esm/useMounted.js\");\n/* harmony import */ var _useWillUnmount__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useWillUnmount */ \"(ssr)/./node_modules/@restart/hooks/esm/useWillUnmount.js\");\n\n\n\n/*\n * Browsers including Internet Explorer, Chrome, Safari, and Firefox store the\n * delay as a 32-bit signed integer internally. This causes an integer overflow\n * when using delays larger than 2,147,483,647 ms (about 24.8 days),\n * resulting in the timeout being executed immediately.\n *\n * via: https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout\n */ const MAX_DELAY_MS = 2 ** 31 - 1;\nfunction setChainedTimeout(handleRef, fn, timeoutAtMs) {\n    const delayMs = timeoutAtMs - Date.now();\n    handleRef.current = delayMs <= MAX_DELAY_MS ? setTimeout(fn, delayMs) : setTimeout(()=>setChainedTimeout(handleRef, fn, timeoutAtMs), MAX_DELAY_MS);\n}\n/**\n * Returns a controller object for setting a timeout that is properly cleaned up\n * once the component unmounts. New timeouts cancel and replace existing ones.\n *\n *\n *\n * ```tsx\n * const { set, clear } = useTimeout();\n * const [hello, showHello] = useState(false);\n * //Display hello after 5 seconds\n * set(() => showHello(true), 5000);\n * return (\n *   <div className=\"App\">\n *     {hello ? <h3>Hello</h3> : null}\n *   </div>\n * );\n * ```\n */ function useTimeout() {\n    const isMounted = (0,_useMounted__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n    // types are confused between node and web here IDK\n    const handleRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    (0,_useWillUnmount__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(()=>clearTimeout(handleRef.current));\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        const clear = ()=>clearTimeout(handleRef.current);\n        function set(fn, delayMs = 0) {\n            if (!isMounted()) return;\n            clear();\n            if (delayMs <= MAX_DELAY_MS) {\n                // For simplicity, if the timeout is short, just set a normal timeout.\n                handleRef.current = setTimeout(fn, delayMs);\n            } else {\n                setChainedTimeout(handleRef, fn, Date.now() + delayMs);\n            }\n        }\n        return {\n            set,\n            clear,\n            handleRef\n        };\n    }, []);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZVRpbWVvdXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBd0M7QUFDRjtBQUNRO0FBRTlDOzs7Ozs7O0NBT0MsR0FDRCxNQUFNSSxlQUFlLEtBQUssS0FBSztBQUMvQixTQUFTQyxrQkFBa0JDLFNBQVMsRUFBRUMsRUFBRSxFQUFFQyxXQUFXO0lBQ25ELE1BQU1DLFVBQVVELGNBQWNFLEtBQUtDLEdBQUc7SUFDdENMLFVBQVVNLE9BQU8sR0FBR0gsV0FBV0wsZUFBZVMsV0FBV04sSUFBSUUsV0FBV0ksV0FBVyxJQUFNUixrQkFBa0JDLFdBQVdDLElBQUlDLGNBQWNKO0FBQzFJO0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBaUJDLEdBQ2MsU0FBU1U7SUFDdEIsTUFBTUMsWUFBWWIsdURBQVVBO0lBRTVCLG1EQUFtRDtJQUNuRCxNQUFNSSxZQUFZTCw2Q0FBTUE7SUFDeEJFLDJEQUFjQSxDQUFDLElBQU1hLGFBQWFWLFVBQVVNLE9BQU87SUFDbkQsT0FBT1osOENBQU9BLENBQUM7UUFDYixNQUFNaUIsUUFBUSxJQUFNRCxhQUFhVixVQUFVTSxPQUFPO1FBQ2xELFNBQVNNLElBQUlYLEVBQUUsRUFBRUUsVUFBVSxDQUFDO1lBQzFCLElBQUksQ0FBQ00sYUFBYTtZQUNsQkU7WUFDQSxJQUFJUixXQUFXTCxjQUFjO2dCQUMzQixzRUFBc0U7Z0JBQ3RFRSxVQUFVTSxPQUFPLEdBQUdDLFdBQVdOLElBQUlFO1lBQ3JDLE9BQU87Z0JBQ0xKLGtCQUFrQkMsV0FBV0MsSUFBSUcsS0FBS0MsR0FBRyxLQUFLRjtZQUNoRDtRQUNGO1FBQ0EsT0FBTztZQUNMUztZQUNBRDtZQUNBWDtRQUNGO0lBQ0YsR0FBRyxFQUFFO0FBQ1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L2hvb2tzL2VzbS91c2VUaW1lb3V0LmpzPzA3NTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlTWVtbywgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZU1vdW50ZWQgZnJvbSAnLi91c2VNb3VudGVkJztcbmltcG9ydCB1c2VXaWxsVW5tb3VudCBmcm9tICcuL3VzZVdpbGxVbm1vdW50JztcblxuLypcbiAqIEJyb3dzZXJzIGluY2x1ZGluZyBJbnRlcm5ldCBFeHBsb3JlciwgQ2hyb21lLCBTYWZhcmksIGFuZCBGaXJlZm94IHN0b3JlIHRoZVxuICogZGVsYXkgYXMgYSAzMi1iaXQgc2lnbmVkIGludGVnZXIgaW50ZXJuYWxseS4gVGhpcyBjYXVzZXMgYW4gaW50ZWdlciBvdmVyZmxvd1xuICogd2hlbiB1c2luZyBkZWxheXMgbGFyZ2VyIHRoYW4gMiwxNDcsNDgzLDY0NyBtcyAoYWJvdXQgMjQuOCBkYXlzKSxcbiAqIHJlc3VsdGluZyBpbiB0aGUgdGltZW91dCBiZWluZyBleGVjdXRlZCBpbW1lZGlhdGVseS5cbiAqXG4gKiB2aWE6IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9XaW5kb3dPcldvcmtlckdsb2JhbFNjb3BlL3NldFRpbWVvdXRcbiAqL1xuY29uc3QgTUFYX0RFTEFZX01TID0gMiAqKiAzMSAtIDE7XG5mdW5jdGlvbiBzZXRDaGFpbmVkVGltZW91dChoYW5kbGVSZWYsIGZuLCB0aW1lb3V0QXRNcykge1xuICBjb25zdCBkZWxheU1zID0gdGltZW91dEF0TXMgLSBEYXRlLm5vdygpO1xuICBoYW5kbGVSZWYuY3VycmVudCA9IGRlbGF5TXMgPD0gTUFYX0RFTEFZX01TID8gc2V0VGltZW91dChmbiwgZGVsYXlNcykgOiBzZXRUaW1lb3V0KCgpID0+IHNldENoYWluZWRUaW1lb3V0KGhhbmRsZVJlZiwgZm4sIHRpbWVvdXRBdE1zKSwgTUFYX0RFTEFZX01TKTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgY29udHJvbGxlciBvYmplY3QgZm9yIHNldHRpbmcgYSB0aW1lb3V0IHRoYXQgaXMgcHJvcGVybHkgY2xlYW5lZCB1cFxuICogb25jZSB0aGUgY29tcG9uZW50IHVubW91bnRzLiBOZXcgdGltZW91dHMgY2FuY2VsIGFuZCByZXBsYWNlIGV4aXN0aW5nIG9uZXMuXG4gKlxuICpcbiAqXG4gKiBgYGB0c3hcbiAqIGNvbnN0IHsgc2V0LCBjbGVhciB9ID0gdXNlVGltZW91dCgpO1xuICogY29uc3QgW2hlbGxvLCBzaG93SGVsbG9dID0gdXNlU3RhdGUoZmFsc2UpO1xuICogLy9EaXNwbGF5IGhlbGxvIGFmdGVyIDUgc2Vjb25kc1xuICogc2V0KCgpID0+IHNob3dIZWxsbyh0cnVlKSwgNTAwMCk7XG4gKiByZXR1cm4gKFxuICogICA8ZGl2IGNsYXNzTmFtZT1cIkFwcFwiPlxuICogICAgIHtoZWxsbyA/IDxoMz5IZWxsbzwvaDM+IDogbnVsbH1cbiAqICAgPC9kaXY+XG4gKiApO1xuICogYGBgXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVzZVRpbWVvdXQoKSB7XG4gIGNvbnN0IGlzTW91bnRlZCA9IHVzZU1vdW50ZWQoKTtcblxuICAvLyB0eXBlcyBhcmUgY29uZnVzZWQgYmV0d2VlbiBub2RlIGFuZCB3ZWIgaGVyZSBJREtcbiAgY29uc3QgaGFuZGxlUmVmID0gdXNlUmVmKCk7XG4gIHVzZVdpbGxVbm1vdW50KCgpID0+IGNsZWFyVGltZW91dChoYW5kbGVSZWYuY3VycmVudCkpO1xuICByZXR1cm4gdXNlTWVtbygoKSA9PiB7XG4gICAgY29uc3QgY2xlYXIgPSAoKSA9PiBjbGVhclRpbWVvdXQoaGFuZGxlUmVmLmN1cnJlbnQpO1xuICAgIGZ1bmN0aW9uIHNldChmbiwgZGVsYXlNcyA9IDApIHtcbiAgICAgIGlmICghaXNNb3VudGVkKCkpIHJldHVybjtcbiAgICAgIGNsZWFyKCk7XG4gICAgICBpZiAoZGVsYXlNcyA8PSBNQVhfREVMQVlfTVMpIHtcbiAgICAgICAgLy8gRm9yIHNpbXBsaWNpdHksIGlmIHRoZSB0aW1lb3V0IGlzIHNob3J0LCBqdXN0IHNldCBhIG5vcm1hbCB0aW1lb3V0LlxuICAgICAgICBoYW5kbGVSZWYuY3VycmVudCA9IHNldFRpbWVvdXQoZm4sIGRlbGF5TXMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2V0Q2hhaW5lZFRpbWVvdXQoaGFuZGxlUmVmLCBmbiwgRGF0ZS5ub3coKSArIGRlbGF5TXMpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgc2V0LFxuICAgICAgY2xlYXIsXG4gICAgICBoYW5kbGVSZWZcbiAgICB9O1xuICB9LCBbXSk7XG59Il0sIm5hbWVzIjpbInVzZU1lbW8iLCJ1c2VSZWYiLCJ1c2VNb3VudGVkIiwidXNlV2lsbFVubW91bnQiLCJNQVhfREVMQVlfTVMiLCJzZXRDaGFpbmVkVGltZW91dCIsImhhbmRsZVJlZiIsImZuIiwidGltZW91dEF0TXMiLCJkZWxheU1zIiwiRGF0ZSIsIm5vdyIsImN1cnJlbnQiLCJzZXRUaW1lb3V0IiwidXNlVGltZW91dCIsImlzTW91bnRlZCIsImNsZWFyVGltZW91dCIsImNsZWFyIiwic2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/esm/useTimeout.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/esm/useUpdatedRef.js":
/*!**********************************************************!*\
  !*** ./node_modules/@restart/hooks/esm/useUpdatedRef.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ useUpdatedRef)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */ function useUpdatedRef(value) {\n    const valueRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(value);\n    valueRef.current = value;\n    return valueRef;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZVVwZGF0ZWRSZWYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQStCO0FBRS9COzs7OztDQUtDLEdBQ2MsU0FBU0MsY0FBY0MsS0FBSztJQUN6QyxNQUFNQyxXQUFXSCw2Q0FBTUEsQ0FBQ0U7SUFDeEJDLFNBQVNDLE9BQU8sR0FBR0Y7SUFDbkIsT0FBT0M7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZVVwZGF0ZWRSZWYuanM/M2YxMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5cbi8qKlxuICogUmV0dXJucyBhIHJlZiB0aGF0IGlzIGltbWVkaWF0ZWx5IHVwZGF0ZWQgd2l0aCB0aGUgbmV3IHZhbHVlXG4gKlxuICogQHBhcmFtIHZhbHVlIFRoZSBSZWYgdmFsdWVcbiAqIEBjYXRlZ29yeSByZWZzXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVzZVVwZGF0ZWRSZWYodmFsdWUpIHtcbiAgY29uc3QgdmFsdWVSZWYgPSB1c2VSZWYodmFsdWUpO1xuICB2YWx1ZVJlZi5jdXJyZW50ID0gdmFsdWU7XG4gIHJldHVybiB2YWx1ZVJlZjtcbn0iXSwibmFtZXMiOlsidXNlUmVmIiwidXNlVXBkYXRlZFJlZiIsInZhbHVlIiwidmFsdWVSZWYiLCJjdXJyZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/esm/useUpdatedRef.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/esm/useWillUnmount.js":
/*!***********************************************************!*\
  !*** ./node_modules/@restart/hooks/esm/useWillUnmount.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ useWillUnmount)\n/* harmony export */ });\n/* harmony import */ var _useUpdatedRef__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./useUpdatedRef */ \"(ssr)/./node_modules/@restart/hooks/esm/useUpdatedRef.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */ function useWillUnmount(fn) {\n    const onUnmount = (0,_useUpdatedRef__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(fn);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>()=>onUnmount.current(), []);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZVdpbGxVbm1vdW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNEM7QUFDVjtBQUVsQzs7Ozs7Q0FLQyxHQUNjLFNBQVNFLGVBQWVDLEVBQUU7SUFDdkMsTUFBTUMsWUFBWUosMERBQWFBLENBQUNHO0lBQ2hDRixnREFBU0EsQ0FBQyxJQUFNLElBQU1HLFVBQVVDLE9BQU8sSUFBSSxFQUFFO0FBQy9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC9ob29rcy9lc20vdXNlV2lsbFVubW91bnQuanM/MDZiNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdXNlVXBkYXRlZFJlZiBmcm9tICcuL3VzZVVwZGF0ZWRSZWYnO1xuaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuXG4vKipcbiAqIEF0dGFjaCBhIGNhbGxiYWNrIHRoYXQgZmlyZXMgd2hlbiBhIGNvbXBvbmVudCB1bm1vdW50c1xuICpcbiAqIEBwYXJhbSBmbiBIYW5kbGVyIHRvIHJ1biB3aGVuIHRoZSBjb21wb25lbnQgdW5tb3VudHNcbiAqIEBjYXRlZ29yeSBlZmZlY3RzXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVzZVdpbGxVbm1vdW50KGZuKSB7XG4gIGNvbnN0IG9uVW5tb3VudCA9IHVzZVVwZGF0ZWRSZWYoZm4pO1xuICB1c2VFZmZlY3QoKCkgPT4gKCkgPT4gb25Vbm1vdW50LmN1cnJlbnQoKSwgW10pO1xufSJdLCJuYW1lcyI6WyJ1c2VVcGRhdGVkUmVmIiwidXNlRWZmZWN0IiwidXNlV2lsbFVubW91bnQiLCJmbiIsIm9uVW5tb3VudCIsImN1cnJlbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/esm/useWillUnmount.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/Anchor.js":
/*!************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/Anchor.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports.isTrivialHref = isTrivialHref;\nexports[\"default\"] = void 0;\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _hooks = __webpack_require__(/*! @restart/hooks */ \"(ssr)/./node_modules/@restart/hooks/cjs/index.js\");\nvar _Button = __webpack_require__(/*! ./Button */ \"(ssr)/./node_modules/@restart/ui/cjs/Button.js\");\nvar _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nconst _excluded = [\n    \"onKeyDown\"\n];\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nfunction isTrivialHref(href) {\n    return !href || href.trim() === \"#\";\n}\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */ const Anchor = /*#__PURE__*/ React.forwardRef((_ref, ref)=>{\n    let { onKeyDown } = _ref, props = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const [buttonProps] = (0, _Button.useButtonProps)(Object.assign({\n        tagName: \"a\"\n    }, props));\n    const handleKeyDown = (0, _hooks.useEventCallback)((e)=>{\n        buttonProps.onKeyDown(e);\n        onKeyDown == null ? void 0 : onKeyDown(e);\n    });\n    if (isTrivialHref(props.href) || props.role === \"button\") {\n        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(\"a\", Object.assign({\n            ref: ref\n        }, props, buttonProps, {\n            onKeyDown: handleKeyDown\n        }));\n    }\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(\"a\", Object.assign({\n        ref: ref\n    }, props, {\n        onKeyDown: onKeyDown\n    }));\n});\nAnchor.displayName = \"Anchor\";\nvar _default = Anchor;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/Anchor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/Button.js":
/*!************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/Button.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports.isTrivialHref = isTrivialHref;\nexports.useButtonProps = useButtonProps;\nexports[\"default\"] = void 0;\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nconst _excluded = [\n    \"as\",\n    \"disabled\"\n];\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nfunction isTrivialHref(href) {\n    return !href || href.trim() === \"#\";\n}\nfunction useButtonProps({ tagName, disabled, href, target, rel, role, onClick, tabIndex = 0, type }) {\n    if (!tagName) {\n        if (href != null || target != null || rel != null) {\n            tagName = \"a\";\n        } else {\n            tagName = \"button\";\n        }\n    }\n    const meta = {\n        tagName\n    };\n    if (tagName === \"button\") {\n        return [\n            {\n                type: type || \"button\",\n                disabled\n            },\n            meta\n        ];\n    }\n    const handleClick = (event)=>{\n        if (disabled || tagName === \"a\" && isTrivialHref(href)) {\n            event.preventDefault();\n        }\n        if (disabled) {\n            event.stopPropagation();\n            return;\n        }\n        onClick == null ? void 0 : onClick(event);\n    };\n    const handleKeyDown = (event)=>{\n        if (event.key === \" \") {\n            event.preventDefault();\n            handleClick(event);\n        }\n    };\n    if (tagName === \"a\") {\n        // Ensure there's a href so Enter can trigger anchor button.\n        href || (href = \"#\");\n        if (disabled) {\n            href = undefined;\n        }\n    }\n    return [\n        {\n            role: role != null ? role : \"button\",\n            // explicitly undefined so that it overrides the props disabled in a spread\n            // e.g. <Tag {...props} {...hookProps} />\n            disabled: undefined,\n            tabIndex: disabled ? undefined : tabIndex,\n            href,\n            target: tagName === \"a\" ? target : undefined,\n            \"aria-disabled\": !disabled ? undefined : disabled,\n            rel: tagName === \"a\" ? rel : undefined,\n            onClick: handleClick,\n            onKeyDown: handleKeyDown\n        },\n        meta\n    ];\n}\nconst Button = /*#__PURE__*/ React.forwardRef((_ref, ref)=>{\n    let { as: asProp, disabled } = _ref, props = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const [buttonProps, { tagName: Component }] = useButtonProps(Object.assign({\n        tagName: asProp,\n        disabled\n    }, props));\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(Component, Object.assign({}, props, buttonProps, {\n        ref: ref\n    }));\n});\nButton.displayName = \"Button\";\nvar _default = Button;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/Button.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/DataKey.js":
/*!*************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/DataKey.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nexports.__esModule = true;\nexports.dataAttr = dataAttr;\nexports.dataProp = dataProp;\nexports.PROPERTY_PREFIX = exports.ATTRIBUTE_PREFIX = void 0;\nconst ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexports.ATTRIBUTE_PREFIX = ATTRIBUTE_PREFIX;\nconst PROPERTY_PREFIX = `rrUi`;\nexports.PROPERTY_PREFIX = PROPERTY_PREFIX;\nfunction dataAttr(property) {\n    return `${ATTRIBUTE_PREFIX}${property}`;\n}\nfunction dataProp(property) {\n    return `${PROPERTY_PREFIX}${property}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL0RhdGFLZXkuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGdCQUFnQixHQUFHRTtBQUNuQkYsZ0JBQWdCLEdBQUdHO0FBQ25CSCx1QkFBdUIsR0FBR0Esd0JBQXdCLEdBQUcsS0FBSztBQUMxRCxNQUFNSyxtQkFBbUIsQ0FBQyxXQUFXLENBQUM7QUFDdENMLHdCQUF3QixHQUFHSztBQUMzQixNQUFNRCxrQkFBa0IsQ0FBQyxJQUFJLENBQUM7QUFDOUJKLHVCQUF1QixHQUFHSTtBQUMxQixTQUFTRixTQUFTSSxRQUFRO0lBQ3hCLE9BQU8sQ0FBQyxFQUFFRCxpQkFBaUIsRUFBRUMsU0FBUyxDQUFDO0FBQ3pDO0FBQ0EsU0FBU0gsU0FBU0csUUFBUTtJQUN4QixPQUFPLENBQUMsRUFBRUYsZ0JBQWdCLEVBQUVFLFNBQVMsQ0FBQztBQUN4QyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL0RhdGFLZXkuanM/MTY1NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGF0YUF0dHIgPSBkYXRhQXR0cjtcbmV4cG9ydHMuZGF0YVByb3AgPSBkYXRhUHJvcDtcbmV4cG9ydHMuUFJPUEVSVFlfUFJFRklYID0gZXhwb3J0cy5BVFRSSUJVVEVfUFJFRklYID0gdm9pZCAwO1xuY29uc3QgQVRUUklCVVRFX1BSRUZJWCA9IGBkYXRhLXJyLXVpLWA7XG5leHBvcnRzLkFUVFJJQlVURV9QUkVGSVggPSBBVFRSSUJVVEVfUFJFRklYO1xuY29uc3QgUFJPUEVSVFlfUFJFRklYID0gYHJyVWlgO1xuZXhwb3J0cy5QUk9QRVJUWV9QUkVGSVggPSBQUk9QRVJUWV9QUkVGSVg7XG5mdW5jdGlvbiBkYXRhQXR0cihwcm9wZXJ0eSkge1xuICByZXR1cm4gYCR7QVRUUklCVVRFX1BSRUZJWH0ke3Byb3BlcnR5fWA7XG59XG5mdW5jdGlvbiBkYXRhUHJvcChwcm9wZXJ0eSkge1xuICByZXR1cm4gYCR7UFJPUEVSVFlfUFJFRklYfSR7cHJvcGVydHl9YDtcbn0iXSwibmFtZXMiOlsiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJkYXRhQXR0ciIsImRhdGFQcm9wIiwiUFJPUEVSVFlfUFJFRklYIiwiQVRUUklCVVRFX1BSRUZJWCIsInByb3BlcnR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/DataKey.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/ImperativeTransition.js":
/*!**************************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/ImperativeTransition.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports.useTransition = useTransition;\nexports[\"default\"] = ImperativeTransition;\nexports.renderTransition = renderTransition;\nvar _useMergedRefs = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useMergedRefs */ \"(ssr)/./node_modules/@restart/hooks/cjs/useMergedRefs.js\"));\nvar _useEventCallback = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useEventCallback */ \"(ssr)/./node_modules/@restart/hooks/cjs/useEventCallback.js\"));\nvar _useIsomorphicEffect = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useIsomorphicEffect */ \"(ssr)/./node_modules/@restart/hooks/cjs/useIsomorphicEffect.js\"));\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _NoopTransition = _interopRequireDefault(__webpack_require__(/*! ./NoopTransition */ \"(ssr)/./node_modules/@restart/ui/cjs/NoopTransition.js\"));\nvar _RTGTransition = _interopRequireDefault(__webpack_require__(/*! ./RTGTransition */ \"(ssr)/./node_modules/@restart/ui/cjs/RTGTransition.js\"));\nvar _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction useTransition({ in: inProp, onTransition }) {\n    const ref = (0, _react.useRef)(null);\n    const isInitialRef = (0, _react.useRef)(true);\n    const handleTransition = (0, _useEventCallback.default)(onTransition);\n    (0, _useIsomorphicEffect.default)(()=>{\n        if (!ref.current) {\n            return undefined;\n        }\n        let stale = false;\n        handleTransition({\n            in: inProp,\n            element: ref.current,\n            initial: isInitialRef.current,\n            isStale: ()=>stale\n        });\n        return ()=>{\n            stale = true;\n        };\n    }, [\n        inProp,\n        handleTransition\n    ]);\n    (0, _useIsomorphicEffect.default)(()=>{\n        isInitialRef.current = false;\n        // this is for strict mode\n        return ()=>{\n            isInitialRef.current = true;\n        };\n    }, []);\n    return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */ function ImperativeTransition({ children, in: inProp, onExited, onEntered, transition }) {\n    const [exited, setExited] = (0, _react.useState)(!inProp);\n    // TODO: I think this needs to be in an effect\n    if (inProp && exited) {\n        setExited(false);\n    }\n    const ref = useTransition({\n        in: !!inProp,\n        onTransition: (options)=>{\n            const onFinish = ()=>{\n                if (options.isStale()) return;\n                if (options.in) {\n                    onEntered == null ? void 0 : onEntered(options.element, options.initial);\n                } else {\n                    setExited(true);\n                    onExited == null ? void 0 : onExited(options.element);\n                }\n            };\n            Promise.resolve(transition(options)).then(onFinish, (error)=>{\n                if (!options.in) setExited(true);\n                throw error;\n            });\n        }\n    });\n    const combinedRef = (0, _useMergedRefs.default)(ref, children.ref);\n    return exited && !inProp ? null : /*#__PURE__*/ (0, _react.cloneElement)(children, {\n        ref: combinedRef\n    });\n}\nfunction renderTransition(component, runTransition, props) {\n    if (component) {\n        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_RTGTransition.default, Object.assign({}, props, {\n            component: component\n        }));\n    }\n    if (runTransition) {\n        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(ImperativeTransition, Object.assign({}, props, {\n            transition: runTransition\n        }));\n    }\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_NoopTransition.default, Object.assign({}, props));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL0ltcGVyYXRpdmVUcmFuc2l0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxxQkFBcUIsR0FBR0U7QUFDeEJGLGtCQUFlLEdBQUdJO0FBQ2xCSix3QkFBd0IsR0FBR0s7QUFDM0IsSUFBSUMsaUJBQWlCQyx1QkFBdUJDLG1CQUFPQSxDQUFDLDhGQUE4QjtBQUNsRixJQUFJQyxvQkFBb0JGLHVCQUF1QkMsbUJBQU9BLENBQUMsb0dBQWlDO0FBQ3hGLElBQUlFLHVCQUF1QkgsdUJBQXVCQyxtQkFBT0EsQ0FBQywwR0FBb0M7QUFDOUYsSUFBSUcsU0FBU0Msd0JBQXdCSixtQkFBT0EsQ0FBQyx3R0FBTztBQUNwRCxJQUFJSyxrQkFBa0JOLHVCQUF1QkMsbUJBQU9BLENBQUMsZ0ZBQWtCO0FBQ3ZFLElBQUlNLGlCQUFpQlAsdUJBQXVCQyxtQkFBT0EsQ0FBQyw4RUFBaUI7QUFDckUsSUFBSU8sY0FBY1AsbUJBQU9BLENBQUMsZ0lBQW1CO0FBQzdDLFNBQVNRLHlCQUF5QkMsV0FBVztJQUFJLElBQUksT0FBT0MsWUFBWSxZQUFZLE9BQU87SUFBTSxJQUFJQyxvQkFBb0IsSUFBSUQ7SUFBVyxJQUFJRSxtQkFBbUIsSUFBSUY7SUFBVyxPQUFPLENBQUNGLDJCQUEyQixTQUFVQyxXQUFXO1FBQUksT0FBT0EsY0FBY0csbUJBQW1CRDtJQUFtQixHQUFHRjtBQUFjO0FBQ3RULFNBQVNMLHdCQUF3QlMsR0FBRyxFQUFFSixXQUFXO0lBQUksSUFBSSxDQUFDQSxlQUFlSSxPQUFPQSxJQUFJcEIsVUFBVSxFQUFFO1FBQUUsT0FBT29CO0lBQUs7SUFBRSxJQUFJQSxRQUFRLFFBQVEsT0FBT0EsUUFBUSxZQUFZLE9BQU9BLFFBQVEsWUFBWTtRQUFFLE9BQU87WUFBRWxCLFNBQVNrQjtRQUFJO0lBQUc7SUFBRSxJQUFJQyxRQUFRTix5QkFBeUJDO0lBQWMsSUFBSUssU0FBU0EsTUFBTUMsR0FBRyxDQUFDRixNQUFNO1FBQUUsT0FBT0MsTUFBTUUsR0FBRyxDQUFDSDtJQUFNO0lBQUUsSUFBSUksU0FBUyxDQUFDO0lBQUcsSUFBSUMsd0JBQXdCQyxPQUFPQyxjQUFjLElBQUlELE9BQU9FLHdCQUF3QjtJQUFFLElBQUssSUFBSUMsT0FBT1QsSUFBSztRQUFFLElBQUlTLFFBQVEsYUFBYUgsT0FBT0ksU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ1osS0FBS1MsTUFBTTtZQUFFLElBQUlJLE9BQU9SLHdCQUF3QkMsT0FBT0Usd0JBQXdCLENBQUNSLEtBQUtTLE9BQU87WUFBTSxJQUFJSSxRQUFTQSxDQUFBQSxLQUFLVixHQUFHLElBQUlVLEtBQUtDLEdBQUcsR0FBRztnQkFBRVIsT0FBT0MsY0FBYyxDQUFDSCxRQUFRSyxLQUFLSTtZQUFPLE9BQU87Z0JBQUVULE1BQU0sQ0FBQ0ssSUFBSSxHQUFHVCxHQUFHLENBQUNTLElBQUk7WUFBRTtRQUFFO0lBQUU7SUFBRUwsT0FBT3RCLE9BQU8sR0FBR2tCO0lBQUssSUFBSUMsT0FBTztRQUFFQSxNQUFNYSxHQUFHLENBQUNkLEtBQUtJO0lBQVM7SUFBRSxPQUFPQTtBQUFRO0FBQ255QixTQUFTbEIsdUJBQXVCYyxHQUFHO0lBQUksT0FBT0EsT0FBT0EsSUFBSXBCLFVBQVUsR0FBR29CLE1BQU07UUFBRWxCLFNBQVNrQjtJQUFJO0FBQUc7QUFDOUYsU0FBU25CLGNBQWMsRUFDckJrQyxJQUFJQyxNQUFNLEVBQ1ZDLFlBQVksRUFDYjtJQUNDLE1BQU1DLE1BQU0sQ0FBQyxHQUFHNUIsT0FBTzZCLE1BQU0sRUFBRTtJQUMvQixNQUFNQyxlQUFlLENBQUMsR0FBRzlCLE9BQU82QixNQUFNLEVBQUU7SUFDeEMsTUFBTUUsbUJBQW1CLENBQUMsR0FBR2pDLGtCQUFrQk4sT0FBTyxFQUFFbUM7SUFDdkQsSUFBRzVCLHFCQUFxQlAsT0FBTyxFQUFFO1FBQ2hDLElBQUksQ0FBQ29DLElBQUlJLE9BQU8sRUFBRTtZQUNoQixPQUFPQztRQUNUO1FBQ0EsSUFBSUMsUUFBUTtRQUNaSCxpQkFBaUI7WUFDZk4sSUFBSUM7WUFDSlMsU0FBU1AsSUFBSUksT0FBTztZQUNwQkksU0FBU04sYUFBYUUsT0FBTztZQUM3QkssU0FBUyxJQUFNSDtRQUNqQjtRQUNBLE9BQU87WUFDTEEsUUFBUTtRQUNWO0lBQ0YsR0FBRztRQUFDUjtRQUFRSztLQUFpQjtJQUM1QixJQUFHaEMscUJBQXFCUCxPQUFPLEVBQUU7UUFDaENzQyxhQUFhRSxPQUFPLEdBQUc7UUFDdkIsMEJBQTBCO1FBQzFCLE9BQU87WUFDTEYsYUFBYUUsT0FBTyxHQUFHO1FBQ3pCO0lBQ0YsR0FBRyxFQUFFO0lBQ0wsT0FBT0o7QUFDVDtBQUNBOzs7OztDQUtDLEdBQ0QsU0FBU25DLHFCQUFxQixFQUM1QjZDLFFBQVEsRUFDUmIsSUFBSUMsTUFBTSxFQUNWYSxRQUFRLEVBQ1JDLFNBQVMsRUFDVEMsVUFBVSxFQUNYO0lBQ0MsTUFBTSxDQUFDQyxRQUFRQyxVQUFVLEdBQUcsQ0FBQyxHQUFHM0MsT0FBTzRDLFFBQVEsRUFBRSxDQUFDbEI7SUFFbEQsOENBQThDO0lBQzlDLElBQUlBLFVBQVVnQixRQUFRO1FBQ3BCQyxVQUFVO0lBQ1o7SUFDQSxNQUFNZixNQUFNckMsY0FBYztRQUN4QmtDLElBQUksQ0FBQyxDQUFDQztRQUNOQyxjQUFja0IsQ0FBQUE7WUFDWixNQUFNQyxXQUFXO2dCQUNmLElBQUlELFFBQVFSLE9BQU8sSUFBSTtnQkFDdkIsSUFBSVEsUUFBUXBCLEVBQUUsRUFBRTtvQkFDZGUsYUFBYSxPQUFPLEtBQUssSUFBSUEsVUFBVUssUUFBUVYsT0FBTyxFQUFFVSxRQUFRVCxPQUFPO2dCQUN6RSxPQUFPO29CQUNMTyxVQUFVO29CQUNWSixZQUFZLE9BQU8sS0FBSyxJQUFJQSxTQUFTTSxRQUFRVixPQUFPO2dCQUN0RDtZQUNGO1lBQ0FZLFFBQVFDLE9BQU8sQ0FBQ1AsV0FBV0ksVUFBVUksSUFBSSxDQUFDSCxVQUFVSSxDQUFBQTtnQkFDbEQsSUFBSSxDQUFDTCxRQUFRcEIsRUFBRSxFQUFFa0IsVUFBVTtnQkFDM0IsTUFBTU87WUFDUjtRQUNGO0lBQ0Y7SUFDQSxNQUFNQyxjQUFjLENBQUMsR0FBR3hELGVBQWVILE9BQU8sRUFBRW9DLEtBQUtVLFNBQVNWLEdBQUc7SUFDakUsT0FBT2MsVUFBVSxDQUFDaEIsU0FBUyxPQUFvQixXQUFGLEdBQUcsSUFBRzFCLE9BQU9vRCxZQUFZLEVBQUVkLFVBQVU7UUFDaEZWLEtBQUt1QjtJQUNQO0FBQ0Y7QUFDQSxTQUFTekQsaUJBQWlCMkQsU0FBUyxFQUFFQyxhQUFhLEVBQUVDLEtBQUs7SUFDdkQsSUFBSUYsV0FBVztRQUNiLE9BQW9CLFdBQUYsR0FBRyxJQUFHakQsWUFBWW9ELEdBQUcsRUFBRXJELGVBQWVYLE9BQU8sRUFBRXdCLE9BQU95QyxNQUFNLENBQUMsQ0FBQyxHQUFHRixPQUFPO1lBQ3hGRixXQUFXQTtRQUNiO0lBQ0Y7SUFDQSxJQUFJQyxlQUFlO1FBQ2pCLE9BQW9CLFdBQUYsR0FBRyxJQUFHbEQsWUFBWW9ELEdBQUcsRUFBRS9ELHNCQUFzQnVCLE9BQU95QyxNQUFNLENBQUMsQ0FBQyxHQUFHRixPQUFPO1lBQ3RGZCxZQUFZYTtRQUNkO0lBQ0Y7SUFDQSxPQUFvQixXQUFGLEdBQUcsSUFBR2xELFlBQVlvRCxHQUFHLEVBQUV0RCxnQkFBZ0JWLE9BQU8sRUFBRXdCLE9BQU95QyxNQUFNLENBQUMsQ0FBQyxHQUFHRjtBQUN0RiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL0ltcGVyYXRpdmVUcmFuc2l0aW9uLmpzP2E0NDAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLnVzZVRyYW5zaXRpb24gPSB1c2VUcmFuc2l0aW9uO1xuZXhwb3J0cy5kZWZhdWx0ID0gSW1wZXJhdGl2ZVRyYW5zaXRpb247XG5leHBvcnRzLnJlbmRlclRyYW5zaXRpb24gPSByZW5kZXJUcmFuc2l0aW9uO1xudmFyIF91c2VNZXJnZWRSZWZzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiQHJlc3RhcnQvaG9va3MvdXNlTWVyZ2VkUmVmc1wiKSk7XG52YXIgX3VzZUV2ZW50Q2FsbGJhY2sgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJAcmVzdGFydC9ob29rcy91c2VFdmVudENhbGxiYWNrXCIpKTtcbnZhciBfdXNlSXNvbW9ycGhpY0VmZmVjdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIkByZXN0YXJ0L2hvb2tzL3VzZUlzb21vcnBoaWNFZmZlY3RcIikpO1xudmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG52YXIgX05vb3BUcmFuc2l0aW9uID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9Ob29wVHJhbnNpdGlvblwiKSk7XG52YXIgX1JUR1RyYW5zaXRpb24gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL1JUR1RyYW5zaXRpb25cIikpO1xudmFyIF9qc3hSdW50aW1lID0gcmVxdWlyZShcInJlYWN0L2pzeC1ydW50aW1lXCIpO1xuZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKSB7IGlmICh0eXBlb2YgV2Vha01hcCAhPT0gXCJmdW5jdGlvblwiKSByZXR1cm4gbnVsbDsgdmFyIGNhY2hlQmFiZWxJbnRlcm9wID0gbmV3IFdlYWtNYXAoKTsgdmFyIGNhY2hlTm9kZUludGVyb3AgPSBuZXcgV2Vha01hcCgpOyByZXR1cm4gKF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSA9IGZ1bmN0aW9uIChub2RlSW50ZXJvcCkgeyByZXR1cm4gbm9kZUludGVyb3AgPyBjYWNoZU5vZGVJbnRlcm9wIDogY2FjaGVCYWJlbEludGVyb3A7IH0pKG5vZGVJbnRlcm9wKTsgfVxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqLCBub2RlSW50ZXJvcCkgeyBpZiAoIW5vZGVJbnRlcm9wICYmIG9iaiAmJiBvYmouX19lc01vZHVsZSkgeyByZXR1cm4gb2JqOyB9IGlmIChvYmogPT09IG51bGwgfHwgdHlwZW9mIG9iaiAhPT0gXCJvYmplY3RcIiAmJiB0eXBlb2Ygb2JqICE9PSBcImZ1bmN0aW9uXCIpIHsgcmV0dXJuIHsgZGVmYXVsdDogb2JqIH07IH0gdmFyIGNhY2hlID0gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKTsgaWYgKGNhY2hlICYmIGNhY2hlLmhhcyhvYmopKSB7IHJldHVybiBjYWNoZS5nZXQob2JqKTsgfSB2YXIgbmV3T2JqID0ge307IHZhciBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjsgZm9yICh2YXIga2V5IGluIG9iaikgeyBpZiAoa2V5ICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7IHZhciBkZXNjID0gaGFzUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiBudWxsOyBpZiAoZGVzYyAmJiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7IH0gZWxzZSB7IG5ld09ialtrZXldID0gb2JqW2tleV07IH0gfSB9IG5ld09iai5kZWZhdWx0ID0gb2JqOyBpZiAoY2FjaGUpIHsgY2FjaGUuc2V0KG9iaiwgbmV3T2JqKTsgfSByZXR1cm4gbmV3T2JqOyB9XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuZnVuY3Rpb24gdXNlVHJhbnNpdGlvbih7XG4gIGluOiBpblByb3AsXG4gIG9uVHJhbnNpdGlvblxufSkge1xuICBjb25zdCByZWYgPSAoMCwgX3JlYWN0LnVzZVJlZikobnVsbCk7XG4gIGNvbnN0IGlzSW5pdGlhbFJlZiA9ICgwLCBfcmVhY3QudXNlUmVmKSh0cnVlKTtcbiAgY29uc3QgaGFuZGxlVHJhbnNpdGlvbiA9ICgwLCBfdXNlRXZlbnRDYWxsYmFjay5kZWZhdWx0KShvblRyYW5zaXRpb24pO1xuICAoMCwgX3VzZUlzb21vcnBoaWNFZmZlY3QuZGVmYXVsdCkoKCkgPT4ge1xuICAgIGlmICghcmVmLmN1cnJlbnQpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGxldCBzdGFsZSA9IGZhbHNlO1xuICAgIGhhbmRsZVRyYW5zaXRpb24oe1xuICAgICAgaW46IGluUHJvcCxcbiAgICAgIGVsZW1lbnQ6IHJlZi5jdXJyZW50LFxuICAgICAgaW5pdGlhbDogaXNJbml0aWFsUmVmLmN1cnJlbnQsXG4gICAgICBpc1N0YWxlOiAoKSA9PiBzdGFsZVxuICAgIH0pO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBzdGFsZSA9IHRydWU7XG4gICAgfTtcbiAgfSwgW2luUHJvcCwgaGFuZGxlVHJhbnNpdGlvbl0pO1xuICAoMCwgX3VzZUlzb21vcnBoaWNFZmZlY3QuZGVmYXVsdCkoKCkgPT4ge1xuICAgIGlzSW5pdGlhbFJlZi5jdXJyZW50ID0gZmFsc2U7XG4gICAgLy8gdGhpcyBpcyBmb3Igc3RyaWN0IG1vZGVcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgaXNJbml0aWFsUmVmLmN1cnJlbnQgPSB0cnVlO1xuICAgIH07XG4gIH0sIFtdKTtcbiAgcmV0dXJuIHJlZjtcbn1cbi8qKlxuICogQWRhcHRzIGFuIGltcGVyYXRpdmUgdHJhbnNpdGlvbiBmdW5jdGlvbiB0byBhIHN1YnNldCBvZiB0aGUgUlRHIGA8VHJhbnNpdGlvbj5gIGNvbXBvbmVudCBBUEkuXG4gKlxuICogSW1wZXJhdGl2ZVRyYW5zaXRpb24gZG9lcyBub3Qgc3VwcG9ydCBtb3VudGluZyBvcHRpb25zIG9yIGBhcHBlYXJgIGF0IHRoZSBtb21lbnQsIG1lYW5pbmdcbiAqIHRoYXQgaXQgYWx3YXlzIGFjdHMgbGlrZTogYG1vdW50T25FbnRlcj17dHJ1ZX0gdW5tb3VudE9uRXhpdD17dHJ1ZX0gYXBwZWFyPXt0cnVlfWBcbiAqL1xuZnVuY3Rpb24gSW1wZXJhdGl2ZVRyYW5zaXRpb24oe1xuICBjaGlsZHJlbixcbiAgaW46IGluUHJvcCxcbiAgb25FeGl0ZWQsXG4gIG9uRW50ZXJlZCxcbiAgdHJhbnNpdGlvblxufSkge1xuICBjb25zdCBbZXhpdGVkLCBzZXRFeGl0ZWRdID0gKDAsIF9yZWFjdC51c2VTdGF0ZSkoIWluUHJvcCk7XG5cbiAgLy8gVE9ETzogSSB0aGluayB0aGlzIG5lZWRzIHRvIGJlIGluIGFuIGVmZmVjdFxuICBpZiAoaW5Qcm9wICYmIGV4aXRlZCkge1xuICAgIHNldEV4aXRlZChmYWxzZSk7XG4gIH1cbiAgY29uc3QgcmVmID0gdXNlVHJhbnNpdGlvbih7XG4gICAgaW46ICEhaW5Qcm9wLFxuICAgIG9uVHJhbnNpdGlvbjogb3B0aW9ucyA9PiB7XG4gICAgICBjb25zdCBvbkZpbmlzaCA9ICgpID0+IHtcbiAgICAgICAgaWYgKG9wdGlvbnMuaXNTdGFsZSgpKSByZXR1cm47XG4gICAgICAgIGlmIChvcHRpb25zLmluKSB7XG4gICAgICAgICAgb25FbnRlcmVkID09IG51bGwgPyB2b2lkIDAgOiBvbkVudGVyZWQob3B0aW9ucy5lbGVtZW50LCBvcHRpb25zLmluaXRpYWwpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHNldEV4aXRlZCh0cnVlKTtcbiAgICAgICAgICBvbkV4aXRlZCA9PSBudWxsID8gdm9pZCAwIDogb25FeGl0ZWQob3B0aW9ucy5lbGVtZW50KTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIFByb21pc2UucmVzb2x2ZSh0cmFuc2l0aW9uKG9wdGlvbnMpKS50aGVuKG9uRmluaXNoLCBlcnJvciA9PiB7XG4gICAgICAgIGlmICghb3B0aW9ucy5pbikgc2V0RXhpdGVkKHRydWUpO1xuICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG4gIGNvbnN0IGNvbWJpbmVkUmVmID0gKDAsIF91c2VNZXJnZWRSZWZzLmRlZmF1bHQpKHJlZiwgY2hpbGRyZW4ucmVmKTtcbiAgcmV0dXJuIGV4aXRlZCAmJiAhaW5Qcm9wID8gbnVsbCA6IC8qI19fUFVSRV9fKi8oMCwgX3JlYWN0LmNsb25lRWxlbWVudCkoY2hpbGRyZW4sIHtcbiAgICByZWY6IGNvbWJpbmVkUmVmXG4gIH0pO1xufVxuZnVuY3Rpb24gcmVuZGVyVHJhbnNpdGlvbihjb21wb25lbnQsIHJ1blRyYW5zaXRpb24sIHByb3BzKSB7XG4gIGlmIChjb21wb25lbnQpIHtcbiAgICByZXR1cm4gLyojX19QVVJFX18qLygwLCBfanN4UnVudGltZS5qc3gpKF9SVEdUcmFuc2l0aW9uLmRlZmF1bHQsIE9iamVjdC5hc3NpZ24oe30sIHByb3BzLCB7XG4gICAgICBjb21wb25lbnQ6IGNvbXBvbmVudFxuICAgIH0pKTtcbiAgfVxuICBpZiAocnVuVHJhbnNpdGlvbikge1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovKDAsIF9qc3hSdW50aW1lLmpzeCkoSW1wZXJhdGl2ZVRyYW5zaXRpb24sIE9iamVjdC5hc3NpZ24oe30sIHByb3BzLCB7XG4gICAgICB0cmFuc2l0aW9uOiBydW5UcmFuc2l0aW9uXG4gICAgfSkpO1xuICB9XG4gIHJldHVybiAvKiNfX1BVUkVfXyovKDAsIF9qc3hSdW50aW1lLmpzeCkoX05vb3BUcmFuc2l0aW9uLmRlZmF1bHQsIE9iamVjdC5hc3NpZ24oe30sIHByb3BzKSk7XG59Il0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwidXNlVHJhbnNpdGlvbiIsImRlZmF1bHQiLCJJbXBlcmF0aXZlVHJhbnNpdGlvbiIsInJlbmRlclRyYW5zaXRpb24iLCJfdXNlTWVyZ2VkUmVmcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX3VzZUV2ZW50Q2FsbGJhY2siLCJfdXNlSXNvbW9ycGhpY0VmZmVjdCIsIl9yZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX05vb3BUcmFuc2l0aW9uIiwiX1JUR1RyYW5zaXRpb24iLCJfanN4UnVudGltZSIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsIm9iaiIsImNhY2hlIiwiaGFzIiwiZ2V0IiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJkZXNjIiwic2V0IiwiaW4iLCJpblByb3AiLCJvblRyYW5zaXRpb24iLCJyZWYiLCJ1c2VSZWYiLCJpc0luaXRpYWxSZWYiLCJoYW5kbGVUcmFuc2l0aW9uIiwiY3VycmVudCIsInVuZGVmaW5lZCIsInN0YWxlIiwiZWxlbWVudCIsImluaXRpYWwiLCJpc1N0YWxlIiwiY2hpbGRyZW4iLCJvbkV4aXRlZCIsIm9uRW50ZXJlZCIsInRyYW5zaXRpb24iLCJleGl0ZWQiLCJzZXRFeGl0ZWQiLCJ1c2VTdGF0ZSIsIm9wdGlvbnMiLCJvbkZpbmlzaCIsIlByb21pc2UiLCJyZXNvbHZlIiwidGhlbiIsImVycm9yIiwiY29tYmluZWRSZWYiLCJjbG9uZUVsZW1lbnQiLCJjb21wb25lbnQiLCJydW5UcmFuc2l0aW9uIiwicHJvcHMiLCJqc3giLCJhc3NpZ24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/ImperativeTransition.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/Modal.js":
/*!***********************************************!*\
  !*** ./node_modules/@restart/ui/cjs/Modal.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _activeElement = _interopRequireDefault(__webpack_require__(/*! dom-helpers/activeElement */ \"(ssr)/./node_modules/dom-helpers/esm/activeElement.js\"));\nvar _contains = _interopRequireDefault(__webpack_require__(/*! dom-helpers/contains */ \"(ssr)/./node_modules/dom-helpers/esm/contains.js\"));\nvar _canUseDOM = _interopRequireDefault(__webpack_require__(/*! dom-helpers/canUseDOM */ \"(ssr)/./node_modules/dom-helpers/esm/canUseDOM.js\"));\nvar _listen = _interopRequireDefault(__webpack_require__(/*! dom-helpers/listen */ \"(ssr)/./node_modules/dom-helpers/esm/listen.js\"));\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _reactDom = _interopRequireDefault(__webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\"));\nvar _useMounted = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useMounted */ \"(ssr)/./node_modules/@restart/hooks/cjs/useMounted.js\"));\nvar _useWillUnmount = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useWillUnmount */ \"(ssr)/./node_modules/@restart/hooks/cjs/useWillUnmount.js\"));\nvar _usePrevious = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/usePrevious */ \"(ssr)/./node_modules/@restart/hooks/cjs/usePrevious.js\"));\nvar _useEventCallback = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useEventCallback */ \"(ssr)/./node_modules/@restart/hooks/cjs/useEventCallback.js\"));\nvar _ModalManager = _interopRequireDefault(__webpack_require__(/*! ./ModalManager */ \"(ssr)/./node_modules/@restart/ui/cjs/ModalManager.js\"));\nvar _useWaitForDOMRef = _interopRequireDefault(__webpack_require__(/*! ./useWaitForDOMRef */ \"(ssr)/./node_modules/@restart/ui/cjs/useWaitForDOMRef.js\"));\nvar _useWindow = _interopRequireDefault(__webpack_require__(/*! ./useWindow */ \"(ssr)/./node_modules/@restart/ui/cjs/useWindow.js\"));\nvar _ImperativeTransition = __webpack_require__(/*! ./ImperativeTransition */ \"(ssr)/./node_modules/@restart/ui/cjs/ImperativeTransition.js\");\nvar _utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@restart/ui/cjs/utils.js\");\nvar _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nconst _excluded = [\n    \"show\",\n    \"role\",\n    \"className\",\n    \"style\",\n    \"children\",\n    \"backdrop\",\n    \"keyboard\",\n    \"onBackdropClick\",\n    \"onEscapeKeyDown\",\n    \"transition\",\n    \"runTransition\",\n    \"backdropTransition\",\n    \"runBackdropTransition\",\n    \"autoFocus\",\n    \"enforceFocus\",\n    \"restoreFocus\",\n    \"restoreFocusOptions\",\n    \"renderDialog\",\n    \"renderBackdrop\",\n    \"manager\",\n    \"container\",\n    \"onShow\",\n    \"onHide\",\n    \"onExit\",\n    \"onExited\",\n    \"onExiting\",\n    \"onEnter\",\n    \"onEntering\",\n    \"onEntered\"\n];\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nlet manager;\nfunction getManager(window) {\n    if (!manager) manager = new _ModalManager.default({\n        ownerDocument: window == null ? void 0 : window.document\n    });\n    return manager;\n}\nfunction useModalManager(provided) {\n    const window = (0, _useWindow.default)();\n    const modalManager = provided || getManager(window);\n    const modal = (0, React.useRef)({\n        dialog: null,\n        backdrop: null\n    });\n    return Object.assign(modal.current, {\n        add: ()=>modalManager.add(modal.current),\n        remove: ()=>modalManager.remove(modal.current),\n        isTopModal: ()=>modalManager.isTopModal(modal.current),\n        setDialogRef: (0, React.useCallback)((ref)=>{\n            modal.current.dialog = ref;\n        }, []),\n        setBackdropRef: (0, React.useCallback)((ref)=>{\n            modal.current.backdrop = ref;\n        }, [])\n    });\n}\nconst Modal = /*#__PURE__*/ (0, React.forwardRef)((_ref, ref)=>{\n    let { show = false, role = \"dialog\", className, style, children, backdrop = true, keyboard = true, onBackdropClick, onEscapeKeyDown, transition, runTransition, backdropTransition, runBackdropTransition, autoFocus = true, enforceFocus = true, restoreFocus = true, restoreFocusOptions, renderDialog, renderBackdrop = (props)=>/*#__PURE__*/ (0, _jsxRuntime.jsx)(\"div\", Object.assign({}, props)), manager: providedManager, container: containerRef, onShow, onHide = ()=>{}, onExit, onExited, onExiting, onEnter, onEntering, onEntered } = _ref, rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const ownerWindow = (0, _useWindow.default)();\n    const container = (0, _useWaitForDOMRef.default)(containerRef);\n    const modal = useModalManager(providedManager);\n    const isMounted = (0, _useMounted.default)();\n    const prevShow = (0, _usePrevious.default)(show);\n    const [exited, setExited] = (0, React.useState)(!show);\n    const lastFocusRef = (0, React.useRef)(null);\n    (0, React.useImperativeHandle)(ref, ()=>modal, [\n        modal\n    ]);\n    if (_canUseDOM.default && !prevShow && show) {\n        lastFocusRef.current = (0, _activeElement.default)(ownerWindow == null ? void 0 : ownerWindow.document);\n    }\n    // TODO: I think this needs to be in an effect\n    if (show && exited) {\n        setExited(false);\n    }\n    const handleShow = (0, _useEventCallback.default)(()=>{\n        modal.add();\n        removeKeydownListenerRef.current = (0, _listen.default)(document, \"keydown\", handleDocumentKeyDown);\n        removeFocusListenerRef.current = (0, _listen.default)(document, \"focus\", // the timeout is necessary b/c this will run before the new modal is mounted\n        // and so steals focus from it\n        ()=>setTimeout(handleEnforceFocus), true);\n        if (onShow) {\n            onShow();\n        }\n        // autofocus after onShow to not trigger a focus event for previous\n        // modals before this one is shown.\n        if (autoFocus) {\n            var _modal$dialog$ownerDo, _modal$dialog;\n            const currentActiveElement = (0, _activeElement.default)((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n            if (modal.dialog && currentActiveElement && !(0, _contains.default)(modal.dialog, currentActiveElement)) {\n                lastFocusRef.current = currentActiveElement;\n                modal.dialog.focus();\n            }\n        }\n    });\n    const handleHide = (0, _useEventCallback.default)(()=>{\n        modal.remove();\n        removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n        removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n        if (restoreFocus) {\n            var _lastFocusRef$current;\n            // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n            (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n            lastFocusRef.current = null;\n        }\n    });\n    // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n    // Show logic when:\n    //  - show is `true` _and_ `container` has resolved\n    (0, React.useEffect)(()=>{\n        if (!show || !container) return;\n        handleShow();\n    }, [\n        show,\n        container,\n        /* should never change: */ handleShow\n    ]);\n    // Hide cleanup logic when:\n    //  - `exited` switches to true\n    //  - component unmounts;\n    (0, React.useEffect)(()=>{\n        if (!exited) return;\n        handleHide();\n    }, [\n        exited,\n        handleHide\n    ]);\n    (0, _useWillUnmount.default)(()=>{\n        handleHide();\n    });\n    // --------------------------------\n    const handleEnforceFocus = (0, _useEventCallback.default)(()=>{\n        if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n            return;\n        }\n        const currentActiveElement = (0, _activeElement.default)(ownerWindow == null ? void 0 : ownerWindow.document);\n        if (modal.dialog && currentActiveElement && !(0, _contains.default)(modal.dialog, currentActiveElement)) {\n            modal.dialog.focus();\n        }\n    });\n    const handleBackdropClick = (0, _useEventCallback.default)((e)=>{\n        if (e.target !== e.currentTarget) {\n            return;\n        }\n        onBackdropClick == null ? void 0 : onBackdropClick(e);\n        if (backdrop === true) {\n            onHide();\n        }\n    });\n    const handleDocumentKeyDown = (0, _useEventCallback.default)((e)=>{\n        if (keyboard && (0, _utils.isEscKey)(e) && modal.isTopModal()) {\n            onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n            if (!e.defaultPrevented) {\n                onHide();\n            }\n        }\n    });\n    const removeFocusListenerRef = (0, React.useRef)();\n    const removeKeydownListenerRef = (0, React.useRef)();\n    const handleHidden = (...args)=>{\n        setExited(true);\n        onExited == null ? void 0 : onExited(...args);\n    };\n    if (!container) {\n        return null;\n    }\n    const dialogProps = Object.assign({\n        role,\n        ref: modal.setDialogRef,\n        // apparently only works on the dialog role element\n        \"aria-modal\": role === \"dialog\" ? true : undefined\n    }, rest, {\n        style,\n        className,\n        tabIndex: -1\n    });\n    let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/ (0, _jsxRuntime.jsx)(\"div\", Object.assign({}, dialogProps, {\n        children: /*#__PURE__*/ React.cloneElement(children, {\n            role: \"document\"\n        })\n    }));\n    dialog = (0, _ImperativeTransition.renderTransition)(transition, runTransition, {\n        unmountOnExit: true,\n        mountOnEnter: true,\n        appear: true,\n        in: !!show,\n        onExit,\n        onExiting,\n        onExited: handleHidden,\n        onEnter,\n        onEntering,\n        onEntered,\n        children: dialog\n    });\n    let backdropElement = null;\n    if (backdrop) {\n        backdropElement = renderBackdrop({\n            ref: modal.setBackdropRef,\n            onClick: handleBackdropClick\n        });\n        backdropElement = (0, _ImperativeTransition.renderTransition)(backdropTransition, runBackdropTransition, {\n            in: !!show,\n            appear: true,\n            mountOnEnter: true,\n            unmountOnExit: true,\n            children: backdropElement\n        });\n    }\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {\n        children: /*#__PURE__*/ _reactDom.default.createPortal(/*#__PURE__*/ (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {\n            children: [\n                backdropElement,\n                dialog\n            ]\n        }), container)\n    });\n});\nModal.displayName = \"Modal\";\nvar _default = Object.assign(Modal, {\n    Manager: _ModalManager.default\n});\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/Modal.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/ModalManager.js":
/*!******************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/ModalManager.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = exports.OPEN_DATA_ATTRIBUTE = void 0;\nvar _css = _interopRequireDefault(__webpack_require__(/*! dom-helpers/css */ \"(ssr)/./node_modules/dom-helpers/esm/css.js\"));\nvar _DataKey = __webpack_require__(/*! ./DataKey */ \"(ssr)/./node_modules/@restart/ui/cjs/DataKey.js\");\nvar _getScrollbarWidth = _interopRequireDefault(__webpack_require__(/*! ./getScrollbarWidth */ \"(ssr)/./node_modules/@restart/ui/cjs/getScrollbarWidth.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst OPEN_DATA_ATTRIBUTE = (0, _DataKey.dataAttr)(\"modal-open\");\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */ exports.OPEN_DATA_ATTRIBUTE = OPEN_DATA_ATTRIBUTE;\nclass ModalManager {\n    constructor({ ownerDocument, handleContainerOverflow = true, isRTL = false } = {}){\n        this.handleContainerOverflow = handleContainerOverflow;\n        this.isRTL = isRTL;\n        this.modals = [];\n        this.ownerDocument = ownerDocument;\n    }\n    getScrollbarWidth() {\n        return (0, _getScrollbarWidth.default)(this.ownerDocument);\n    }\n    getElement() {\n        return (this.ownerDocument || document).body;\n    }\n    setModalAttributes(_modal) {\n    // For overriding\n    }\n    removeModalAttributes(_modal) {\n    // For overriding\n    }\n    setContainerStyle(containerState) {\n        const style = {\n            overflow: \"hidden\"\n        };\n        // we are only interested in the actual `style` here\n        // because we will override it\n        const paddingProp = this.isRTL ? \"paddingLeft\" : \"paddingRight\";\n        const container = this.getElement();\n        containerState.style = {\n            overflow: container.style.overflow,\n            [paddingProp]: container.style[paddingProp]\n        };\n        if (containerState.scrollBarWidth) {\n            // use computed style, here to get the real padding\n            // to add our scrollbar width\n            style[paddingProp] = `${parseInt((0, _css.default)(container, paddingProp) || \"0\", 10) + containerState.scrollBarWidth}px`;\n        }\n        container.setAttribute(OPEN_DATA_ATTRIBUTE, \"\");\n        (0, _css.default)(container, style);\n    }\n    reset() {\n        [\n            ...this.modals\n        ].forEach((m)=>this.remove(m));\n    }\n    removeContainerStyle(containerState) {\n        const container = this.getElement();\n        container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n        Object.assign(container.style, containerState.style);\n    }\n    add(modal) {\n        let modalIdx = this.modals.indexOf(modal);\n        if (modalIdx !== -1) {\n            return modalIdx;\n        }\n        modalIdx = this.modals.length;\n        this.modals.push(modal);\n        this.setModalAttributes(modal);\n        if (modalIdx !== 0) {\n            return modalIdx;\n        }\n        this.state = {\n            scrollBarWidth: this.getScrollbarWidth(),\n            style: {}\n        };\n        if (this.handleContainerOverflow) {\n            this.setContainerStyle(this.state);\n        }\n        return modalIdx;\n    }\n    remove(modal) {\n        const modalIdx = this.modals.indexOf(modal);\n        if (modalIdx === -1) {\n            return;\n        }\n        this.modals.splice(modalIdx, 1);\n        // if that was the last modal in a container,\n        // clean up the container\n        if (!this.modals.length && this.handleContainerOverflow) {\n            this.removeContainerStyle(this.state);\n        }\n        this.removeModalAttributes(modal);\n    }\n    isTopModal(modal) {\n        return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n    }\n}\nvar _default = ModalManager;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/ModalManager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/Nav.js":
/*!*********************************************!*\
  !*** ./node_modules/@restart/ui/cjs/Nav.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _querySelectorAll = _interopRequireDefault(__webpack_require__(/*! dom-helpers/querySelectorAll */ \"(ssr)/./node_modules/dom-helpers/esm/querySelectorAll.js\"));\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _useForceUpdate = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useForceUpdate */ \"(ssr)/./node_modules/@restart/hooks/cjs/useForceUpdate.js\"));\nvar _useMergedRefs = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useMergedRefs */ \"(ssr)/./node_modules/@restart/hooks/cjs/useMergedRefs.js\"));\nvar _NavContext = _interopRequireDefault(__webpack_require__(/*! ./NavContext */ \"(ssr)/./node_modules/@restart/ui/cjs/NavContext.js\"));\nvar _SelectableContext = _interopRequireWildcard(__webpack_require__(/*! ./SelectableContext */ \"(ssr)/./node_modules/@restart/ui/cjs/SelectableContext.js\"));\nvar _TabContext = _interopRequireDefault(__webpack_require__(/*! ./TabContext */ \"(ssr)/./node_modules/@restart/ui/cjs/TabContext.js\"));\nvar _DataKey = __webpack_require__(/*! ./DataKey */ \"(ssr)/./node_modules/@restart/ui/cjs/DataKey.js\");\nvar _NavItem = _interopRequireDefault(__webpack_require__(/*! ./NavItem */ \"(ssr)/./node_modules/@restart/ui/cjs/NavItem.js\"));\nvar _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nconst _excluded = [\n    \"as\",\n    \"onSelect\",\n    \"activeKey\",\n    \"role\",\n    \"onKeyDown\"\n];\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = ()=>{};\nconst EVENT_KEY_ATTR = (0, _DataKey.dataAttr)(\"event-key\");\nconst Nav = /*#__PURE__*/ React.forwardRef((_ref, ref)=>{\n    let { // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = \"div\", onSelect, activeKey, role, onKeyDown } = _ref, props = _objectWithoutPropertiesLoose(_ref, _excluded);\n    // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n    // and don't want to reset the set in the effect\n    const forceUpdate = (0, _useForceUpdate.default)();\n    const needsRefocusRef = (0, React.useRef)(false);\n    const parentOnSelect = (0, React.useContext)(_SelectableContext.default);\n    const tabContext = (0, React.useContext)(_TabContext.default);\n    let getControlledId, getControllerId;\n    if (tabContext) {\n        role = role || \"tablist\";\n        activeKey = tabContext.activeKey;\n        // TODO: do we need to duplicate these?\n        getControlledId = tabContext.getControlledId;\n        getControllerId = tabContext.getControllerId;\n    }\n    const listNode = (0, React.useRef)(null);\n    const getNextActiveTab = (offset)=>{\n        const currentListNode = listNode.current;\n        if (!currentListNode) return null;\n        const items = (0, _querySelectorAll.default)(currentListNode, `[${EVENT_KEY_ATTR}]:not([aria-disabled=true])`);\n        const activeChild = currentListNode.querySelector(\"[aria-selected=true]\");\n        if (!activeChild || activeChild !== document.activeElement) return null;\n        const index = items.indexOf(activeChild);\n        if (index === -1) return null;\n        let nextIndex = index + offset;\n        if (nextIndex >= items.length) nextIndex = 0;\n        if (nextIndex < 0) nextIndex = items.length - 1;\n        return items[nextIndex];\n    };\n    const handleSelect = (key, event)=>{\n        if (key == null) return;\n        onSelect == null ? void 0 : onSelect(key, event);\n        parentOnSelect == null ? void 0 : parentOnSelect(key, event);\n    };\n    const handleKeyDown = (event)=>{\n        onKeyDown == null ? void 0 : onKeyDown(event);\n        if (!tabContext) {\n            return;\n        }\n        let nextActiveChild;\n        switch(event.key){\n            case \"ArrowLeft\":\n            case \"ArrowUp\":\n                nextActiveChild = getNextActiveTab(-1);\n                break;\n            case \"ArrowRight\":\n            case \"ArrowDown\":\n                nextActiveChild = getNextActiveTab(1);\n                break;\n            default:\n                return;\n        }\n        if (!nextActiveChild) return;\n        event.preventDefault();\n        handleSelect(nextActiveChild.dataset[(0, _DataKey.dataProp)(\"EventKey\")] || null, event);\n        needsRefocusRef.current = true;\n        forceUpdate();\n    };\n    (0, React.useEffect)(()=>{\n        if (listNode.current && needsRefocusRef.current) {\n            const activeChild = listNode.current.querySelector(`[${EVENT_KEY_ATTR}][aria-selected=true]`);\n            activeChild == null ? void 0 : activeChild.focus();\n        }\n        needsRefocusRef.current = false;\n    });\n    const mergedRef = (0, _useMergedRefs.default)(ref, listNode);\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_SelectableContext.default.Provider, {\n        value: handleSelect,\n        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(_NavContext.default.Provider, {\n            value: {\n                role,\n                // used by NavLink to determine it's role\n                activeKey: (0, _SelectableContext.makeEventKey)(activeKey),\n                getControlledId: getControlledId || noop,\n                getControllerId: getControllerId || noop\n            },\n            children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(Component, Object.assign({}, props, {\n                onKeyDown: handleKeyDown,\n                ref: mergedRef,\n                role: role\n            }))\n        })\n    });\n});\nNav.displayName = \"Nav\";\nvar _default = Object.assign(Nav, {\n    Item: _NavItem.default\n});\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/Nav.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/NavContext.js":
/*!****************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/NavContext.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nconst NavContext = /*#__PURE__*/ React.createContext(null);\nNavContext.displayName = \"NavContext\";\nvar _default = NavContext;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL05hdkNvbnRleHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGtCQUFlLEdBQUcsS0FBSztBQUN2QixJQUFJRyxRQUFRQyx3QkFBd0JDLG1CQUFPQSxDQUFDLHdHQUFPO0FBQ25ELFNBQVNDLHlCQUF5QkMsV0FBVztJQUFJLElBQUksT0FBT0MsWUFBWSxZQUFZLE9BQU87SUFBTSxJQUFJQyxvQkFBb0IsSUFBSUQ7SUFBVyxJQUFJRSxtQkFBbUIsSUFBSUY7SUFBVyxPQUFPLENBQUNGLDJCQUEyQixTQUFVQyxXQUFXO1FBQUksT0FBT0EsY0FBY0csbUJBQW1CRDtJQUFtQixHQUFHRjtBQUFjO0FBQ3RULFNBQVNILHdCQUF3Qk8sR0FBRyxFQUFFSixXQUFXO0lBQUksSUFBSSxDQUFDQSxlQUFlSSxPQUFPQSxJQUFJVixVQUFVLEVBQUU7UUFBRSxPQUFPVTtJQUFLO0lBQUUsSUFBSUEsUUFBUSxRQUFRLE9BQU9BLFFBQVEsWUFBWSxPQUFPQSxRQUFRLFlBQVk7UUFBRSxPQUFPO1lBQUVULFNBQVNTO1FBQUk7SUFBRztJQUFFLElBQUlDLFFBQVFOLHlCQUF5QkM7SUFBYyxJQUFJSyxTQUFTQSxNQUFNQyxHQUFHLENBQUNGLE1BQU07UUFBRSxPQUFPQyxNQUFNRSxHQUFHLENBQUNIO0lBQU07SUFBRSxJQUFJSSxTQUFTLENBQUM7SUFBRyxJQUFJQyx3QkFBd0JDLE9BQU9DLGNBQWMsSUFBSUQsT0FBT0Usd0JBQXdCO0lBQUUsSUFBSyxJQUFJQyxPQUFPVCxJQUFLO1FBQUUsSUFBSVMsUUFBUSxhQUFhSCxPQUFPSSxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDWixLQUFLUyxNQUFNO1lBQUUsSUFBSUksT0FBT1Isd0JBQXdCQyxPQUFPRSx3QkFBd0IsQ0FBQ1IsS0FBS1MsT0FBTztZQUFNLElBQUlJLFFBQVNBLENBQUFBLEtBQUtWLEdBQUcsSUFBSVUsS0FBS0MsR0FBRyxHQUFHO2dCQUFFUixPQUFPQyxjQUFjLENBQUNILFFBQVFLLEtBQUtJO1lBQU8sT0FBTztnQkFBRVQsTUFBTSxDQUFDSyxJQUFJLEdBQUdULEdBQUcsQ0FBQ1MsSUFBSTtZQUFFO1FBQUU7SUFBRTtJQUFFTCxPQUFPYixPQUFPLEdBQUdTO0lBQUssSUFBSUMsT0FBTztRQUFFQSxNQUFNYSxHQUFHLENBQUNkLEtBQUtJO0lBQVM7SUFBRSxPQUFPQTtBQUFRO0FBQ255QixNQUFNVyxhQUFhLFdBQVcsR0FBRXZCLE1BQU13QixhQUFhLENBQUM7QUFDcERELFdBQVdFLFdBQVcsR0FBRztBQUN6QixJQUFJQyxXQUFXSDtBQUNmMUIsa0JBQWUsR0FBRzZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC91aS9janMvTmF2Q29udGV4dC5qcz9kZjFlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIFJlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZShcInJlYWN0XCIpKTtcbmZ1bmN0aW9uIF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShub2RlSW50ZXJvcCkgeyBpZiAodHlwZW9mIFdlYWtNYXAgIT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIG51bGw7IHZhciBjYWNoZUJhYmVsSW50ZXJvcCA9IG5ldyBXZWFrTWFwKCk7IHZhciBjYWNoZU5vZGVJbnRlcm9wID0gbmV3IFdlYWtNYXAoKTsgcmV0dXJuIChfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUgPSBmdW5jdGlvbiAobm9kZUludGVyb3ApIHsgcmV0dXJuIG5vZGVJbnRlcm9wID8gY2FjaGVOb2RlSW50ZXJvcCA6IGNhY2hlQmFiZWxJbnRlcm9wOyB9KShub2RlSW50ZXJvcCk7IH1cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaiwgbm9kZUludGVyb3ApIHsgaWYgKCFub2RlSW50ZXJvcCAmJiBvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsgcmV0dXJuIG9iajsgfSBpZiAob2JqID09PSBudWxsIHx8IHR5cGVvZiBvYmogIT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG9iaiAhPT0gXCJmdW5jdGlvblwiKSB7IHJldHVybiB7IGRlZmF1bHQ6IG9iaiB9OyB9IHZhciBjYWNoZSA9IF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShub2RlSW50ZXJvcCk7IGlmIChjYWNoZSAmJiBjYWNoZS5oYXMob2JqKSkgeyByZXR1cm4gY2FjaGUuZ2V0KG9iaik7IH0gdmFyIG5ld09iaiA9IHt9OyB2YXIgaGFzUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7IGZvciAodmFyIGtleSBpbiBvYmopIHsgaWYgKGtleSAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgeyB2YXIgZGVzYyA9IGhhc1Byb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDogbnVsbDsgaWYgKGRlc2MgJiYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOyB9IGVsc2UgeyBuZXdPYmpba2V5XSA9IG9ialtrZXldOyB9IH0gfSBuZXdPYmouZGVmYXVsdCA9IG9iajsgaWYgKGNhY2hlKSB7IGNhY2hlLnNldChvYmosIG5ld09iaik7IH0gcmV0dXJuIG5ld09iajsgfVxuY29uc3QgTmF2Q29udGV4dCA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVDb250ZXh0KG51bGwpO1xuTmF2Q29udGV4dC5kaXNwbGF5TmFtZSA9ICdOYXZDb250ZXh0JztcbnZhciBfZGVmYXVsdCA9IE5hdkNvbnRleHQ7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOlsiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiUmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJub2RlSW50ZXJvcCIsIldlYWtNYXAiLCJjYWNoZUJhYmVsSW50ZXJvcCIsImNhY2hlTm9kZUludGVyb3AiLCJvYmoiLCJjYWNoZSIsImhhcyIsImdldCIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsInNldCIsIk5hdkNvbnRleHQiLCJjcmVhdGVDb250ZXh0IiwiZGlzcGxheU5hbWUiLCJfZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/NavContext.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/NavItem.js":
/*!*************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/NavItem.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports.useNavItem = useNavItem;\nexports[\"default\"] = void 0;\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _useEventCallback = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useEventCallback */ \"(ssr)/./node_modules/@restart/hooks/cjs/useEventCallback.js\"));\nvar _NavContext = _interopRequireDefault(__webpack_require__(/*! ./NavContext */ \"(ssr)/./node_modules/@restart/ui/cjs/NavContext.js\"));\nvar _SelectableContext = _interopRequireWildcard(__webpack_require__(/*! ./SelectableContext */ \"(ssr)/./node_modules/@restart/ui/cjs/SelectableContext.js\"));\nvar _Button = _interopRequireDefault(__webpack_require__(/*! ./Button */ \"(ssr)/./node_modules/@restart/ui/cjs/Button.js\"));\nvar _DataKey = __webpack_require__(/*! ./DataKey */ \"(ssr)/./node_modules/@restart/ui/cjs/DataKey.js\");\nvar _TabContext = _interopRequireDefault(__webpack_require__(/*! ./TabContext */ \"(ssr)/./node_modules/@restart/ui/cjs/TabContext.js\"));\nvar _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nconst _excluded = [\n    \"as\",\n    \"active\",\n    \"eventKey\"\n];\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nfunction useNavItem({ key, onClick, active, id, role, disabled }) {\n    const parentOnSelect = (0, React.useContext)(_SelectableContext.default);\n    const navContext = (0, React.useContext)(_NavContext.default);\n    const tabContext = (0, React.useContext)(_TabContext.default);\n    let isActive = active;\n    const props = {\n        role\n    };\n    if (navContext) {\n        if (!role && navContext.role === \"tablist\") props.role = \"tab\";\n        const contextControllerId = navContext.getControllerId(key != null ? key : null);\n        const contextControlledId = navContext.getControlledId(key != null ? key : null);\n        // @ts-ignore\n        props[(0, _DataKey.dataAttr)(\"event-key\")] = key;\n        props.id = contextControllerId || id;\n        isActive = active == null && key != null ? navContext.activeKey === key : active;\n        /**\n     * Simplified scenario for `mountOnEnter`.\n     *\n     * While it would make sense to keep 'aria-controls' for tabs that have been mounted at least\n     * once, it would also complicate the code quite a bit, for very little gain.\n     * The following implementation is probably good enough.\n     *\n     * @see https://github.com/react-restart/ui/pull/40#issuecomment-1009971561\n     */ if (isActive || !(tabContext != null && tabContext.unmountOnExit) && !(tabContext != null && tabContext.mountOnEnter)) props[\"aria-controls\"] = contextControlledId;\n    }\n    if (props.role === \"tab\") {\n        props[\"aria-selected\"] = isActive;\n        if (!isActive) {\n            props.tabIndex = -1;\n        }\n        if (disabled) {\n            props.tabIndex = -1;\n            props[\"aria-disabled\"] = true;\n        }\n    }\n    props.onClick = (0, _useEventCallback.default)((e)=>{\n        if (disabled) return;\n        onClick == null ? void 0 : onClick(e);\n        if (key == null) {\n            return;\n        }\n        if (parentOnSelect && !e.isPropagationStopped()) {\n            parentOnSelect(key, e);\n        }\n    });\n    return [\n        props,\n        {\n            isActive\n        }\n    ];\n}\nconst NavItem = /*#__PURE__*/ React.forwardRef((_ref, ref)=>{\n    let { as: Component = _Button.default, active, eventKey } = _ref, options = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const [props, meta] = useNavItem(Object.assign({\n        key: (0, _SelectableContext.makeEventKey)(eventKey, options.href),\n        active\n    }, options));\n    // @ts-ignore\n    props[(0, _DataKey.dataAttr)(\"active\")] = meta.isActive;\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(Component, Object.assign({}, options, props, {\n        ref: ref\n    }));\n});\nNavItem.displayName = \"NavItem\";\nvar _default = NavItem;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/NavItem.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/NoopTransition.js":
/*!********************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/NoopTransition.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _useEventCallback = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useEventCallback */ \"(ssr)/./node_modules/@restart/hooks/cjs/useEventCallback.js\"));\nvar _useMergedRefs = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useMergedRefs */ \"(ssr)/./node_modules/@restart/hooks/cjs/useMergedRefs.js\"));\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction NoopTransition({ children, in: inProp, onExited, mountOnEnter, unmountOnExit }) {\n    const ref = (0, _react.useRef)(null);\n    const hasEnteredRef = (0, _react.useRef)(inProp);\n    const handleExited = (0, _useEventCallback.default)(onExited);\n    (0, _react.useEffect)(()=>{\n        if (inProp) hasEnteredRef.current = true;\n        else {\n            handleExited(ref.current);\n        }\n    }, [\n        inProp,\n        handleExited\n    ]);\n    const combinedRef = (0, _useMergedRefs.default)(ref, children.ref);\n    const child = /*#__PURE__*/ (0, _react.cloneElement)(children, {\n        ref: combinedRef\n    });\n    if (inProp) return child;\n    if (unmountOnExit) {\n        return null;\n    }\n    if (!hasEnteredRef.current && mountOnEnter) {\n        return null;\n    }\n    return child;\n}\nvar _default = NoopTransition;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL05vb3BUcmFuc2l0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBZSxHQUFHLEtBQUs7QUFDdkIsSUFBSUcsb0JBQW9CQyx1QkFBdUJDLG1CQUFPQSxDQUFDLG9HQUFpQztBQUN4RixJQUFJQyxpQkFBaUJGLHVCQUF1QkMsbUJBQU9BLENBQUMsOEZBQThCO0FBQ2xGLElBQUlFLFNBQVNGLG1CQUFPQSxDQUFDLHdHQUFPO0FBQzVCLFNBQVNELHVCQUF1QkksR0FBRztJQUFJLE9BQU9BLE9BQU9BLElBQUlQLFVBQVUsR0FBR08sTUFBTTtRQUFFTixTQUFTTTtJQUFJO0FBQUc7QUFDOUYsU0FBU0MsZUFBZSxFQUN0QkMsUUFBUSxFQUNSQyxJQUFJQyxNQUFNLEVBQ1ZDLFFBQVEsRUFDUkMsWUFBWSxFQUNaQyxhQUFhLEVBQ2Q7SUFDQyxNQUFNQyxNQUFNLENBQUMsR0FBR1QsT0FBT1UsTUFBTSxFQUFFO0lBQy9CLE1BQU1DLGdCQUFnQixDQUFDLEdBQUdYLE9BQU9VLE1BQU0sRUFBRUw7SUFDekMsTUFBTU8sZUFBZSxDQUFDLEdBQUdoQixrQkFBa0JELE9BQU8sRUFBRVc7SUFDbkQsSUFBR04sT0FBT2EsU0FBUyxFQUFFO1FBQ3BCLElBQUlSLFFBQVFNLGNBQWNHLE9BQU8sR0FBRzthQUFVO1lBQzVDRixhQUFhSCxJQUFJSyxPQUFPO1FBQzFCO0lBQ0YsR0FBRztRQUFDVDtRQUFRTztLQUFhO0lBQ3pCLE1BQU1HLGNBQWMsQ0FBQyxHQUFHaEIsZUFBZUosT0FBTyxFQUFFYyxLQUFLTixTQUFTTSxHQUFHO0lBQ2pFLE1BQU1PLFFBQXFCLFdBQUYsR0FBRyxJQUFHaEIsT0FBT2lCLFlBQVksRUFBRWQsVUFBVTtRQUM1RE0sS0FBS007SUFDUDtJQUNBLElBQUlWLFFBQVEsT0FBT1c7SUFDbkIsSUFBSVIsZUFBZTtRQUNqQixPQUFPO0lBQ1Q7SUFDQSxJQUFJLENBQUNHLGNBQWNHLE9BQU8sSUFBSVAsY0FBYztRQUMxQyxPQUFPO0lBQ1Q7SUFDQSxPQUFPUztBQUNUO0FBQ0EsSUFBSUUsV0FBV2hCO0FBQ2ZULGtCQUFlLEdBQUd5QiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL05vb3BUcmFuc2l0aW9uLmpzP2U4OTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgX3VzZUV2ZW50Q2FsbGJhY2sgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJAcmVzdGFydC9ob29rcy91c2VFdmVudENhbGxiYWNrXCIpKTtcbnZhciBfdXNlTWVyZ2VkUmVmcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIkByZXN0YXJ0L2hvb2tzL3VzZU1lcmdlZFJlZnNcIikpO1xudmFyIF9yZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5mdW5jdGlvbiBOb29wVHJhbnNpdGlvbih7XG4gIGNoaWxkcmVuLFxuICBpbjogaW5Qcm9wLFxuICBvbkV4aXRlZCxcbiAgbW91bnRPbkVudGVyLFxuICB1bm1vdW50T25FeGl0XG59KSB7XG4gIGNvbnN0IHJlZiA9ICgwLCBfcmVhY3QudXNlUmVmKShudWxsKTtcbiAgY29uc3QgaGFzRW50ZXJlZFJlZiA9ICgwLCBfcmVhY3QudXNlUmVmKShpblByb3ApO1xuICBjb25zdCBoYW5kbGVFeGl0ZWQgPSAoMCwgX3VzZUV2ZW50Q2FsbGJhY2suZGVmYXVsdCkob25FeGl0ZWQpO1xuICAoMCwgX3JlYWN0LnVzZUVmZmVjdCkoKCkgPT4ge1xuICAgIGlmIChpblByb3ApIGhhc0VudGVyZWRSZWYuY3VycmVudCA9IHRydWU7ZWxzZSB7XG4gICAgICBoYW5kbGVFeGl0ZWQocmVmLmN1cnJlbnQpO1xuICAgIH1cbiAgfSwgW2luUHJvcCwgaGFuZGxlRXhpdGVkXSk7XG4gIGNvbnN0IGNvbWJpbmVkUmVmID0gKDAsIF91c2VNZXJnZWRSZWZzLmRlZmF1bHQpKHJlZiwgY2hpbGRyZW4ucmVmKTtcbiAgY29uc3QgY2hpbGQgPSAvKiNfX1BVUkVfXyovKDAsIF9yZWFjdC5jbG9uZUVsZW1lbnQpKGNoaWxkcmVuLCB7XG4gICAgcmVmOiBjb21iaW5lZFJlZlxuICB9KTtcbiAgaWYgKGluUHJvcCkgcmV0dXJuIGNoaWxkO1xuICBpZiAodW5tb3VudE9uRXhpdCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGlmICghaGFzRW50ZXJlZFJlZi5jdXJyZW50ICYmIG1vdW50T25FbnRlcikge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiBjaGlsZDtcbn1cbnZhciBfZGVmYXVsdCA9IE5vb3BUcmFuc2l0aW9uO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIl91c2VFdmVudENhbGxiYWNrIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfdXNlTWVyZ2VkUmVmcyIsIl9yZWFjdCIsIm9iaiIsIk5vb3BUcmFuc2l0aW9uIiwiY2hpbGRyZW4iLCJpbiIsImluUHJvcCIsIm9uRXhpdGVkIiwibW91bnRPbkVudGVyIiwidW5tb3VudE9uRXhpdCIsInJlZiIsInVzZVJlZiIsImhhc0VudGVyZWRSZWYiLCJoYW5kbGVFeGl0ZWQiLCJ1c2VFZmZlY3QiLCJjdXJyZW50IiwiY29tYmluZWRSZWYiLCJjaGlsZCIsImNsb25lRWxlbWVudCIsIl9kZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/NoopTransition.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/Overlay.js":
/*!*************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/Overlay.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _reactDom = _interopRequireDefault(__webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\"));\nvar _useCallbackRef = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useCallbackRef */ \"(ssr)/./node_modules/@restart/hooks/cjs/useCallbackRef.js\"));\nvar _useMergedRefs = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useMergedRefs */ \"(ssr)/./node_modules/@restart/hooks/cjs/useMergedRefs.js\"));\nvar _usePopper = _interopRequireDefault(__webpack_require__(/*! ./usePopper */ \"(ssr)/./node_modules/@restart/ui/cjs/usePopper.js\"));\nvar _useRootClose = _interopRequireDefault(__webpack_require__(/*! ./useRootClose */ \"(ssr)/./node_modules/@restart/ui/cjs/useRootClose.js\"));\nvar _useWaitForDOMRef = _interopRequireDefault(__webpack_require__(/*! ./useWaitForDOMRef */ \"(ssr)/./node_modules/@restart/ui/cjs/useWaitForDOMRef.js\"));\nvar _mergeOptionsWithPopperConfig = _interopRequireDefault(__webpack_require__(/*! ./mergeOptionsWithPopperConfig */ \"(ssr)/./node_modules/@restart/ui/cjs/mergeOptionsWithPopperConfig.js\"));\nvar _ImperativeTransition = __webpack_require__(/*! ./ImperativeTransition */ \"(ssr)/./node_modules/@restart/ui/cjs/ImperativeTransition.js\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\n/**\n * Built on top of `Popper.js`, the overlay component is\n * great for custom tooltip overlays.\n */ const Overlay = /*#__PURE__*/ React.forwardRef((props, outerRef)=>{\n    const { flip, offset, placement, containerPadding, popperConfig = {}, transition: Transition, runTransition } = props;\n    const [rootElement, attachRef] = (0, _useCallbackRef.default)();\n    const [arrowElement, attachArrowRef] = (0, _useCallbackRef.default)();\n    const mergedRef = (0, _useMergedRefs.default)(attachRef, outerRef);\n    const container = (0, _useWaitForDOMRef.default)(props.container);\n    const target = (0, _useWaitForDOMRef.default)(props.target);\n    const [exited, setExited] = (0, React.useState)(!props.show);\n    const popper = (0, _usePopper.default)(target, rootElement, (0, _mergeOptionsWithPopperConfig.default)({\n        placement,\n        enableEvents: !!props.show,\n        containerPadding: containerPadding || 5,\n        flip,\n        offset,\n        arrowElement,\n        popperConfig\n    }));\n    // TODO: I think this needs to be in an effect\n    if (props.show && exited) {\n        setExited(false);\n    }\n    const handleHidden = (...args)=>{\n        setExited(true);\n        if (props.onExited) {\n            props.onExited(...args);\n        }\n    };\n    // Don't un-render the overlay while it's transitioning out.\n    const mountOverlay = props.show || !exited;\n    (0, _useRootClose.default)(rootElement, props.onHide, {\n        disabled: !props.rootClose || props.rootCloseDisabled,\n        clickTrigger: props.rootCloseEvent\n    });\n    if (!mountOverlay) {\n        // Don't bother showing anything if we don't have to.\n        return null;\n    }\n    const { onExit, onExiting, onEnter, onEntering, onEntered } = props;\n    let child = props.children(Object.assign({}, popper.attributes.popper, {\n        style: popper.styles.popper,\n        ref: mergedRef\n    }), {\n        popper,\n        placement,\n        show: !!props.show,\n        arrowProps: Object.assign({}, popper.attributes.arrow, {\n            style: popper.styles.arrow,\n            ref: attachArrowRef\n        })\n    });\n    child = (0, _ImperativeTransition.renderTransition)(Transition, runTransition, {\n        in: !!props.show,\n        appear: true,\n        mountOnEnter: true,\n        unmountOnExit: true,\n        children: child,\n        onExit,\n        onExiting,\n        onExited: handleHidden,\n        onEnter,\n        onEntering,\n        onEntered\n    });\n    return container ? /*#__PURE__*/ _reactDom.default.createPortal(child, container) : null;\n});\nOverlay.displayName = \"Overlay\";\nvar _default = Overlay;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/Overlay.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/RTGTransition.js":
/*!*******************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/RTGTransition.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _useRTGTransitionProps = _interopRequireDefault(__webpack_require__(/*! ./useRTGTransitionProps */ \"(ssr)/./node_modules/@restart/ui/cjs/useRTGTransitionProps.js\"));\nvar _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nconst _excluded = [\n    \"component\"\n];\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\n// Normalizes Transition callbacks when nodeRef is used.\nconst RTGTransition = /*#__PURE__*/ React.forwardRef((_ref, ref)=>{\n    let { component: Component } = _ref, props = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const transitionProps = (0, _useRTGTransitionProps.default)(props);\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(Component, Object.assign({\n        ref: ref\n    }, transitionProps));\n});\nvar _default = RTGTransition;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL1JUR1RyYW5zaXRpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGtCQUFlLEdBQUcsS0FBSztBQUN2QixJQUFJRyxRQUFRQyx3QkFBd0JDLG1CQUFPQSxDQUFDLHdHQUFPO0FBQ25ELElBQUlDLHlCQUF5QkMsdUJBQXVCRixtQkFBT0EsQ0FBQyw4RkFBeUI7QUFDckYsSUFBSUcsY0FBY0gsbUJBQU9BLENBQUMsZ0lBQW1CO0FBQzdDLE1BQU1JLFlBQVk7SUFBQztDQUFZO0FBQy9CLFNBQVNGLHVCQUF1QkcsR0FBRztJQUFJLE9BQU9BLE9BQU9BLElBQUlULFVBQVUsR0FBR1MsTUFBTTtRQUFFUixTQUFTUTtJQUFJO0FBQUc7QUFDOUYsU0FBU0MseUJBQXlCQyxXQUFXO0lBQUksSUFBSSxPQUFPQyxZQUFZLFlBQVksT0FBTztJQUFNLElBQUlDLG9CQUFvQixJQUFJRDtJQUFXLElBQUlFLG1CQUFtQixJQUFJRjtJQUFXLE9BQU8sQ0FBQ0YsMkJBQTJCLFNBQVVDLFdBQVc7UUFBSSxPQUFPQSxjQUFjRyxtQkFBbUJEO0lBQW1CLEdBQUdGO0FBQWM7QUFDdFQsU0FBU1Isd0JBQXdCTSxHQUFHLEVBQUVFLFdBQVc7SUFBSSxJQUFJLENBQUNBLGVBQWVGLE9BQU9BLElBQUlULFVBQVUsRUFBRTtRQUFFLE9BQU9TO0lBQUs7SUFBRSxJQUFJQSxRQUFRLFFBQVEsT0FBT0EsUUFBUSxZQUFZLE9BQU9BLFFBQVEsWUFBWTtRQUFFLE9BQU87WUFBRVIsU0FBU1E7UUFBSTtJQUFHO0lBQUUsSUFBSU0sUUFBUUwseUJBQXlCQztJQUFjLElBQUlJLFNBQVNBLE1BQU1DLEdBQUcsQ0FBQ1AsTUFBTTtRQUFFLE9BQU9NLE1BQU1FLEdBQUcsQ0FBQ1I7SUFBTTtJQUFFLElBQUlTLFNBQVMsQ0FBQztJQUFHLElBQUlDLHdCQUF3QkMsT0FBT0MsY0FBYyxJQUFJRCxPQUFPRSx3QkFBd0I7SUFBRSxJQUFLLElBQUlDLE9BQU9kLElBQUs7UUFBRSxJQUFJYyxRQUFRLGFBQWFILE9BQU9JLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNqQixLQUFLYyxNQUFNO1lBQUUsSUFBSUksT0FBT1Isd0JBQXdCQyxPQUFPRSx3QkFBd0IsQ0FBQ2IsS0FBS2MsT0FBTztZQUFNLElBQUlJLFFBQVNBLENBQUFBLEtBQUtWLEdBQUcsSUFBSVUsS0FBS0MsR0FBRyxHQUFHO2dCQUFFUixPQUFPQyxjQUFjLENBQUNILFFBQVFLLEtBQUtJO1lBQU8sT0FBTztnQkFBRVQsTUFBTSxDQUFDSyxJQUFJLEdBQUdkLEdBQUcsQ0FBQ2MsSUFBSTtZQUFFO1FBQUU7SUFBRTtJQUFFTCxPQUFPakIsT0FBTyxHQUFHUTtJQUFLLElBQUlNLE9BQU87UUFBRUEsTUFBTWEsR0FBRyxDQUFDbkIsS0FBS1M7SUFBUztJQUFFLE9BQU9BO0FBQVE7QUFDbnlCLFNBQVNXLDhCQUE4QkMsTUFBTSxFQUFFQyxRQUFRO0lBQUksSUFBSUQsVUFBVSxNQUFNLE9BQU8sQ0FBQztJQUFHLElBQUlFLFNBQVMsQ0FBQztJQUFHLElBQUlDLGFBQWFiLE9BQU9jLElBQUksQ0FBQ0o7SUFBUyxJQUFJUCxLQUFLWTtJQUFHLElBQUtBLElBQUksR0FBR0EsSUFBSUYsV0FBV0csTUFBTSxFQUFFRCxJQUFLO1FBQUVaLE1BQU1VLFVBQVUsQ0FBQ0UsRUFBRTtRQUFFLElBQUlKLFNBQVNNLE9BQU8sQ0FBQ2QsUUFBUSxHQUFHO1FBQVVTLE1BQU0sQ0FBQ1QsSUFBSSxHQUFHTyxNQUFNLENBQUNQLElBQUk7SUFBRTtJQUFFLE9BQU9TO0FBQVE7QUFDbFQsd0RBQXdEO0FBQ3hELE1BQU1NLGdCQUFnQixXQUFXLEdBQUVwQyxNQUFNcUMsVUFBVSxDQUFDLENBQUNDLE1BQU1DO0lBQ3pELElBQUksRUFDQUMsV0FBV0MsU0FBUyxFQUNyQixHQUFHSCxNQUNKSSxRQUFRZiw4QkFBOEJXLE1BQU1oQztJQUM5QyxNQUFNcUMsa0JBQWtCLENBQUMsR0FBR3hDLHVCQUF1QkosT0FBTyxFQUFFMkM7SUFDNUQsT0FBb0IsV0FBRixHQUFHLElBQUdyQyxZQUFZdUMsR0FBRyxFQUFFSCxXQUFXdkIsT0FBTzJCLE1BQU0sQ0FBQztRQUNoRU4sS0FBS0E7SUFDUCxHQUFHSTtBQUNMO0FBQ0EsSUFBSUcsV0FBV1Y7QUFDZnZDLGtCQUFlLEdBQUdpRCIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL1JUR1RyYW5zaXRpb24uanM/YWVkOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBSZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG52YXIgX3VzZVJUR1RyYW5zaXRpb25Qcm9wcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdXNlUlRHVHJhbnNpdGlvblByb3BzXCIpKTtcbnZhciBfanN4UnVudGltZSA9IHJlcXVpcmUoXCJyZWFjdC9qc3gtcnVudGltZVwiKTtcbmNvbnN0IF9leGNsdWRlZCA9IFtcImNvbXBvbmVudFwiXTtcbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5mdW5jdGlvbiBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUobm9kZUludGVyb3ApIHsgaWYgKHR5cGVvZiBXZWFrTWFwICE9PSBcImZ1bmN0aW9uXCIpIHJldHVybiBudWxsOyB2YXIgY2FjaGVCYWJlbEludGVyb3AgPSBuZXcgV2Vha01hcCgpOyB2YXIgY2FjaGVOb2RlSW50ZXJvcCA9IG5ldyBXZWFrTWFwKCk7IHJldHVybiAoX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlID0gZnVuY3Rpb24gKG5vZGVJbnRlcm9wKSB7IHJldHVybiBub2RlSW50ZXJvcCA/IGNhY2hlTm9kZUludGVyb3AgOiBjYWNoZUJhYmVsSW50ZXJvcDsgfSkobm9kZUludGVyb3ApOyB9XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmosIG5vZGVJbnRlcm9wKSB7IGlmICghbm9kZUludGVyb3AgJiYgb2JqICYmIG9iai5fX2VzTW9kdWxlKSB7IHJldHVybiBvYmo7IH0gaWYgKG9iaiA9PT0gbnVsbCB8fCB0eXBlb2Ygb2JqICE9PSBcIm9iamVjdFwiICYmIHR5cGVvZiBvYmogIT09IFwiZnVuY3Rpb25cIikgeyByZXR1cm4geyBkZWZhdWx0OiBvYmogfTsgfSB2YXIgY2FjaGUgPSBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUobm9kZUludGVyb3ApOyBpZiAoY2FjaGUgJiYgY2FjaGUuaGFzKG9iaikpIHsgcmV0dXJuIGNhY2hlLmdldChvYmopOyB9IHZhciBuZXdPYmogPSB7fTsgdmFyIGhhc1Byb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOyBmb3IgKHZhciBrZXkgaW4gb2JqKSB7IGlmIChrZXkgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsgdmFyIGRlc2MgPSBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IG51bGw7IGlmIChkZXNjICYmIChkZXNjLmdldCB8fCBkZXNjLnNldCkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsgfSBlbHNlIHsgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsgfSB9IH0gbmV3T2JqLmRlZmF1bHQgPSBvYmo7IGlmIChjYWNoZSkgeyBjYWNoZS5zZXQob2JqLCBuZXdPYmopOyB9IHJldHVybiBuZXdPYmo7IH1cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHsgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307IHZhciB0YXJnZXQgPSB7fTsgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpOyB2YXIga2V5LCBpOyBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykgeyBrZXkgPSBzb3VyY2VLZXlzW2ldOyBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlOyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IHJldHVybiB0YXJnZXQ7IH1cbi8vIE5vcm1hbGl6ZXMgVHJhbnNpdGlvbiBjYWxsYmFja3Mgd2hlbiBub2RlUmVmIGlzIHVzZWQuXG5jb25zdCBSVEdUcmFuc2l0aW9uID0gLyojX19QVVJFX18qL1JlYWN0LmZvcndhcmRSZWYoKF9yZWYsIHJlZikgPT4ge1xuICBsZXQge1xuICAgICAgY29tcG9uZW50OiBDb21wb25lbnRcbiAgICB9ID0gX3JlZixcbiAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIF9leGNsdWRlZCk7XG4gIGNvbnN0IHRyYW5zaXRpb25Qcm9wcyA9ICgwLCBfdXNlUlRHVHJhbnNpdGlvblByb3BzLmRlZmF1bHQpKHByb3BzKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi8oMCwgX2pzeFJ1bnRpbWUuanN4KShDb21wb25lbnQsIE9iamVjdC5hc3NpZ24oe1xuICAgIHJlZjogcmVmXG4gIH0sIHRyYW5zaXRpb25Qcm9wcykpO1xufSk7XG52YXIgX2RlZmF1bHQgPSBSVEdUcmFuc2l0aW9uO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIlJlYWN0IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJyZXF1aXJlIiwiX3VzZVJUR1RyYW5zaXRpb25Qcm9wcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfanN4UnVudGltZSIsIl9leGNsdWRlZCIsIm9iaiIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsImNhY2hlIiwiaGFzIiwiZ2V0IiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJkZXNjIiwic2V0IiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiLCJzb3VyY2UiLCJleGNsdWRlZCIsInRhcmdldCIsInNvdXJjZUtleXMiLCJrZXlzIiwiaSIsImxlbmd0aCIsImluZGV4T2YiLCJSVEdUcmFuc2l0aW9uIiwiZm9yd2FyZFJlZiIsIl9yZWYiLCJyZWYiLCJjb21wb25lbnQiLCJDb21wb25lbnQiLCJwcm9wcyIsInRyYW5zaXRpb25Qcm9wcyIsImpzeCIsImFzc2lnbiIsIl9kZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/RTGTransition.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/SelectableContext.js":
/*!***********************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/SelectableContext.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = exports.makeEventKey = void 0;\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nconst SelectableContext = /*#__PURE__*/ React.createContext(null);\nconst makeEventKey = (eventKey, href = null)=>{\n    if (eventKey != null) return String(eventKey);\n    return href || null;\n};\nexports.makeEventKey = makeEventKey;\nvar _default = SelectableContext;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL1NlbGVjdGFibGVDb250ZXh0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBZSxHQUFHQSxvQkFBb0IsR0FBRyxLQUFLO0FBQzlDLElBQUlJLFFBQVFDLHdCQUF3QkMsbUJBQU9BLENBQUMsd0dBQU87QUFDbkQsU0FBU0MseUJBQXlCQyxXQUFXO0lBQUksSUFBSSxPQUFPQyxZQUFZLFlBQVksT0FBTztJQUFNLElBQUlDLG9CQUFvQixJQUFJRDtJQUFXLElBQUlFLG1CQUFtQixJQUFJRjtJQUFXLE9BQU8sQ0FBQ0YsMkJBQTJCLFNBQVVDLFdBQVc7UUFBSSxPQUFPQSxjQUFjRyxtQkFBbUJEO0lBQW1CLEdBQUdGO0FBQWM7QUFDdFQsU0FBU0gsd0JBQXdCTyxHQUFHLEVBQUVKLFdBQVc7SUFBSSxJQUFJLENBQUNBLGVBQWVJLE9BQU9BLElBQUlYLFVBQVUsRUFBRTtRQUFFLE9BQU9XO0lBQUs7SUFBRSxJQUFJQSxRQUFRLFFBQVEsT0FBT0EsUUFBUSxZQUFZLE9BQU9BLFFBQVEsWUFBWTtRQUFFLE9BQU87WUFBRVYsU0FBU1U7UUFBSTtJQUFHO0lBQUUsSUFBSUMsUUFBUU4seUJBQXlCQztJQUFjLElBQUlLLFNBQVNBLE1BQU1DLEdBQUcsQ0FBQ0YsTUFBTTtRQUFFLE9BQU9DLE1BQU1FLEdBQUcsQ0FBQ0g7SUFBTTtJQUFFLElBQUlJLFNBQVMsQ0FBQztJQUFHLElBQUlDLHdCQUF3QkMsT0FBT0MsY0FBYyxJQUFJRCxPQUFPRSx3QkFBd0I7SUFBRSxJQUFLLElBQUlDLE9BQU9ULElBQUs7UUFBRSxJQUFJUyxRQUFRLGFBQWFILE9BQU9JLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNaLEtBQUtTLE1BQU07WUFBRSxJQUFJSSxPQUFPUix3QkFBd0JDLE9BQU9FLHdCQUF3QixDQUFDUixLQUFLUyxPQUFPO1lBQU0sSUFBSUksUUFBU0EsQ0FBQUEsS0FBS1YsR0FBRyxJQUFJVSxLQUFLQyxHQUFHLEdBQUc7Z0JBQUVSLE9BQU9DLGNBQWMsQ0FBQ0gsUUFBUUssS0FBS0k7WUFBTyxPQUFPO2dCQUFFVCxNQUFNLENBQUNLLElBQUksR0FBR1QsR0FBRyxDQUFDUyxJQUFJO1lBQUU7UUFBRTtJQUFFO0lBQUVMLE9BQU9kLE9BQU8sR0FBR1U7SUFBSyxJQUFJQyxPQUFPO1FBQUVBLE1BQU1hLEdBQUcsQ0FBQ2QsS0FBS0k7SUFBUztJQUFFLE9BQU9BO0FBQVE7QUFDbnlCLE1BQU1XLG9CQUFvQixXQUFXLEdBQUV2QixNQUFNd0IsYUFBYSxDQUFDO0FBQzNELE1BQU16QixlQUFlLENBQUMwQixVQUFVQyxPQUFPLElBQUk7SUFDekMsSUFBSUQsWUFBWSxNQUFNLE9BQU9FLE9BQU9GO0lBQ3BDLE9BQU9DLFFBQVE7QUFDakI7QUFDQTlCLG9CQUFvQixHQUFHRztBQUN2QixJQUFJNkIsV0FBV0w7QUFDZjNCLGtCQUFlLEdBQUdnQyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL1NlbGVjdGFibGVDb250ZXh0LmpzPzc3NzQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSBleHBvcnRzLm1ha2VFdmVudEtleSA9IHZvaWQgMDtcbnZhciBSZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5mdW5jdGlvbiBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUobm9kZUludGVyb3ApIHsgaWYgKHR5cGVvZiBXZWFrTWFwICE9PSBcImZ1bmN0aW9uXCIpIHJldHVybiBudWxsOyB2YXIgY2FjaGVCYWJlbEludGVyb3AgPSBuZXcgV2Vha01hcCgpOyB2YXIgY2FjaGVOb2RlSW50ZXJvcCA9IG5ldyBXZWFrTWFwKCk7IHJldHVybiAoX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlID0gZnVuY3Rpb24gKG5vZGVJbnRlcm9wKSB7IHJldHVybiBub2RlSW50ZXJvcCA/IGNhY2hlTm9kZUludGVyb3AgOiBjYWNoZUJhYmVsSW50ZXJvcDsgfSkobm9kZUludGVyb3ApOyB9XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmosIG5vZGVJbnRlcm9wKSB7IGlmICghbm9kZUludGVyb3AgJiYgb2JqICYmIG9iai5fX2VzTW9kdWxlKSB7IHJldHVybiBvYmo7IH0gaWYgKG9iaiA9PT0gbnVsbCB8fCB0eXBlb2Ygb2JqICE9PSBcIm9iamVjdFwiICYmIHR5cGVvZiBvYmogIT09IFwiZnVuY3Rpb25cIikgeyByZXR1cm4geyBkZWZhdWx0OiBvYmogfTsgfSB2YXIgY2FjaGUgPSBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUobm9kZUludGVyb3ApOyBpZiAoY2FjaGUgJiYgY2FjaGUuaGFzKG9iaikpIHsgcmV0dXJuIGNhY2hlLmdldChvYmopOyB9IHZhciBuZXdPYmogPSB7fTsgdmFyIGhhc1Byb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOyBmb3IgKHZhciBrZXkgaW4gb2JqKSB7IGlmIChrZXkgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsgdmFyIGRlc2MgPSBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IG51bGw7IGlmIChkZXNjICYmIChkZXNjLmdldCB8fCBkZXNjLnNldCkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsgfSBlbHNlIHsgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsgfSB9IH0gbmV3T2JqLmRlZmF1bHQgPSBvYmo7IGlmIChjYWNoZSkgeyBjYWNoZS5zZXQob2JqLCBuZXdPYmopOyB9IHJldHVybiBuZXdPYmo7IH1cbmNvbnN0IFNlbGVjdGFibGVDb250ZXh0ID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUNvbnRleHQobnVsbCk7XG5jb25zdCBtYWtlRXZlbnRLZXkgPSAoZXZlbnRLZXksIGhyZWYgPSBudWxsKSA9PiB7XG4gIGlmIChldmVudEtleSAhPSBudWxsKSByZXR1cm4gU3RyaW5nKGV2ZW50S2V5KTtcbiAgcmV0dXJuIGhyZWYgfHwgbnVsbDtcbn07XG5leHBvcnRzLm1ha2VFdmVudEtleSA9IG1ha2VFdmVudEtleTtcbnZhciBfZGVmYXVsdCA9IFNlbGVjdGFibGVDb250ZXh0O1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIm1ha2VFdmVudEtleSIsIlJlYWN0IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJyZXF1aXJlIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwib2JqIiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJTZWxlY3RhYmxlQ29udGV4dCIsImNyZWF0ZUNvbnRleHQiLCJldmVudEtleSIsImhyZWYiLCJTdHJpbmciLCJfZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/SelectableContext.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/TabContext.js":
/*!****************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/TabContext.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nconst TabContext = /*#__PURE__*/ React.createContext(null);\nvar _default = TabContext;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL1RhYkNvbnRleHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGtCQUFlLEdBQUcsS0FBSztBQUN2QixJQUFJRyxRQUFRQyx3QkFBd0JDLG1CQUFPQSxDQUFDLHdHQUFPO0FBQ25ELFNBQVNDLHlCQUF5QkMsV0FBVztJQUFJLElBQUksT0FBT0MsWUFBWSxZQUFZLE9BQU87SUFBTSxJQUFJQyxvQkFBb0IsSUFBSUQ7SUFBVyxJQUFJRSxtQkFBbUIsSUFBSUY7SUFBVyxPQUFPLENBQUNGLDJCQUEyQixTQUFVQyxXQUFXO1FBQUksT0FBT0EsY0FBY0csbUJBQW1CRDtJQUFtQixHQUFHRjtBQUFjO0FBQ3RULFNBQVNILHdCQUF3Qk8sR0FBRyxFQUFFSixXQUFXO0lBQUksSUFBSSxDQUFDQSxlQUFlSSxPQUFPQSxJQUFJVixVQUFVLEVBQUU7UUFBRSxPQUFPVTtJQUFLO0lBQUUsSUFBSUEsUUFBUSxRQUFRLE9BQU9BLFFBQVEsWUFBWSxPQUFPQSxRQUFRLFlBQVk7UUFBRSxPQUFPO1lBQUVULFNBQVNTO1FBQUk7SUFBRztJQUFFLElBQUlDLFFBQVFOLHlCQUF5QkM7SUFBYyxJQUFJSyxTQUFTQSxNQUFNQyxHQUFHLENBQUNGLE1BQU07UUFBRSxPQUFPQyxNQUFNRSxHQUFHLENBQUNIO0lBQU07SUFBRSxJQUFJSSxTQUFTLENBQUM7SUFBRyxJQUFJQyx3QkFBd0JDLE9BQU9DLGNBQWMsSUFBSUQsT0FBT0Usd0JBQXdCO0lBQUUsSUFBSyxJQUFJQyxPQUFPVCxJQUFLO1FBQUUsSUFBSVMsUUFBUSxhQUFhSCxPQUFPSSxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDWixLQUFLUyxNQUFNO1lBQUUsSUFBSUksT0FBT1Isd0JBQXdCQyxPQUFPRSx3QkFBd0IsQ0FBQ1IsS0FBS1MsT0FBTztZQUFNLElBQUlJLFFBQVNBLENBQUFBLEtBQUtWLEdBQUcsSUFBSVUsS0FBS0MsR0FBRyxHQUFHO2dCQUFFUixPQUFPQyxjQUFjLENBQUNILFFBQVFLLEtBQUtJO1lBQU8sT0FBTztnQkFBRVQsTUFBTSxDQUFDSyxJQUFJLEdBQUdULEdBQUcsQ0FBQ1MsSUFBSTtZQUFFO1FBQUU7SUFBRTtJQUFFTCxPQUFPYixPQUFPLEdBQUdTO0lBQUssSUFBSUMsT0FBTztRQUFFQSxNQUFNYSxHQUFHLENBQUNkLEtBQUtJO0lBQVM7SUFBRSxPQUFPQTtBQUFRO0FBQ255QixNQUFNVyxhQUFhLFdBQVcsR0FBRXZCLE1BQU13QixhQUFhLENBQUM7QUFDcEQsSUFBSUMsV0FBV0Y7QUFDZjFCLGtCQUFlLEdBQUc0QiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL1RhYkNvbnRleHQuanM/NWYzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBSZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5mdW5jdGlvbiBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUobm9kZUludGVyb3ApIHsgaWYgKHR5cGVvZiBXZWFrTWFwICE9PSBcImZ1bmN0aW9uXCIpIHJldHVybiBudWxsOyB2YXIgY2FjaGVCYWJlbEludGVyb3AgPSBuZXcgV2Vha01hcCgpOyB2YXIgY2FjaGVOb2RlSW50ZXJvcCA9IG5ldyBXZWFrTWFwKCk7IHJldHVybiAoX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlID0gZnVuY3Rpb24gKG5vZGVJbnRlcm9wKSB7IHJldHVybiBub2RlSW50ZXJvcCA/IGNhY2hlTm9kZUludGVyb3AgOiBjYWNoZUJhYmVsSW50ZXJvcDsgfSkobm9kZUludGVyb3ApOyB9XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmosIG5vZGVJbnRlcm9wKSB7IGlmICghbm9kZUludGVyb3AgJiYgb2JqICYmIG9iai5fX2VzTW9kdWxlKSB7IHJldHVybiBvYmo7IH0gaWYgKG9iaiA9PT0gbnVsbCB8fCB0eXBlb2Ygb2JqICE9PSBcIm9iamVjdFwiICYmIHR5cGVvZiBvYmogIT09IFwiZnVuY3Rpb25cIikgeyByZXR1cm4geyBkZWZhdWx0OiBvYmogfTsgfSB2YXIgY2FjaGUgPSBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUobm9kZUludGVyb3ApOyBpZiAoY2FjaGUgJiYgY2FjaGUuaGFzKG9iaikpIHsgcmV0dXJuIGNhY2hlLmdldChvYmopOyB9IHZhciBuZXdPYmogPSB7fTsgdmFyIGhhc1Byb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOyBmb3IgKHZhciBrZXkgaW4gb2JqKSB7IGlmIChrZXkgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsgdmFyIGRlc2MgPSBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IG51bGw7IGlmIChkZXNjICYmIChkZXNjLmdldCB8fCBkZXNjLnNldCkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsgfSBlbHNlIHsgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsgfSB9IH0gbmV3T2JqLmRlZmF1bHQgPSBvYmo7IGlmIChjYWNoZSkgeyBjYWNoZS5zZXQob2JqLCBuZXdPYmopOyB9IHJldHVybiBuZXdPYmo7IH1cbmNvbnN0IFRhYkNvbnRleHQgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTtcbnZhciBfZGVmYXVsdCA9IFRhYkNvbnRleHQ7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOlsiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiUmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJub2RlSW50ZXJvcCIsIldlYWtNYXAiLCJjYWNoZUJhYmVsSW50ZXJvcCIsImNhY2hlTm9kZUludGVyb3AiLCJvYmoiLCJjYWNoZSIsImhhcyIsImdldCIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsInNldCIsIlRhYkNvbnRleHQiLCJjcmVhdGVDb250ZXh0IiwiX2RlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/TabContext.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/getScrollbarWidth.js":
/*!***********************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/getScrollbarWidth.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = getBodyScrollbarWidth;\n/**\n * Get the width of the vertical window scrollbar if it's visible\n */ function getBodyScrollbarWidth(ownerDocument = document) {\n    const window = ownerDocument.defaultView;\n    return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL2dldFNjcm9sbGJhcldpZHRoLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBZSxHQUFHRztBQUNsQjs7Q0FFQyxHQUNELFNBQVNBLHNCQUFzQkMsZ0JBQWdCQyxRQUFRO0lBQ3JELE1BQU1DLFNBQVNGLGNBQWNHLFdBQVc7SUFDeEMsT0FBT0MsS0FBS0MsR0FBRyxDQUFDSCxPQUFPSSxVQUFVLEdBQUdOLGNBQWNPLGVBQWUsQ0FBQ0MsV0FBVztBQUMvRSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL2dldFNjcm9sbGJhcldpZHRoLmpzP2M0ZTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSBnZXRCb2R5U2Nyb2xsYmFyV2lkdGg7XG4vKipcbiAqIEdldCB0aGUgd2lkdGggb2YgdGhlIHZlcnRpY2FsIHdpbmRvdyBzY3JvbGxiYXIgaWYgaXQncyB2aXNpYmxlXG4gKi9cbmZ1bmN0aW9uIGdldEJvZHlTY3JvbGxiYXJXaWR0aChvd25lckRvY3VtZW50ID0gZG9jdW1lbnQpIHtcbiAgY29uc3Qgd2luZG93ID0gb3duZXJEb2N1bWVudC5kZWZhdWx0VmlldztcbiAgcmV0dXJuIE1hdGguYWJzKHdpbmRvdy5pbm5lcldpZHRoIC0gb3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGgpO1xufSJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJnZXRCb2R5U2Nyb2xsYmFyV2lkdGgiLCJvd25lckRvY3VtZW50IiwiZG9jdW1lbnQiLCJ3aW5kb3ciLCJkZWZhdWx0VmlldyIsIk1hdGgiLCJhYnMiLCJpbm5lcldpZHRoIiwiZG9jdW1lbnRFbGVtZW50IiwiY2xpZW50V2lkdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/getScrollbarWidth.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/mergeOptionsWithPopperConfig.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/mergeOptionsWithPopperConfig.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nexports.__esModule = true;\nexports.toModifierMap = toModifierMap;\nexports.toModifierArray = toModifierArray;\nexports[\"default\"] = mergeOptionsWithPopperConfig;\nfunction toModifierMap(modifiers) {\n    const result = {};\n    if (!Array.isArray(modifiers)) {\n        return modifiers || result;\n    }\n    // eslint-disable-next-line no-unused-expressions\n    modifiers == null ? void 0 : modifiers.forEach((m)=>{\n        result[m.name] = m;\n    });\n    return result;\n}\nfunction toModifierArray(map = {}) {\n    if (Array.isArray(map)) return map;\n    return Object.keys(map).map((k)=>{\n        map[k].name = k;\n        return map[k];\n    });\n}\nfunction mergeOptionsWithPopperConfig({ enabled, enableEvents, placement, flip, offset, fixed, containerPadding, arrowElement, popperConfig = {} }) {\n    var _modifiers$eventListe, _modifiers$preventOve, _modifiers$preventOve2, _modifiers$offset, _modifiers$arrow;\n    const modifiers = toModifierMap(popperConfig.modifiers);\n    return Object.assign({}, popperConfig, {\n        placement,\n        enabled,\n        strategy: fixed ? \"fixed\" : popperConfig.strategy,\n        modifiers: toModifierArray(Object.assign({}, modifiers, {\n            eventListeners: {\n                enabled: enableEvents,\n                options: (_modifiers$eventListe = modifiers.eventListeners) == null ? void 0 : _modifiers$eventListe.options\n            },\n            preventOverflow: Object.assign({}, modifiers.preventOverflow, {\n                options: containerPadding ? Object.assign({\n                    padding: containerPadding\n                }, (_modifiers$preventOve = modifiers.preventOverflow) == null ? void 0 : _modifiers$preventOve.options) : (_modifiers$preventOve2 = modifiers.preventOverflow) == null ? void 0 : _modifiers$preventOve2.options\n            }),\n            offset: {\n                options: Object.assign({\n                    offset\n                }, (_modifiers$offset = modifiers.offset) == null ? void 0 : _modifiers$offset.options)\n            },\n            arrow: Object.assign({}, modifiers.arrow, {\n                enabled: !!arrowElement,\n                options: Object.assign({}, (_modifiers$arrow = modifiers.arrow) == null ? void 0 : _modifiers$arrow.options, {\n                    element: arrowElement\n                })\n            }),\n            flip: Object.assign({\n                enabled: !!flip\n            }, modifiers.flip)\n        }))\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL21lcmdlT3B0aW9uc1dpdGhQb3BwZXJDb25maWcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLHFCQUFxQixHQUFHRTtBQUN4QkYsdUJBQXVCLEdBQUdHO0FBQzFCSCxrQkFBZSxHQUFHSztBQUNsQixTQUFTSCxjQUFjSSxTQUFTO0lBQzlCLE1BQU1DLFNBQVMsQ0FBQztJQUNoQixJQUFJLENBQUNDLE1BQU1DLE9BQU8sQ0FBQ0gsWUFBWTtRQUM3QixPQUFPQSxhQUFhQztJQUN0QjtJQUVBLGlEQUFpRDtJQUNqREQsYUFBYSxPQUFPLEtBQUssSUFBSUEsVUFBVUksT0FBTyxDQUFDQyxDQUFBQTtRQUM3Q0osTUFBTSxDQUFDSSxFQUFFQyxJQUFJLENBQUMsR0FBR0Q7SUFDbkI7SUFDQSxPQUFPSjtBQUNUO0FBQ0EsU0FBU0osZ0JBQWdCVSxNQUFNLENBQUMsQ0FBQztJQUMvQixJQUFJTCxNQUFNQyxPQUFPLENBQUNJLE1BQU0sT0FBT0E7SUFDL0IsT0FBT0MsT0FBT0MsSUFBSSxDQUFDRixLQUFLQSxHQUFHLENBQUNHLENBQUFBO1FBQzFCSCxHQUFHLENBQUNHLEVBQUUsQ0FBQ0osSUFBSSxHQUFHSTtRQUNkLE9BQU9ILEdBQUcsQ0FBQ0csRUFBRTtJQUNmO0FBQ0Y7QUFDQSxTQUFTWCw2QkFBNkIsRUFDcENZLE9BQU8sRUFDUEMsWUFBWSxFQUNaQyxTQUFTLEVBQ1RDLElBQUksRUFDSkMsTUFBTSxFQUNOQyxLQUFLLEVBQ0xDLGdCQUFnQixFQUNoQkMsWUFBWSxFQUNaQyxlQUFlLENBQUMsQ0FBQyxFQUNsQjtJQUNDLElBQUlDLHVCQUF1QkMsdUJBQXVCQyx3QkFBd0JDLG1CQUFtQkM7SUFDN0YsTUFBTXhCLFlBQVlKLGNBQWN1QixhQUFhbkIsU0FBUztJQUN0RCxPQUFPUSxPQUFPaUIsTUFBTSxDQUFDLENBQUMsR0FBR04sY0FBYztRQUNyQ047UUFDQUY7UUFDQWUsVUFBVVYsUUFBUSxVQUFVRyxhQUFhTyxRQUFRO1FBQ2pEMUIsV0FBV0gsZ0JBQWdCVyxPQUFPaUIsTUFBTSxDQUFDLENBQUMsR0FBR3pCLFdBQVc7WUFDdEQyQixnQkFBZ0I7Z0JBQ2RoQixTQUFTQztnQkFDVGdCLFNBQVMsQ0FBQ1Isd0JBQXdCcEIsVUFBVTJCLGNBQWMsS0FBSyxPQUFPLEtBQUssSUFBSVAsc0JBQXNCUSxPQUFPO1lBQzlHO1lBQ0FDLGlCQUFpQnJCLE9BQU9pQixNQUFNLENBQUMsQ0FBQyxHQUFHekIsVUFBVTZCLGVBQWUsRUFBRTtnQkFDNURELFNBQVNYLG1CQUFtQlQsT0FBT2lCLE1BQU0sQ0FBQztvQkFDeENLLFNBQVNiO2dCQUNYLEdBQUcsQ0FBQ0ksd0JBQXdCckIsVUFBVTZCLGVBQWUsS0FBSyxPQUFPLEtBQUssSUFBSVIsc0JBQXNCTyxPQUFPLElBQUksQ0FBQ04seUJBQXlCdEIsVUFBVTZCLGVBQWUsS0FBSyxPQUFPLEtBQUssSUFBSVAsdUJBQXVCTSxPQUFPO1lBQ25OO1lBQ0FiLFFBQVE7Z0JBQ05hLFNBQVNwQixPQUFPaUIsTUFBTSxDQUFDO29CQUNyQlY7Z0JBQ0YsR0FBRyxDQUFDUSxvQkFBb0J2QixVQUFVZSxNQUFNLEtBQUssT0FBTyxLQUFLLElBQUlRLGtCQUFrQkssT0FBTztZQUN4RjtZQUNBRyxPQUFPdkIsT0FBT2lCLE1BQU0sQ0FBQyxDQUFDLEdBQUd6QixVQUFVK0IsS0FBSyxFQUFFO2dCQUN4Q3BCLFNBQVMsQ0FBQyxDQUFDTztnQkFDWFUsU0FBU3BCLE9BQU9pQixNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUNELG1CQUFtQnhCLFVBQVUrQixLQUFLLEtBQUssT0FBTyxLQUFLLElBQUlQLGlCQUFpQkksT0FBTyxFQUFFO29CQUMzR0ksU0FBU2Q7Z0JBQ1g7WUFDRjtZQUNBSixNQUFNTixPQUFPaUIsTUFBTSxDQUFDO2dCQUNsQmQsU0FBUyxDQUFDLENBQUNHO1lBQ2IsR0FBR2QsVUFBVWMsSUFBSTtRQUNuQjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L3VpL2Nqcy9tZXJnZU9wdGlvbnNXaXRoUG9wcGVyQ29uZmlnLmpzPzUxNWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLnRvTW9kaWZpZXJNYXAgPSB0b01vZGlmaWVyTWFwO1xuZXhwb3J0cy50b01vZGlmaWVyQXJyYXkgPSB0b01vZGlmaWVyQXJyYXk7XG5leHBvcnRzLmRlZmF1bHQgPSBtZXJnZU9wdGlvbnNXaXRoUG9wcGVyQ29uZmlnO1xuZnVuY3Rpb24gdG9Nb2RpZmllck1hcChtb2RpZmllcnMpIHtcbiAgY29uc3QgcmVzdWx0ID0ge307XG4gIGlmICghQXJyYXkuaXNBcnJheShtb2RpZmllcnMpKSB7XG4gICAgcmV0dXJuIG1vZGlmaWVycyB8fCByZXN1bHQ7XG4gIH1cblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLWV4cHJlc3Npb25zXG4gIG1vZGlmaWVycyA9PSBudWxsID8gdm9pZCAwIDogbW9kaWZpZXJzLmZvckVhY2gobSA9PiB7XG4gICAgcmVzdWx0W20ubmFtZV0gPSBtO1xuICB9KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIHRvTW9kaWZpZXJBcnJheShtYXAgPSB7fSkge1xuICBpZiAoQXJyYXkuaXNBcnJheShtYXApKSByZXR1cm4gbWFwO1xuICByZXR1cm4gT2JqZWN0LmtleXMobWFwKS5tYXAoayA9PiB7XG4gICAgbWFwW2tdLm5hbWUgPSBrO1xuICAgIHJldHVybiBtYXBba107XG4gIH0pO1xufVxuZnVuY3Rpb24gbWVyZ2VPcHRpb25zV2l0aFBvcHBlckNvbmZpZyh7XG4gIGVuYWJsZWQsXG4gIGVuYWJsZUV2ZW50cyxcbiAgcGxhY2VtZW50LFxuICBmbGlwLFxuICBvZmZzZXQsXG4gIGZpeGVkLFxuICBjb250YWluZXJQYWRkaW5nLFxuICBhcnJvd0VsZW1lbnQsXG4gIHBvcHBlckNvbmZpZyA9IHt9XG59KSB7XG4gIHZhciBfbW9kaWZpZXJzJGV2ZW50TGlzdGUsIF9tb2RpZmllcnMkcHJldmVudE92ZSwgX21vZGlmaWVycyRwcmV2ZW50T3ZlMiwgX21vZGlmaWVycyRvZmZzZXQsIF9tb2RpZmllcnMkYXJyb3c7XG4gIGNvbnN0IG1vZGlmaWVycyA9IHRvTW9kaWZpZXJNYXAocG9wcGVyQ29uZmlnLm1vZGlmaWVycyk7XG4gIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBwb3BwZXJDb25maWcsIHtcbiAgICBwbGFjZW1lbnQsXG4gICAgZW5hYmxlZCxcbiAgICBzdHJhdGVneTogZml4ZWQgPyAnZml4ZWQnIDogcG9wcGVyQ29uZmlnLnN0cmF0ZWd5LFxuICAgIG1vZGlmaWVyczogdG9Nb2RpZmllckFycmF5KE9iamVjdC5hc3NpZ24oe30sIG1vZGlmaWVycywge1xuICAgICAgZXZlbnRMaXN0ZW5lcnM6IHtcbiAgICAgICAgZW5hYmxlZDogZW5hYmxlRXZlbnRzLFxuICAgICAgICBvcHRpb25zOiAoX21vZGlmaWVycyRldmVudExpc3RlID0gbW9kaWZpZXJzLmV2ZW50TGlzdGVuZXJzKSA9PSBudWxsID8gdm9pZCAwIDogX21vZGlmaWVycyRldmVudExpc3RlLm9wdGlvbnNcbiAgICAgIH0sXG4gICAgICBwcmV2ZW50T3ZlcmZsb3c6IE9iamVjdC5hc3NpZ24oe30sIG1vZGlmaWVycy5wcmV2ZW50T3ZlcmZsb3csIHtcbiAgICAgICAgb3B0aW9uczogY29udGFpbmVyUGFkZGluZyA/IE9iamVjdC5hc3NpZ24oe1xuICAgICAgICAgIHBhZGRpbmc6IGNvbnRhaW5lclBhZGRpbmdcbiAgICAgICAgfSwgKF9tb2RpZmllcnMkcHJldmVudE92ZSA9IG1vZGlmaWVycy5wcmV2ZW50T3ZlcmZsb3cpID09IG51bGwgPyB2b2lkIDAgOiBfbW9kaWZpZXJzJHByZXZlbnRPdmUub3B0aW9ucykgOiAoX21vZGlmaWVycyRwcmV2ZW50T3ZlMiA9IG1vZGlmaWVycy5wcmV2ZW50T3ZlcmZsb3cpID09IG51bGwgPyB2b2lkIDAgOiBfbW9kaWZpZXJzJHByZXZlbnRPdmUyLm9wdGlvbnNcbiAgICAgIH0pLFxuICAgICAgb2Zmc2V0OiB7XG4gICAgICAgIG9wdGlvbnM6IE9iamVjdC5hc3NpZ24oe1xuICAgICAgICAgIG9mZnNldFxuICAgICAgICB9LCAoX21vZGlmaWVycyRvZmZzZXQgPSBtb2RpZmllcnMub2Zmc2V0KSA9PSBudWxsID8gdm9pZCAwIDogX21vZGlmaWVycyRvZmZzZXQub3B0aW9ucylcbiAgICAgIH0sXG4gICAgICBhcnJvdzogT2JqZWN0LmFzc2lnbih7fSwgbW9kaWZpZXJzLmFycm93LCB7XG4gICAgICAgIGVuYWJsZWQ6ICEhYXJyb3dFbGVtZW50LFxuICAgICAgICBvcHRpb25zOiBPYmplY3QuYXNzaWduKHt9LCAoX21vZGlmaWVycyRhcnJvdyA9IG1vZGlmaWVycy5hcnJvdykgPT0gbnVsbCA/IHZvaWQgMCA6IF9tb2RpZmllcnMkYXJyb3cub3B0aW9ucywge1xuICAgICAgICAgIGVsZW1lbnQ6IGFycm93RWxlbWVudFxuICAgICAgICB9KVxuICAgICAgfSksXG4gICAgICBmbGlwOiBPYmplY3QuYXNzaWduKHtcbiAgICAgICAgZW5hYmxlZDogISFmbGlwXG4gICAgICB9LCBtb2RpZmllcnMuZmxpcClcbiAgICB9KSlcbiAgfSk7XG59Il0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwidG9Nb2RpZmllck1hcCIsInRvTW9kaWZpZXJBcnJheSIsImRlZmF1bHQiLCJtZXJnZU9wdGlvbnNXaXRoUG9wcGVyQ29uZmlnIiwibW9kaWZpZXJzIiwicmVzdWx0IiwiQXJyYXkiLCJpc0FycmF5IiwiZm9yRWFjaCIsIm0iLCJuYW1lIiwibWFwIiwiT2JqZWN0Iiwia2V5cyIsImsiLCJlbmFibGVkIiwiZW5hYmxlRXZlbnRzIiwicGxhY2VtZW50IiwiZmxpcCIsIm9mZnNldCIsImZpeGVkIiwiY29udGFpbmVyUGFkZGluZyIsImFycm93RWxlbWVudCIsInBvcHBlckNvbmZpZyIsIl9tb2RpZmllcnMkZXZlbnRMaXN0ZSIsIl9tb2RpZmllcnMkcHJldmVudE92ZSIsIl9tb2RpZmllcnMkcHJldmVudE92ZTIiLCJfbW9kaWZpZXJzJG9mZnNldCIsIl9tb2RpZmllcnMkYXJyb3ciLCJhc3NpZ24iLCJzdHJhdGVneSIsImV2ZW50TGlzdGVuZXJzIiwib3B0aW9ucyIsInByZXZlbnRPdmVyZmxvdyIsInBhZGRpbmciLCJhcnJvdyIsImVsZW1lbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/mergeOptionsWithPopperConfig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/popper.js":
/*!************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/popper.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nvar top = \"top\";\nvar bottom = \"bottom\";\nvar right = \"right\";\nvar left = \"left\";\nvar auto = \"auto\";\nvar basePlacements = [\n    top,\n    bottom,\n    right,\n    left\n];\nvar start = \"start\";\nvar end = \"end\";\nvar clippingParents = \"clippingParents\";\nvar viewport = \"viewport\";\nvar popper = \"popper\";\nvar reference = \"reference\";\nvar variationPlacements = /*#__PURE__*/ basePlacements.reduce(function(acc, placement) {\n    return acc.concat([\n        placement + \"-\" + start,\n        placement + \"-\" + end\n    ]);\n}, []);\nvar placements = /*#__PURE__*/ [].concat(basePlacements, [\n    auto\n]).reduce(function(acc, placement) {\n    return acc.concat([\n        placement,\n        placement + \"-\" + start,\n        placement + \"-\" + end\n    ]);\n}, []); // modifiers that need to read the DOM\nvar beforeRead = \"beforeRead\";\nvar read = \"read\";\nvar afterRead = \"afterRead\"; // pure-logic modifiers\nvar beforeMain = \"beforeMain\";\nvar main = \"main\";\nvar afterMain = \"afterMain\"; // modifier with the purpose to write to the DOM (or write into a framework state)\nvar beforeWrite = \"beforeWrite\";\nvar write = \"write\";\nvar afterWrite = \"afterWrite\";\nvar modifierPhases = [\n    beforeRead,\n    read,\n    afterRead,\n    beforeMain,\n    main,\n    afterMain,\n    beforeWrite,\n    write,\n    afterWrite\n];\nfunction getBasePlacement(placement) {\n    return placement.split(\"-\")[0];\n}\nfunction getWindow(node) {\n    if (node == null) {\n        return window;\n    }\n    if (node.toString() !== \"[object Window]\") {\n        var ownerDocument = node.ownerDocument;\n        return ownerDocument ? ownerDocument.defaultView || window : window;\n    }\n    return node;\n}\nfunction isElement(node) {\n    var OwnElement = getWindow(node).Element;\n    return node instanceof OwnElement || node instanceof Element;\n}\nfunction isHTMLElement(node) {\n    var OwnElement = getWindow(node).HTMLElement;\n    return node instanceof OwnElement || node instanceof HTMLElement;\n}\nfunction isShadowRoot(node) {\n    // IE 11 has no ShadowRoot\n    if (typeof ShadowRoot === \"undefined\") {\n        return false;\n    }\n    var OwnElement = getWindow(node).ShadowRoot;\n    return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nvar max = Math.max;\nvar min = Math.min;\nvar round = Math.round;\nfunction getUAString() {\n    var uaData = navigator.userAgentData;\n    if (uaData != null && uaData.brands) {\n        return uaData.brands.map(function(item) {\n            return item.brand + \"/\" + item.version;\n        }).join(\" \");\n    }\n    return navigator.userAgent;\n}\nfunction isLayoutViewport() {\n    return !/^((?!chrome|android).)*safari/i.test(getUAString());\n}\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy) {\n    if (includeScale === void 0) {\n        includeScale = false;\n    }\n    if (isFixedStrategy === void 0) {\n        isFixedStrategy = false;\n    }\n    var clientRect = element.getBoundingClientRect();\n    var scaleX = 1;\n    var scaleY = 1;\n    if (includeScale && isHTMLElement(element)) {\n        scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n        scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n    }\n    var _ref = isElement(element) ? getWindow(element) : window, visualViewport = _ref.visualViewport;\n    var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n    var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;\n    var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;\n    var width = clientRect.width / scaleX;\n    var height = clientRect.height / scaleY;\n    return {\n        width: width,\n        height: height,\n        top: y,\n        right: x + width,\n        bottom: y + height,\n        left: x,\n        x: x,\n        y: y\n    };\n}\n// means it doesn't take into account transforms.\nfunction getLayoutRect(element) {\n    var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\n    // Fixes https://github.com/popperjs/popper-core/issues/1223\n    var width = element.offsetWidth;\n    var height = element.offsetHeight;\n    if (Math.abs(clientRect.width - width) <= 1) {\n        width = clientRect.width;\n    }\n    if (Math.abs(clientRect.height - height) <= 1) {\n        height = clientRect.height;\n    }\n    return {\n        x: element.offsetLeft,\n        y: element.offsetTop,\n        width: width,\n        height: height\n    };\n}\nfunction contains(parent, child) {\n    var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n    if (parent.contains(child)) {\n        return true;\n    } else if (rootNode && isShadowRoot(rootNode)) {\n        var next = child;\n        do {\n            if (next && parent.isSameNode(next)) {\n                return true;\n            } // $FlowFixMe[prop-missing]: need a better way to handle this...\n            next = next.parentNode || next.host;\n        }while (next);\n    } // Give up, the result is false\n    return false;\n}\nfunction getNodeName(element) {\n    return element ? (element.nodeName || \"\").toLowerCase() : null;\n}\nfunction getComputedStyle(element) {\n    return getWindow(element).getComputedStyle(element);\n}\nfunction isTableElement(element) {\n    return [\n        \"table\",\n        \"td\",\n        \"th\"\n    ].indexOf(getNodeName(element)) >= 0;\n}\nfunction getDocumentElement(element) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return ((isElement(element) ? element.ownerDocument : element.document) || window.document).documentElement;\n}\nfunction getParentNode(element) {\n    if (getNodeName(element) === \"html\") {\n        return element;\n    }\n    return(// $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || (isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n    );\n}\nfunction getTrueOffsetParent(element) {\n    if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n    getComputedStyle(element).position === \"fixed\") {\n        return null;\n    }\n    return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\nfunction getContainingBlock(element) {\n    var isFirefox = /firefox/i.test(getUAString());\n    var isIE = /Trident/i.test(getUAString());\n    if (isIE && isHTMLElement(element)) {\n        // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n        var elementCss = getComputedStyle(element);\n        if (elementCss.position === \"fixed\") {\n            return null;\n        }\n    }\n    var currentNode = getParentNode(element);\n    if (isShadowRoot(currentNode)) {\n        currentNode = currentNode.host;\n    }\n    while(isHTMLElement(currentNode) && [\n        \"html\",\n        \"body\"\n    ].indexOf(getNodeName(currentNode)) < 0){\n        var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n        // create a containing block.\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n        if (css.transform !== \"none\" || css.perspective !== \"none\" || css.contain === \"paint\" || [\n            \"transform\",\n            \"perspective\"\n        ].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === \"filter\" || isFirefox && css.filter && css.filter !== \"none\") {\n            return currentNode;\n        } else {\n            currentNode = currentNode.parentNode;\n        }\n    }\n    return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element) {\n    var window1 = getWindow(element);\n    var offsetParent = getTrueOffsetParent(element);\n    while(offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === \"static\"){\n        offsetParent = getTrueOffsetParent(offsetParent);\n    }\n    if (offsetParent && (getNodeName(offsetParent) === \"html\" || getNodeName(offsetParent) === \"body\" && getComputedStyle(offsetParent).position === \"static\")) {\n        return window1;\n    }\n    return offsetParent || getContainingBlock(element) || window1;\n}\nfunction getMainAxisFromPlacement(placement) {\n    return [\n        \"top\",\n        \"bottom\"\n    ].indexOf(placement) >= 0 ? \"x\" : \"y\";\n}\nfunction within(min$1, value, max$1) {\n    return max(min$1, min(value, max$1));\n}\nfunction withinMaxClamp(min, value, max) {\n    var v = within(min, value, max);\n    return v > max ? max : v;\n}\nfunction getFreshSideObject() {\n    return {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n    };\n}\nfunction mergePaddingObject(paddingObject) {\n    return Object.assign({}, getFreshSideObject(), paddingObject);\n}\nfunction expandToHashMap(value, keys) {\n    return keys.reduce(function(hashMap, key) {\n        hashMap[key] = value;\n        return hashMap;\n    }, {});\n}\nvar toPaddingObject = function toPaddingObject(padding, state) {\n    padding = typeof padding === \"function\" ? padding(Object.assign({}, state.rects, {\n        placement: state.placement\n    })) : padding;\n    return mergePaddingObject(typeof padding !== \"number\" ? padding : expandToHashMap(padding, basePlacements));\n};\nfunction arrow(_ref) {\n    var _state$modifiersData$;\n    var state = _ref.state, name = _ref.name, options = _ref.options;\n    var arrowElement = state.elements.arrow;\n    var popperOffsets = state.modifiersData.popperOffsets;\n    var basePlacement = getBasePlacement(state.placement);\n    var axis = getMainAxisFromPlacement(basePlacement);\n    var isVertical = [\n        left,\n        right\n    ].indexOf(basePlacement) >= 0;\n    var len = isVertical ? \"height\" : \"width\";\n    if (!arrowElement || !popperOffsets) {\n        return;\n    }\n    var paddingObject = toPaddingObject(options.padding, state);\n    var arrowRect = getLayoutRect(arrowElement);\n    var minProp = axis === \"y\" ? top : left;\n    var maxProp = axis === \"y\" ? bottom : right;\n    var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n    var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n    var arrowOffsetParent = getOffsetParent(arrowElement);\n    var clientSize = arrowOffsetParent ? axis === \"y\" ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n    var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n    // outside of the popper bounds\n    var min = paddingObject[minProp];\n    var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n    var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n    var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n    var axisProp = axis;\n    state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\nfunction effect$1(_ref2) {\n    var state = _ref2.state, options = _ref2.options;\n    var _options$element = options.element, arrowElement = _options$element === void 0 ? \"[data-popper-arrow]\" : _options$element;\n    if (arrowElement == null) {\n        return;\n    } // CSS selector\n    if (typeof arrowElement === \"string\") {\n        arrowElement = state.elements.popper.querySelector(arrowElement);\n        if (!arrowElement) {\n            return;\n        }\n    }\n    if (true) {\n        if (!isHTMLElement(arrowElement)) {\n            console.error([\n                'Popper: \"arrow\" element must be an HTMLElement (not an SVGElement).',\n                \"To use an SVG arrow, wrap it in an HTMLElement that will be used as\",\n                \"the arrow.\"\n            ].join(\" \"));\n        }\n    }\n    if (!contains(state.elements.popper, arrowElement)) {\n        if (true) {\n            console.error([\n                'Popper: \"arrow\" modifier\\'s `element` must be a child of the popper',\n                \"element.\"\n            ].join(\" \"));\n        }\n        return;\n    }\n    state.elements.arrow = arrowElement;\n} // eslint-disable-next-line import/no-unused-modules\nvar arrow$1 = {\n    name: \"arrow\",\n    enabled: true,\n    phase: \"main\",\n    fn: arrow,\n    effect: effect$1,\n    requires: [\n        \"popperOffsets\"\n    ],\n    requiresIfExists: [\n        \"preventOverflow\"\n    ]\n};\nfunction getVariation(placement) {\n    return placement.split(\"-\")[1];\n}\nvar unsetSides = {\n    top: \"auto\",\n    right: \"auto\",\n    bottom: \"auto\",\n    left: \"auto\"\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\nfunction roundOffsetsByDPR(_ref) {\n    var x = _ref.x, y = _ref.y;\n    var win = window;\n    var dpr = win.devicePixelRatio || 1;\n    return {\n        x: round(x * dpr) / dpr || 0,\n        y: round(y * dpr) / dpr || 0\n    };\n}\nfunction mapToStyles(_ref2) {\n    var _Object$assign2;\n    var popper = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, variation = _ref2.variation, offsets = _ref2.offsets, position = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets, isFixed = _ref2.isFixed;\n    var _offsets$x = offsets.x, x = _offsets$x === void 0 ? 0 : _offsets$x, _offsets$y = offsets.y, y = _offsets$y === void 0 ? 0 : _offsets$y;\n    var _ref3 = typeof roundOffsets === \"function\" ? roundOffsets({\n        x: x,\n        y: y\n    }) : {\n        x: x,\n        y: y\n    };\n    x = _ref3.x;\n    y = _ref3.y;\n    var hasX = offsets.hasOwnProperty(\"x\");\n    var hasY = offsets.hasOwnProperty(\"y\");\n    var sideX = left;\n    var sideY = top;\n    var win = window;\n    if (adaptive) {\n        var offsetParent = getOffsetParent(popper);\n        var heightProp = \"clientHeight\";\n        var widthProp = \"clientWidth\";\n        if (offsetParent === getWindow(popper)) {\n            offsetParent = getDocumentElement(popper);\n            if (getComputedStyle(offsetParent).position !== \"static\" && position === \"absolute\") {\n                heightProp = \"scrollHeight\";\n                widthProp = \"scrollWidth\";\n            }\n        } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n        offsetParent = offsetParent;\n        if (placement === top || (placement === left || placement === right) && variation === end) {\n            sideY = bottom;\n            var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : offsetParent[heightProp];\n            y -= offsetY - popperRect.height;\n            y *= gpuAcceleration ? 1 : -1;\n        }\n        if (placement === left || (placement === top || placement === bottom) && variation === end) {\n            sideX = right;\n            var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : offsetParent[widthProp];\n            x -= offsetX - popperRect.width;\n            x *= gpuAcceleration ? 1 : -1;\n        }\n    }\n    var commonStyles = Object.assign({\n        position: position\n    }, adaptive && unsetSides);\n    var _ref4 = roundOffsets === true ? roundOffsetsByDPR({\n        x: x,\n        y: y\n    }) : {\n        x: x,\n        y: y\n    };\n    x = _ref4.x;\n    y = _ref4.y;\n    if (gpuAcceleration) {\n        var _Object$assign;\n        return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? \"0\" : \"\", _Object$assign[sideX] = hasX ? \"0\" : \"\", _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n    }\n    return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : \"\", _Object$assign2[sideX] = hasX ? x + \"px\" : \"\", _Object$assign2.transform = \"\", _Object$assign2));\n}\nfunction computeStyles(_ref5) {\n    var state = _ref5.state, options = _ref5.options;\n    var _options$gpuAccelerat = options.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n    if (true) {\n        var transitionProperty = getComputedStyle(state.elements.popper).transitionProperty || \"\";\n        if (adaptive && [\n            \"transform\",\n            \"top\",\n            \"right\",\n            \"bottom\",\n            \"left\"\n        ].some(function(property) {\n            return transitionProperty.indexOf(property) >= 0;\n        })) {\n            console.warn([\n                \"Popper: Detected CSS transitions on at least one of the following\",\n                'CSS properties: \"transform\", \"top\", \"right\", \"bottom\", \"left\".',\n                \"\\n\\n\",\n                'Disable the \"computeStyles\" modifier\\'s `adaptive` option to allow',\n                \"for smooth transitions, or remove these properties from the CSS\",\n                \"transition declaration on the popper element if only transitioning\",\n                \"opacity or background-color for example.\",\n                \"\\n\\n\",\n                \"We recommend using the popper element as a wrapper around an inner\",\n                \"element that can have any CSS property transitioned for animations.\"\n            ].join(\" \"));\n        }\n    }\n    var commonStyles = {\n        placement: getBasePlacement(state.placement),\n        variation: getVariation(state.placement),\n        popper: state.elements.popper,\n        popperRect: state.rects.popper,\n        gpuAcceleration: gpuAcceleration,\n        isFixed: state.options.strategy === \"fixed\"\n    };\n    if (state.modifiersData.popperOffsets != null) {\n        state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\n            offsets: state.modifiersData.popperOffsets,\n            position: state.options.strategy,\n            adaptive: adaptive,\n            roundOffsets: roundOffsets\n        })));\n    }\n    if (state.modifiersData.arrow != null) {\n        state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\n            offsets: state.modifiersData.arrow,\n            position: \"absolute\",\n            adaptive: false,\n            roundOffsets: roundOffsets\n        })));\n    }\n    state.attributes.popper = Object.assign({}, state.attributes.popper, {\n        \"data-popper-placement\": state.placement\n    });\n} // eslint-disable-next-line import/no-unused-modules\nvar computeStyles$1 = {\n    name: \"computeStyles\",\n    enabled: true,\n    phase: \"beforeWrite\",\n    fn: computeStyles,\n    data: {}\n};\nvar passive = {\n    passive: true\n};\nfunction effect(_ref) {\n    var state = _ref.state, instance = _ref.instance, options = _ref.options;\n    var _options$scroll = options.scroll, scroll = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options.resize, resize = _options$resize === void 0 ? true : _options$resize;\n    var window1 = getWindow(state.elements.popper);\n    var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n    if (scroll) {\n        scrollParents.forEach(function(scrollParent) {\n            scrollParent.addEventListener(\"scroll\", instance.update, passive);\n        });\n    }\n    if (resize) {\n        window1.addEventListener(\"resize\", instance.update, passive);\n    }\n    return function() {\n        if (scroll) {\n            scrollParents.forEach(function(scrollParent) {\n                scrollParent.removeEventListener(\"scroll\", instance.update, passive);\n            });\n        }\n        if (resize) {\n            window1.removeEventListener(\"resize\", instance.update, passive);\n        }\n    };\n} // eslint-disable-next-line import/no-unused-modules\nvar eventListeners = {\n    name: \"eventListeners\",\n    enabled: true,\n    phase: \"write\",\n    fn: function fn() {},\n    effect: effect,\n    data: {}\n};\nvar hash$1 = {\n    left: \"right\",\n    right: \"left\",\n    bottom: \"top\",\n    top: \"bottom\"\n};\nfunction getOppositePlacement(placement) {\n    return placement.replace(/left|right|bottom|top/g, function(matched) {\n        return hash$1[matched];\n    });\n}\nvar hash = {\n    start: \"end\",\n    end: \"start\"\n};\nfunction getOppositeVariationPlacement(placement) {\n    return placement.replace(/start|end/g, function(matched) {\n        return hash[matched];\n    });\n}\nfunction getWindowScroll(node) {\n    var win = getWindow(node);\n    var scrollLeft = win.pageXOffset;\n    var scrollTop = win.pageYOffset;\n    return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n    };\n}\nfunction getWindowScrollBarX(element) {\n    // If <html> has a CSS width greater than the viewport, then this will be\n    // incorrect for RTL.\n    // Popper 1 is broken in this case and never had a bug report so let's assume\n    // it's not an issue. I don't think anyone ever specifies width on <html>\n    // anyway.\n    // Browsers where the left scrollbar doesn't cause an issue report `0` for\n    // this (e.g. Edge 2019, IE11, Safari)\n    return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}\nfunction getViewportRect(element, strategy) {\n    var win = getWindow(element);\n    var html = getDocumentElement(element);\n    var visualViewport = win.visualViewport;\n    var width = html.clientWidth;\n    var height = html.clientHeight;\n    var x = 0;\n    var y = 0;\n    if (visualViewport) {\n        width = visualViewport.width;\n        height = visualViewport.height;\n        var layoutViewport = isLayoutViewport();\n        if (layoutViewport || !layoutViewport && strategy === \"fixed\") {\n            x = visualViewport.offsetLeft;\n            y = visualViewport.offsetTop;\n        }\n    }\n    return {\n        width: width,\n        height: height,\n        x: x + getWindowScrollBarX(element),\n        y: y\n    };\n}\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\nfunction getDocumentRect(element) {\n    var _element$ownerDocumen;\n    var html = getDocumentElement(element);\n    var winScroll = getWindowScroll(element);\n    var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n    var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n    var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n    var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n    var y = -winScroll.scrollTop;\n    if (getComputedStyle(body || html).direction === \"rtl\") {\n        x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n    }\n    return {\n        width: width,\n        height: height,\n        x: x,\n        y: y\n    };\n}\nfunction isScrollParent(element) {\n    // Firefox wants us to check `-x` and `-y` variations as well\n    var _getComputedStyle = getComputedStyle(element), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;\n    return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\nfunction getScrollParent(node) {\n    if ([\n        \"html\",\n        \"body\",\n        \"#document\"\n    ].indexOf(getNodeName(node)) >= 0) {\n        // $FlowFixMe[incompatible-return]: assume body is always available\n        return node.ownerDocument.body;\n    }\n    if (isHTMLElement(node) && isScrollParent(node)) {\n        return node;\n    }\n    return getScrollParent(getParentNode(node));\n}\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we'll need to re-calculate the\nreference element's position.\n*/ function listScrollParents(element, list) {\n    var _element$ownerDocumen;\n    if (list === void 0) {\n        list = [];\n    }\n    var scrollParent = getScrollParent(element);\n    var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n    var win = getWindow(scrollParent);\n    var target = isBody ? [\n        win\n    ].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n    var updatedList = list.concat(target);\n    return isBody ? updatedList : updatedList.concat(listScrollParents(getParentNode(target)));\n}\nfunction rectToClientRect(rect) {\n    return Object.assign({}, rect, {\n        left: rect.x,\n        top: rect.y,\n        right: rect.x + rect.width,\n        bottom: rect.y + rect.height\n    });\n}\nfunction getInnerBoundingClientRect(element, strategy) {\n    var rect = getBoundingClientRect(element, false, strategy === \"fixed\");\n    rect.top = rect.top + element.clientTop;\n    rect.left = rect.left + element.clientLeft;\n    rect.bottom = rect.top + element.clientHeight;\n    rect.right = rect.left + element.clientWidth;\n    rect.width = element.clientWidth;\n    rect.height = element.clientHeight;\n    rect.x = rect.left;\n    rect.y = rect.top;\n    return rect;\n}\nfunction getClientRectFromMixedType(element, clippingParent, strategy) {\n    return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\nfunction getClippingParents(element) {\n    var clippingParents = listScrollParents(getParentNode(element));\n    var canEscapeClipping = [\n        \"absolute\",\n        \"fixed\"\n    ].indexOf(getComputedStyle(element).position) >= 0;\n    var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n    if (!isElement(clipperElement)) {\n        return [];\n    } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n    return clippingParents.filter(function(clippingParent) {\n        return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== \"body\";\n    });\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\nfunction getClippingRect(element, boundary, rootBoundary, strategy) {\n    var mainClippingParents = boundary === \"clippingParents\" ? getClippingParents(element) : [].concat(boundary);\n    var clippingParents = [].concat(mainClippingParents, [\n        rootBoundary\n    ]);\n    var firstClippingParent = clippingParents[0];\n    var clippingRect = clippingParents.reduce(function(accRect, clippingParent) {\n        var rect = getClientRectFromMixedType(element, clippingParent, strategy);\n        accRect.top = max(rect.top, accRect.top);\n        accRect.right = min(rect.right, accRect.right);\n        accRect.bottom = min(rect.bottom, accRect.bottom);\n        accRect.left = max(rect.left, accRect.left);\n        return accRect;\n    }, getClientRectFromMixedType(element, firstClippingParent, strategy));\n    clippingRect.width = clippingRect.right - clippingRect.left;\n    clippingRect.height = clippingRect.bottom - clippingRect.top;\n    clippingRect.x = clippingRect.left;\n    clippingRect.y = clippingRect.top;\n    return clippingRect;\n}\nfunction computeOffsets(_ref) {\n    var reference = _ref.reference, element = _ref.element, placement = _ref.placement;\n    var basePlacement = placement ? getBasePlacement(placement) : null;\n    var variation = placement ? getVariation(placement) : null;\n    var commonX = reference.x + reference.width / 2 - element.width / 2;\n    var commonY = reference.y + reference.height / 2 - element.height / 2;\n    var offsets;\n    switch(basePlacement){\n        case top:\n            offsets = {\n                x: commonX,\n                y: reference.y - element.height\n            };\n            break;\n        case bottom:\n            offsets = {\n                x: commonX,\n                y: reference.y + reference.height\n            };\n            break;\n        case right:\n            offsets = {\n                x: reference.x + reference.width,\n                y: commonY\n            };\n            break;\n        case left:\n            offsets = {\n                x: reference.x - element.width,\n                y: commonY\n            };\n            break;\n        default:\n            offsets = {\n                x: reference.x,\n                y: reference.y\n            };\n    }\n    var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n    if (mainAxis != null) {\n        var len = mainAxis === \"y\" ? \"height\" : \"width\";\n        switch(variation){\n            case start:\n                offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n                break;\n            case end:\n                offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n                break;\n        }\n    }\n    return offsets;\n}\nfunction detectOverflow(state, options) {\n    if (options === void 0) {\n        options = {};\n    }\n    var _options = options, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$strategy = _options.strategy, strategy = _options$strategy === void 0 ? state.strategy : _options$strategy, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? clippingParents : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? popper : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;\n    var paddingObject = mergePaddingObject(typeof padding !== \"number\" ? padding : expandToHashMap(padding, basePlacements));\n    var altContext = elementContext === popper ? reference : popper;\n    var popperRect = state.rects.popper;\n    var element = state.elements[altBoundary ? altContext : elementContext];\n    var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);\n    var referenceClientRect = getBoundingClientRect(state.elements.reference);\n    var popperOffsets = computeOffsets({\n        reference: referenceClientRect,\n        element: popperRect,\n        strategy: \"absolute\",\n        placement: placement\n    });\n    var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));\n    var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n    // 0 or negative = within the clipping rect\n    var overflowOffsets = {\n        top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n        bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n        left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n        right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n    };\n    var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n    if (elementContext === popper && offsetData) {\n        var offset = offsetData[placement];\n        Object.keys(overflowOffsets).forEach(function(key) {\n            var multiply = [\n                right,\n                bottom\n            ].indexOf(key) >= 0 ? 1 : -1;\n            var axis = [\n                top,\n                bottom\n            ].indexOf(key) >= 0 ? \"y\" : \"x\";\n            overflowOffsets[key] += offset[axis] * multiply;\n        });\n    }\n    return overflowOffsets;\n}\nfunction computeAutoPlacement(state, options) {\n    if (options === void 0) {\n        options = {};\n    }\n    var _options = options, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;\n    var variation = getVariation(placement);\n    var placements$1 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function(placement) {\n        return getVariation(placement) === variation;\n    }) : basePlacements;\n    var allowedPlacements = placements$1.filter(function(placement) {\n        return allowedAutoPlacements.indexOf(placement) >= 0;\n    });\n    if (allowedPlacements.length === 0) {\n        allowedPlacements = placements$1;\n        if (true) {\n            console.error([\n                \"Popper: The `allowedAutoPlacements` option did not allow any\",\n                \"placements. Ensure the `placement` option matches the variation\",\n                \"of the allowed placements.\",\n                'For example, \"auto\" cannot be used to allow \"bottom-start\".',\n                'Use \"auto-start\" instead.'\n            ].join(\" \"));\n        }\n    } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n    var overflows = allowedPlacements.reduce(function(acc, placement) {\n        acc[placement] = detectOverflow(state, {\n            placement: placement,\n            boundary: boundary,\n            rootBoundary: rootBoundary,\n            padding: padding\n        })[getBasePlacement(placement)];\n        return acc;\n    }, {});\n    return Object.keys(overflows).sort(function(a, b) {\n        return overflows[a] - overflows[b];\n    });\n}\nfunction getExpandedFallbackPlacements(placement) {\n    if (getBasePlacement(placement) === auto) {\n        return [];\n    }\n    var oppositePlacement = getOppositePlacement(placement);\n    return [\n        getOppositeVariationPlacement(placement),\n        oppositePlacement,\n        getOppositeVariationPlacement(oppositePlacement)\n    ];\n}\nfunction flip(_ref) {\n    var state = _ref.state, options = _ref.options, name = _ref.name;\n    if (state.modifiersData[name]._skip) {\n        return;\n    }\n    var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options.fallbackPlacements, padding = options.padding, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, _options$flipVariatio = options.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options.allowedAutoPlacements;\n    var preferredPlacement = state.options.placement;\n    var basePlacement = getBasePlacement(preferredPlacement);\n    var isBasePlacement = basePlacement === preferredPlacement;\n    var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [\n        getOppositePlacement(preferredPlacement)\n    ] : getExpandedFallbackPlacements(preferredPlacement));\n    var placements = [\n        preferredPlacement\n    ].concat(fallbackPlacements).reduce(function(acc, placement) {\n        return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\n            placement: placement,\n            boundary: boundary,\n            rootBoundary: rootBoundary,\n            padding: padding,\n            flipVariations: flipVariations,\n            allowedAutoPlacements: allowedAutoPlacements\n        }) : placement);\n    }, []);\n    var referenceRect = state.rects.reference;\n    var popperRect = state.rects.popper;\n    var checksMap = new Map();\n    var makeFallbackChecks = true;\n    var firstFittingPlacement = placements[0];\n    for(var i = 0; i < placements.length; i++){\n        var placement = placements[i];\n        var _basePlacement = getBasePlacement(placement);\n        var isStartVariation = getVariation(placement) === start;\n        var isVertical = [\n            top,\n            bottom\n        ].indexOf(_basePlacement) >= 0;\n        var len = isVertical ? \"width\" : \"height\";\n        var overflow = detectOverflow(state, {\n            placement: placement,\n            boundary: boundary,\n            rootBoundary: rootBoundary,\n            altBoundary: altBoundary,\n            padding: padding\n        });\n        var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;\n        if (referenceRect[len] > popperRect[len]) {\n            mainVariationSide = getOppositePlacement(mainVariationSide);\n        }\n        var altVariationSide = getOppositePlacement(mainVariationSide);\n        var checks = [];\n        if (checkMainAxis) {\n            checks.push(overflow[_basePlacement] <= 0);\n        }\n        if (checkAltAxis) {\n            checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n        }\n        if (checks.every(function(check) {\n            return check;\n        })) {\n            firstFittingPlacement = placement;\n            makeFallbackChecks = false;\n            break;\n        }\n        checksMap.set(placement, checks);\n    }\n    if (makeFallbackChecks) {\n        // `2` may be desired in some cases – research later\n        var numberOfChecks = flipVariations ? 3 : 1;\n        var _loop = function _loop(_i) {\n            var fittingPlacement = placements.find(function(placement) {\n                var checks = checksMap.get(placement);\n                if (checks) {\n                    return checks.slice(0, _i).every(function(check) {\n                        return check;\n                    });\n                }\n            });\n            if (fittingPlacement) {\n                firstFittingPlacement = fittingPlacement;\n                return \"break\";\n            }\n        };\n        for(var _i = numberOfChecks; _i > 0; _i--){\n            var _ret = _loop(_i);\n            if (_ret === \"break\") break;\n        }\n    }\n    if (state.placement !== firstFittingPlacement) {\n        state.modifiersData[name]._skip = true;\n        state.placement = firstFittingPlacement;\n        state.reset = true;\n    }\n} // eslint-disable-next-line import/no-unused-modules\nvar flip$1 = {\n    name: \"flip\",\n    enabled: true,\n    phase: \"main\",\n    fn: flip,\n    requiresIfExists: [\n        \"offset\"\n    ],\n    data: {\n        _skip: false\n    }\n};\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n    if (preventedOffsets === void 0) {\n        preventedOffsets = {\n            x: 0,\n            y: 0\n        };\n    }\n    return {\n        top: overflow.top - rect.height - preventedOffsets.y,\n        right: overflow.right - rect.width + preventedOffsets.x,\n        bottom: overflow.bottom - rect.height + preventedOffsets.y,\n        left: overflow.left - rect.width - preventedOffsets.x\n    };\n}\nfunction isAnySideFullyClipped(overflow) {\n    return [\n        top,\n        right,\n        bottom,\n        left\n    ].some(function(side) {\n        return overflow[side] >= 0;\n    });\n}\nfunction hide(_ref) {\n    var state = _ref.state, name = _ref.name;\n    var referenceRect = state.rects.reference;\n    var popperRect = state.rects.popper;\n    var preventedOffsets = state.modifiersData.preventOverflow;\n    var referenceOverflow = detectOverflow(state, {\n        elementContext: \"reference\"\n    });\n    var popperAltOverflow = detectOverflow(state, {\n        altBoundary: true\n    });\n    var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n    var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n    var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n    var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n    state.modifiersData[name] = {\n        referenceClippingOffsets: referenceClippingOffsets,\n        popperEscapeOffsets: popperEscapeOffsets,\n        isReferenceHidden: isReferenceHidden,\n        hasPopperEscaped: hasPopperEscaped\n    };\n    state.attributes.popper = Object.assign({}, state.attributes.popper, {\n        \"data-popper-reference-hidden\": isReferenceHidden,\n        \"data-popper-escaped\": hasPopperEscaped\n    });\n} // eslint-disable-next-line import/no-unused-modules\nvar hide$1 = {\n    name: \"hide\",\n    enabled: true,\n    phase: \"main\",\n    requiresIfExists: [\n        \"preventOverflow\"\n    ],\n    fn: hide\n};\nfunction distanceAndSkiddingToXY(placement, rects, offset) {\n    var basePlacement = getBasePlacement(placement);\n    var invertDistance = [\n        left,\n        top\n    ].indexOf(basePlacement) >= 0 ? -1 : 1;\n    var _ref = typeof offset === \"function\" ? offset(Object.assign({}, rects, {\n        placement: placement\n    })) : offset, skidding = _ref[0], distance = _ref[1];\n    skidding = skidding || 0;\n    distance = (distance || 0) * invertDistance;\n    return [\n        left,\n        right\n    ].indexOf(basePlacement) >= 0 ? {\n        x: distance,\n        y: skidding\n    } : {\n        x: skidding,\n        y: distance\n    };\n}\nfunction offset(_ref2) {\n    var state = _ref2.state, options = _ref2.options, name = _ref2.name;\n    var _options$offset = options.offset, offset = _options$offset === void 0 ? [\n        0,\n        0\n    ] : _options$offset;\n    var data = placements.reduce(function(acc, placement) {\n        acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n        return acc;\n    }, {});\n    var _data$state$placement = data[state.placement], x = _data$state$placement.x, y = _data$state$placement.y;\n    if (state.modifiersData.popperOffsets != null) {\n        state.modifiersData.popperOffsets.x += x;\n        state.modifiersData.popperOffsets.y += y;\n    }\n    state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\nvar offset$1 = {\n    name: \"offset\",\n    enabled: true,\n    phase: \"main\",\n    requires: [\n        \"popperOffsets\"\n    ],\n    fn: offset\n};\nfunction popperOffsets(_ref) {\n    var state = _ref.state, name = _ref.name;\n    // Offsets are the actual position the popper needs to have to be\n    // properly positioned near its reference element\n    // This is the most basic placement, and will be adjusted by\n    // the modifiers in the next step\n    state.modifiersData[name] = computeOffsets({\n        reference: state.rects.reference,\n        element: state.rects.popper,\n        strategy: \"absolute\",\n        placement: state.placement\n    });\n} // eslint-disable-next-line import/no-unused-modules\nvar popperOffsets$1 = {\n    name: \"popperOffsets\",\n    enabled: true,\n    phase: \"read\",\n    fn: popperOffsets,\n    data: {}\n};\nfunction getAltAxis(axis) {\n    return axis === \"x\" ? \"y\" : \"x\";\n}\nfunction preventOverflow(_ref) {\n    var state = _ref.state, options = _ref.options, name = _ref.name;\n    var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, padding = options.padding, _options$tether = options.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n    var overflow = detectOverflow(state, {\n        boundary: boundary,\n        rootBoundary: rootBoundary,\n        padding: padding,\n        altBoundary: altBoundary\n    });\n    var basePlacement = getBasePlacement(state.placement);\n    var variation = getVariation(state.placement);\n    var isBasePlacement = !variation;\n    var mainAxis = getMainAxisFromPlacement(basePlacement);\n    var altAxis = getAltAxis(mainAxis);\n    var popperOffsets = state.modifiersData.popperOffsets;\n    var referenceRect = state.rects.reference;\n    var popperRect = state.rects.popper;\n    var tetherOffsetValue = typeof tetherOffset === \"function\" ? tetherOffset(Object.assign({}, state.rects, {\n        placement: state.placement\n    })) : tetherOffset;\n    var normalizedTetherOffsetValue = typeof tetherOffsetValue === \"number\" ? {\n        mainAxis: tetherOffsetValue,\n        altAxis: tetherOffsetValue\n    } : Object.assign({\n        mainAxis: 0,\n        altAxis: 0\n    }, tetherOffsetValue);\n    var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;\n    var data = {\n        x: 0,\n        y: 0\n    };\n    if (!popperOffsets) {\n        return;\n    }\n    if (checkMainAxis) {\n        var _offsetModifierState$;\n        var mainSide = mainAxis === \"y\" ? top : left;\n        var altSide = mainAxis === \"y\" ? bottom : right;\n        var len = mainAxis === \"y\" ? \"height\" : \"width\";\n        var offset = popperOffsets[mainAxis];\n        var min$1 = offset + overflow[mainSide];\n        var max$1 = offset - overflow[altSide];\n        var additive = tether ? -popperRect[len] / 2 : 0;\n        var minLen = variation === start ? referenceRect[len] : popperRect[len];\n        var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n        // outside the reference bounds\n        var arrowElement = state.elements.arrow;\n        var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n            width: 0,\n            height: 0\n        };\n        var arrowPaddingObject = state.modifiersData[\"arrow#persistent\"] ? state.modifiersData[\"arrow#persistent\"].padding : getFreshSideObject();\n        var arrowPaddingMin = arrowPaddingObject[mainSide];\n        var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n        // to include its full size in the calculation. If the reference is small\n        // and near the edge of a boundary, the popper can overflow even if the\n        // reference is not overflowing as well (e.g. virtual elements with no\n        // width or height)\n        var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n        var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;\n        var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;\n        var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n        var clientOffset = arrowOffsetParent ? mainAxis === \"y\" ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n        var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;\n        var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\n        var tetherMax = offset + maxOffset - offsetModifierValue;\n        var preventedOffset = within(tether ? min(min$1, tetherMin) : min$1, offset, tether ? max(max$1, tetherMax) : max$1);\n        popperOffsets[mainAxis] = preventedOffset;\n        data[mainAxis] = preventedOffset - offset;\n    }\n    if (checkAltAxis) {\n        var _offsetModifierState$2;\n        var _mainSide = mainAxis === \"x\" ? top : left;\n        var _altSide = mainAxis === \"x\" ? bottom : right;\n        var _offset = popperOffsets[altAxis];\n        var _len = altAxis === \"y\" ? \"height\" : \"width\";\n        var _min = _offset + overflow[_mainSide];\n        var _max = _offset - overflow[_altSide];\n        var isOriginSide = [\n            top,\n            left\n        ].indexOf(basePlacement) !== -1;\n        var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;\n        var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;\n        var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;\n        var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);\n        popperOffsets[altAxis] = _preventedOffset;\n        data[altAxis] = _preventedOffset - _offset;\n    }\n    state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\nvar preventOverflow$1 = {\n    name: \"preventOverflow\",\n    enabled: true,\n    phase: \"main\",\n    fn: preventOverflow,\n    requiresIfExists: [\n        \"offset\"\n    ]\n};\nfunction getHTMLElementScroll(element) {\n    return {\n        scrollLeft: element.scrollLeft,\n        scrollTop: element.scrollTop\n    };\n}\nfunction getNodeScroll(node) {\n    if (node === getWindow(node) || !isHTMLElement(node)) {\n        return getWindowScroll(node);\n    } else {\n        return getHTMLElementScroll(node);\n    }\n}\nfunction isElementScaled(element) {\n    var rect = element.getBoundingClientRect();\n    var scaleX = round(rect.width) / element.offsetWidth || 1;\n    var scaleY = round(rect.height) / element.offsetHeight || 1;\n    return scaleX !== 1 || scaleY !== 1;\n} // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\nfunction getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n    if (isFixed === void 0) {\n        isFixed = false;\n    }\n    var isOffsetParentAnElement = isHTMLElement(offsetParent);\n    var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);\n    var documentElement = getDocumentElement(offsetParent);\n    var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);\n    var scroll = {\n        scrollLeft: 0,\n        scrollTop: 0\n    };\n    var offsets = {\n        x: 0,\n        y: 0\n    };\n    if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n        if (getNodeName(offsetParent) !== \"body\" || // https://github.com/popperjs/popper-core/issues/1078\n        isScrollParent(documentElement)) {\n            scroll = getNodeScroll(offsetParent);\n        }\n        if (isHTMLElement(offsetParent)) {\n            offsets = getBoundingClientRect(offsetParent, true);\n            offsets.x += offsetParent.clientLeft;\n            offsets.y += offsetParent.clientTop;\n        } else if (documentElement) {\n            offsets.x = getWindowScrollBarX(documentElement);\n        }\n    }\n    return {\n        x: rect.left + scroll.scrollLeft - offsets.x,\n        y: rect.top + scroll.scrollTop - offsets.y,\n        width: rect.width,\n        height: rect.height\n    };\n}\nfunction order(modifiers) {\n    var map = new Map();\n    var visited = new Set();\n    var result = [];\n    modifiers.forEach(function(modifier) {\n        map.set(modifier.name, modifier);\n    }); // On visiting object, check for its dependencies and visit them recursively\n    function sort(modifier) {\n        visited.add(modifier.name);\n        var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n        requires.forEach(function(dep) {\n            if (!visited.has(dep)) {\n                var depModifier = map.get(dep);\n                if (depModifier) {\n                    sort(depModifier);\n                }\n            }\n        });\n        result.push(modifier);\n    }\n    modifiers.forEach(function(modifier) {\n        if (!visited.has(modifier.name)) {\n            // check for visited object\n            sort(modifier);\n        }\n    });\n    return result;\n}\nfunction orderModifiers(modifiers) {\n    // order based on dependencies\n    var orderedModifiers = order(modifiers); // order based on phase\n    return modifierPhases.reduce(function(acc, phase) {\n        return acc.concat(orderedModifiers.filter(function(modifier) {\n            return modifier.phase === phase;\n        }));\n    }, []);\n}\nfunction debounce(fn) {\n    var pending;\n    return function() {\n        if (!pending) {\n            pending = new Promise(function(resolve) {\n                Promise.resolve().then(function() {\n                    pending = undefined;\n                    resolve(fn());\n                });\n            });\n        }\n        return pending;\n    };\n}\nfunction format(str) {\n    for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        args[_key - 1] = arguments[_key];\n    }\n    return [].concat(args).reduce(function(p, c) {\n        return p.replace(/%s/, c);\n    }, str);\n}\nvar INVALID_MODIFIER_ERROR = 'Popper: modifier \"%s\" provided an invalid %s property, expected %s but got %s';\nvar MISSING_DEPENDENCY_ERROR = 'Popper: modifier \"%s\" requires \"%s\", but \"%s\" modifier is not available';\nvar VALID_PROPERTIES = [\n    \"name\",\n    \"enabled\",\n    \"phase\",\n    \"fn\",\n    \"effect\",\n    \"requires\",\n    \"options\"\n];\nfunction validateModifiers(modifiers) {\n    modifiers.forEach(function(modifier) {\n        [].concat(Object.keys(modifier), VALID_PROPERTIES) // IE11-compatible replacement for `new Set(iterable)`\n        .filter(function(value, index, self) {\n            return self.indexOf(value) === index;\n        }).forEach(function(key) {\n            switch(key){\n                case \"name\":\n                    if (typeof modifier.name !== \"string\") {\n                        console.error(format(INVALID_MODIFIER_ERROR, String(modifier.name), '\"name\"', '\"string\"', '\"' + String(modifier.name) + '\"'));\n                    }\n                    break;\n                case \"enabled\":\n                    if (typeof modifier.enabled !== \"boolean\") {\n                        console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"enabled\"', '\"boolean\"', '\"' + String(modifier.enabled) + '\"'));\n                    }\n                    break;\n                case \"phase\":\n                    if (modifierPhases.indexOf(modifier.phase) < 0) {\n                        console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"phase\"', \"either \" + modifierPhases.join(\", \"), '\"' + String(modifier.phase) + '\"'));\n                    }\n                    break;\n                case \"fn\":\n                    if (typeof modifier.fn !== \"function\") {\n                        console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"fn\"', '\"function\"', '\"' + String(modifier.fn) + '\"'));\n                    }\n                    break;\n                case \"effect\":\n                    if (modifier.effect != null && typeof modifier.effect !== \"function\") {\n                        console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"effect\"', '\"function\"', '\"' + String(modifier.fn) + '\"'));\n                    }\n                    break;\n                case \"requires\":\n                    if (modifier.requires != null && !Array.isArray(modifier.requires)) {\n                        console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requires\"', '\"array\"', '\"' + String(modifier.requires) + '\"'));\n                    }\n                    break;\n                case \"requiresIfExists\":\n                    if (!Array.isArray(modifier.requiresIfExists)) {\n                        console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requiresIfExists\"', '\"array\"', '\"' + String(modifier.requiresIfExists) + '\"'));\n                    }\n                    break;\n                case \"options\":\n                case \"data\":\n                    break;\n                default:\n                    console.error('PopperJS: an invalid property has been provided to the \"' + modifier.name + '\" modifier, valid properties are ' + VALID_PROPERTIES.map(function(s) {\n                        return '\"' + s + '\"';\n                    }).join(\", \") + '; but \"' + key + '\" was provided.');\n            }\n            modifier.requires && modifier.requires.forEach(function(requirement) {\n                if (modifiers.find(function(mod) {\n                    return mod.name === requirement;\n                }) == null) {\n                    console.error(format(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));\n                }\n            });\n        });\n    });\n}\nfunction uniqueBy(arr, fn) {\n    var identifiers = new Set();\n    return arr.filter(function(item) {\n        var identifier = fn(item);\n        if (!identifiers.has(identifier)) {\n            identifiers.add(identifier);\n            return true;\n        }\n    });\n}\nfunction mergeByName(modifiers) {\n    var merged = modifiers.reduce(function(merged, current) {\n        var existing = merged[current.name];\n        merged[current.name] = existing ? Object.assign({}, existing, current, {\n            options: Object.assign({}, existing.options, current.options),\n            data: Object.assign({}, existing.data, current.data)\n        }) : current;\n        return merged;\n    }, {}); // IE11 does not support Object.values\n    return Object.keys(merged).map(function(key) {\n        return merged[key];\n    });\n}\nvar INVALID_ELEMENT_ERROR = \"Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.\";\nvar INFINITE_LOOP_ERROR = \"Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.\";\nvar DEFAULT_OPTIONS = {\n    placement: \"bottom\",\n    modifiers: [],\n    strategy: \"absolute\"\n};\nfunction areValidElements() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    return !args.some(function(element) {\n        return !(element && typeof element.getBoundingClientRect === \"function\");\n    });\n}\nfunction popperGenerator(generatorOptions) {\n    if (generatorOptions === void 0) {\n        generatorOptions = {};\n    }\n    var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n    return function createPopper(reference, popper, options) {\n        if (options === void 0) {\n            options = defaultOptions;\n        }\n        var state = {\n            placement: \"bottom\",\n            orderedModifiers: [],\n            options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),\n            modifiersData: {},\n            elements: {\n                reference: reference,\n                popper: popper\n            },\n            attributes: {},\n            styles: {}\n        };\n        var effectCleanupFns = [];\n        var isDestroyed = false;\n        var instance = {\n            state: state,\n            setOptions: function setOptions(setOptionsAction) {\n                var options = typeof setOptionsAction === \"function\" ? setOptionsAction(state.options) : setOptionsAction;\n                cleanupModifierEffects();\n                state.options = Object.assign({}, defaultOptions, state.options, options);\n                state.scrollParents = {\n                    reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\n                    popper: listScrollParents(popper)\n                }; // Orders the modifiers based on their dependencies and `phase`\n                // properties\n                var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n                state.orderedModifiers = orderedModifiers.filter(function(m) {\n                    return m.enabled;\n                }); // Validate the provided modifiers so that the consumer will get warned\n                // if one of the modifiers is invalid for any reason\n                if (true) {\n                    var modifiers = uniqueBy([].concat(orderedModifiers, state.options.modifiers), function(_ref) {\n                        var name = _ref.name;\n                        return name;\n                    });\n                    validateModifiers(modifiers);\n                    if (getBasePlacement(state.options.placement) === auto) {\n                        var flipModifier = state.orderedModifiers.find(function(_ref2) {\n                            var name = _ref2.name;\n                            return name === \"flip\";\n                        });\n                        if (!flipModifier) {\n                            console.error([\n                                'Popper: \"auto\" placements require the \"flip\" modifier be',\n                                \"present and enabled to work.\"\n                            ].join(\" \"));\n                        }\n                    }\n                    var _getComputedStyle = getComputedStyle(popper), marginTop = _getComputedStyle.marginTop, marginRight = _getComputedStyle.marginRight, marginBottom = _getComputedStyle.marginBottom, marginLeft = _getComputedStyle.marginLeft; // We no longer take into account `margins` on the popper, and it can\n                    // cause bugs with positioning, so we'll warn the consumer\n                    if ([\n                        marginTop,\n                        marginRight,\n                        marginBottom,\n                        marginLeft\n                    ].some(function(margin) {\n                        return parseFloat(margin);\n                    })) {\n                        console.warn([\n                            'Popper: CSS \"margin\" styles cannot be used to apply padding',\n                            \"between the popper and its reference element or boundary.\",\n                            \"To replicate margin, use the `offset` modifier, as well as\",\n                            \"the `padding` option in the `preventOverflow` and `flip`\",\n                            \"modifiers.\"\n                        ].join(\" \"));\n                    }\n                }\n                runModifierEffects();\n                return instance.update();\n            },\n            // Sync update – it will always be executed, even if not necessary. This\n            // is useful for low frequency updates where sync behavior simplifies the\n            // logic.\n            // For high frequency updates (e.g. `resize` and `scroll` events), always\n            // prefer the async Popper#update method\n            forceUpdate: function forceUpdate() {\n                if (isDestroyed) {\n                    return;\n                }\n                var _state$elements = state.elements, reference = _state$elements.reference, popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n                // anymore\n                if (!areValidElements(reference, popper)) {\n                    if (true) {\n                        console.error(INVALID_ELEMENT_ERROR);\n                    }\n                    return;\n                } // Store the reference and popper rects to be read by modifiers\n                state.rects = {\n                    reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === \"fixed\"),\n                    popper: getLayoutRect(popper)\n                }; // Modifiers have the ability to reset the current update cycle. The\n                // most common use case for this is the `flip` modifier changing the\n                // placement, which then needs to re-run all the modifiers, because the\n                // logic was previously ran for the previous placement and is therefore\n                // stale/incorrect\n                state.reset = false;\n                state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n                // is filled with the initial data specified by the modifier. This means\n                // it doesn't persist and is fresh on each update.\n                // To ensure persistent data, use `${name}#persistent`\n                state.orderedModifiers.forEach(function(modifier) {\n                    return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n                });\n                var __debug_loops__ = 0;\n                for(var index = 0; index < state.orderedModifiers.length; index++){\n                    if (true) {\n                        __debug_loops__ += 1;\n                        if (__debug_loops__ > 100) {\n                            console.error(INFINITE_LOOP_ERROR);\n                            break;\n                        }\n                    }\n                    if (state.reset === true) {\n                        state.reset = false;\n                        index = -1;\n                        continue;\n                    }\n                    var _state$orderedModifie = state.orderedModifiers[index], fn = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;\n                    if (typeof fn === \"function\") {\n                        state = fn({\n                            state: state,\n                            options: _options,\n                            name: name,\n                            instance: instance\n                        }) || state;\n                    }\n                }\n            },\n            // Async and optimistically optimized update – it will not be executed if\n            // not necessary (debounced to run at most once-per-tick)\n            update: debounce(function() {\n                return new Promise(function(resolve) {\n                    instance.forceUpdate();\n                    resolve(state);\n                });\n            }),\n            destroy: function destroy() {\n                cleanupModifierEffects();\n                isDestroyed = true;\n            }\n        };\n        if (!areValidElements(reference, popper)) {\n            if (true) {\n                console.error(INVALID_ELEMENT_ERROR);\n            }\n            return instance;\n        }\n        instance.setOptions(options).then(function(state) {\n            if (!isDestroyed && options.onFirstUpdate) {\n                options.onFirstUpdate(state);\n            }\n        }); // Modifiers have the ability to execute arbitrary code before the first\n        // update cycle runs. They will be executed in the same order as the update\n        // cycle. This is useful when a modifier adds some persistent data that\n        // other modifiers need to use, but the modifier is run after the dependent\n        // one.\n        function runModifierEffects() {\n            state.orderedModifiers.forEach(function(_ref3) {\n                var name = _ref3.name, _ref3$options = _ref3.options, options = _ref3$options === void 0 ? {} : _ref3$options, effect = _ref3.effect;\n                if (typeof effect === \"function\") {\n                    var cleanupFn = effect({\n                        state: state,\n                        name: name,\n                        instance: instance,\n                        options: options\n                    });\n                    var noopFn = function noopFn() {};\n                    effectCleanupFns.push(cleanupFn || noopFn);\n                }\n            });\n        }\n        function cleanupModifierEffects() {\n            effectCleanupFns.forEach(function(fn) {\n                return fn();\n            });\n            effectCleanupFns = [];\n        }\n        return instance;\n    };\n}\n// For the common JS build we will turn this file into a bundle with no imports.\n// This is b/c the Popper lib is all esm files, and would break in a common js only environment\nconst createPopper = popperGenerator({\n    defaultModifiers: [\n        hide$1,\n        popperOffsets$1,\n        computeStyles$1,\n        eventListeners,\n        offset$1,\n        flip$1,\n        preventOverflow$1,\n        arrow$1\n    ]\n});\nexports.createPopper = createPopper;\nexports.placements = placements;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/popper.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/useClickOutside.js":
/*!*********************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/useClickOutside.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = exports.getRefTarget = void 0;\nvar _contains = _interopRequireDefault(__webpack_require__(/*! dom-helpers/contains */ \"(ssr)/./node_modules/dom-helpers/esm/contains.js\"));\nvar _listen = _interopRequireDefault(__webpack_require__(/*! dom-helpers/listen */ \"(ssr)/./node_modules/dom-helpers/esm/listen.js\"));\nvar _ownerDocument = _interopRequireDefault(__webpack_require__(/*! dom-helpers/ownerDocument */ \"(ssr)/./node_modules/dom-helpers/esm/ownerDocument.js\"));\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _useEventCallback = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useEventCallback */ \"(ssr)/./node_modules/@restart/hooks/cjs/useEventCallback.js\"));\nvar _warning = _interopRequireDefault(__webpack_require__(/*! warning */ \"(ssr)/./node_modules/warning/warning.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst noop = ()=>{};\nfunction isLeftClickEvent(event) {\n    return event.button === 0;\n}\nfunction isModifiedEvent(event) {\n    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nconst getRefTarget = (ref)=>ref && (\"current\" in ref ? ref.current : ref);\nexports.getRefTarget = getRefTarget;\nconst InitialTriggerEvents = {\n    click: \"mousedown\",\n    mouseup: \"mousedown\",\n    pointerup: \"pointerdown\"\n};\n/**\n * The `useClickOutside` hook registers your callback on the document that fires\n * when a pointer event is registered outside of the provided ref or element.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onClickOutside\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */ function useClickOutside(ref, onClickOutside = noop, { disabled, clickTrigger = \"click\" } = {}) {\n    const preventMouseClickOutsideRef = (0, _react.useRef)(false);\n    const waitingForTrigger = (0, _react.useRef)(false);\n    const handleMouseCapture = (0, _react.useCallback)((e)=>{\n        const currentTarget = getRefTarget(ref);\n        (0, _warning.default)(!!currentTarget, \"ClickOutside captured a close event but does not have a ref to compare it to. \" + \"useClickOutside(), should be passed a ref that resolves to a DOM node\");\n        preventMouseClickOutsideRef.current = !currentTarget || isModifiedEvent(e) || !isLeftClickEvent(e) || !!(0, _contains.default)(currentTarget, e.target) || waitingForTrigger.current;\n        waitingForTrigger.current = false;\n    }, [\n        ref\n    ]);\n    const handleInitialMouse = (0, _useEventCallback.default)((e)=>{\n        const currentTarget = getRefTarget(ref);\n        if (currentTarget && (0, _contains.default)(currentTarget, e.target)) {\n            waitingForTrigger.current = true;\n        }\n    });\n    const handleMouse = (0, _useEventCallback.default)((e)=>{\n        if (!preventMouseClickOutsideRef.current) {\n            onClickOutside(e);\n        }\n    });\n    (0, _react.useEffect)(()=>{\n        var _ownerWindow$event, _ownerWindow$parent;\n        if (disabled || ref == null) return undefined;\n        const doc = (0, _ownerDocument.default)(getRefTarget(ref));\n        const ownerWindow = doc.defaultView || window;\n        // Store the current event to avoid triggering handlers immediately\n        // For things rendered in an iframe, the event might originate on the parent window\n        // so we should fall back to that global event if the local one doesn't exist\n        // https://github.com/facebook/react/issues/20074\n        let currentEvent = (_ownerWindow$event = ownerWindow.event) != null ? _ownerWindow$event : (_ownerWindow$parent = ownerWindow.parent) == null ? void 0 : _ownerWindow$parent.event;\n        let removeInitialTriggerListener = null;\n        if (InitialTriggerEvents[clickTrigger]) {\n            removeInitialTriggerListener = (0, _listen.default)(doc, InitialTriggerEvents[clickTrigger], handleInitialMouse, true);\n        }\n        // Use capture for this listener so it fires before React's listener, to\n        // avoid false positives in the contains() check below if the target DOM\n        // element is removed in the React mouse callback.\n        const removeMouseCaptureListener = (0, _listen.default)(doc, clickTrigger, handleMouseCapture, true);\n        const removeMouseListener = (0, _listen.default)(doc, clickTrigger, (e)=>{\n            // skip if this event is the same as the one running when we added the handlers\n            if (e === currentEvent) {\n                currentEvent = undefined;\n                return;\n            }\n            handleMouse(e);\n        });\n        let mobileSafariHackListeners = [];\n        if (\"ontouchstart\" in doc.documentElement) {\n            mobileSafariHackListeners = [].slice.call(doc.body.children).map((el)=>(0, _listen.default)(el, \"mousemove\", noop));\n        }\n        return ()=>{\n            removeInitialTriggerListener == null ? void 0 : removeInitialTriggerListener();\n            removeMouseCaptureListener();\n            removeMouseListener();\n            mobileSafariHackListeners.forEach((remove)=>remove());\n        };\n    }, [\n        ref,\n        disabled,\n        clickTrigger,\n        handleMouseCapture,\n        handleInitialMouse,\n        handleMouse\n    ]);\n}\nvar _default = useClickOutside;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/useClickOutside.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/usePopper.js":
/*!***************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/usePopper.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _dequal = __webpack_require__(/*! dequal */ \"(ssr)/./node_modules/dequal/dist/index.js\");\nvar _useSafeState = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useSafeState */ \"(ssr)/./node_modules/@restart/hooks/cjs/useSafeState.js\"));\nvar _popper = __webpack_require__(/*! ./popper */ \"(ssr)/./node_modules/@restart/ui/cjs/popper.js\");\nconst _excluded = [\n    \"enabled\",\n    \"placement\",\n    \"strategy\",\n    \"modifiers\"\n];\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nconst disabledApplyStylesModifier = {\n    name: \"applyStyles\",\n    enabled: false,\n    phase: \"afterWrite\",\n    fn: ()=>undefined\n};\n// until docjs supports type exports...\nconst ariaDescribedByModifier = {\n    name: \"ariaDescribedBy\",\n    enabled: true,\n    phase: \"afterWrite\",\n    effect: ({ state })=>()=>{\n            const { reference, popper } = state.elements;\n            if (\"removeAttribute\" in reference) {\n                const ids = (reference.getAttribute(\"aria-describedby\") || \"\").split(\",\").filter((id)=>id.trim() !== popper.id);\n                if (!ids.length) reference.removeAttribute(\"aria-describedby\");\n                else reference.setAttribute(\"aria-describedby\", ids.join(\",\"));\n            }\n        },\n    fn: ({ state })=>{\n        var _popper$getAttribute;\n        const { popper, reference } = state.elements;\n        const role = (_popper$getAttribute = popper.getAttribute(\"role\")) == null ? void 0 : _popper$getAttribute.toLowerCase();\n        if (popper.id && role === \"tooltip\" && \"setAttribute\" in reference) {\n            const ids = reference.getAttribute(\"aria-describedby\");\n            if (ids && ids.split(\",\").indexOf(popper.id) !== -1) {\n                return;\n            }\n            reference.setAttribute(\"aria-describedby\", ids ? `${ids},${popper.id}` : popper.id);\n        }\n    }\n};\nconst EMPTY_MODIFIERS = [];\n/**\n * Position an element relative some reference element using Popper.js\n *\n * @param referenceElement\n * @param popperElement\n * @param {object}      options\n * @param {object=}     options.modifiers Popper.js modifiers\n * @param {boolean=}    options.enabled toggle the popper functionality on/off\n * @param {string=}     options.placement The popper element placement relative to the reference element\n * @param {string=}     options.strategy the positioning strategy\n * @param {function=}   options.onCreate called when the popper is created\n * @param {function=}   options.onUpdate called when the popper is updated\n *\n * @returns {UsePopperState} The popper state\n */ function usePopper(referenceElement, popperElement, _ref = {}) {\n    let { enabled = true, placement = \"bottom\", strategy = \"absolute\", modifiers = EMPTY_MODIFIERS } = _ref, config = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const prevModifiers = (0, _react.useRef)(modifiers);\n    const popperInstanceRef = (0, _react.useRef)();\n    const update = (0, _react.useCallback)(()=>{\n        var _popperInstanceRef$cu;\n        (_popperInstanceRef$cu = popperInstanceRef.current) == null ? void 0 : _popperInstanceRef$cu.update();\n    }, []);\n    const forceUpdate = (0, _react.useCallback)(()=>{\n        var _popperInstanceRef$cu2;\n        (_popperInstanceRef$cu2 = popperInstanceRef.current) == null ? void 0 : _popperInstanceRef$cu2.forceUpdate();\n    }, []);\n    const [popperState, setState] = (0, _useSafeState.default)((0, _react.useState)({\n        placement,\n        update,\n        forceUpdate,\n        attributes: {},\n        styles: {\n            popper: {},\n            arrow: {}\n        }\n    }));\n    const updateModifier = (0, _react.useMemo)(()=>({\n            name: \"updateStateModifier\",\n            enabled: true,\n            phase: \"write\",\n            requires: [\n                \"computeStyles\"\n            ],\n            fn: ({ state })=>{\n                const styles = {};\n                const attributes = {};\n                Object.keys(state.elements).forEach((element)=>{\n                    styles[element] = state.styles[element];\n                    attributes[element] = state.attributes[element];\n                });\n                setState({\n                    state,\n                    styles,\n                    attributes,\n                    update,\n                    forceUpdate,\n                    placement: state.placement\n                });\n            }\n        }), [\n        update,\n        forceUpdate,\n        setState\n    ]);\n    const nextModifiers = (0, _react.useMemo)(()=>{\n        if (!(0, _dequal.dequal)(prevModifiers.current, modifiers)) {\n            prevModifiers.current = modifiers;\n        }\n        return prevModifiers.current;\n    }, [\n        modifiers\n    ]);\n    (0, _react.useEffect)(()=>{\n        if (!popperInstanceRef.current || !enabled) return;\n        popperInstanceRef.current.setOptions({\n            placement,\n            strategy,\n            modifiers: [\n                ...nextModifiers,\n                updateModifier,\n                disabledApplyStylesModifier\n            ]\n        });\n    }, [\n        strategy,\n        placement,\n        updateModifier,\n        enabled,\n        nextModifiers\n    ]);\n    (0, _react.useEffect)(()=>{\n        if (!enabled || referenceElement == null || popperElement == null) {\n            return undefined;\n        }\n        popperInstanceRef.current = (0, _popper.createPopper)(referenceElement, popperElement, Object.assign({}, config, {\n            placement,\n            strategy,\n            modifiers: [\n                ...nextModifiers,\n                ariaDescribedByModifier,\n                updateModifier\n            ]\n        }));\n        return ()=>{\n            if (popperInstanceRef.current != null) {\n                popperInstanceRef.current.destroy();\n                popperInstanceRef.current = undefined;\n                setState((s)=>Object.assign({}, s, {\n                        attributes: {},\n                        styles: {\n                            popper: {}\n                        }\n                    }));\n            }\n        };\n    // This is only run once to _create_ the popper\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        enabled,\n        referenceElement,\n        popperElement\n    ]);\n    return popperState;\n}\nvar _default = usePopper;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/usePopper.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/useRTGTransitionProps.js":
/*!***************************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/useRTGTransitionProps.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useRTGTransitionProps;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _useMergedRefs = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useMergedRefs */ \"(ssr)/./node_modules/@restart/hooks/cjs/useMergedRefs.js\"));\nvar _utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@restart/ui/cjs/utils.js\");\nconst _excluded = [\n    \"onEnter\",\n    \"onEntering\",\n    \"onEntered\",\n    \"onExit\",\n    \"onExiting\",\n    \"onExited\",\n    \"addEndListener\",\n    \"children\"\n];\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\n/**\n * Normalizes RTG transition callbacks with nodeRef to better support\n * strict mode.\n *\n * @param props Transition props.\n * @returns Normalized transition props.\n */ function useRTGTransitionProps(_ref) {\n    let { onEnter, onEntering, onEntered, onExit, onExiting, onExited, addEndListener, children } = _ref, props = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const { major } = (0, _utils.getReactVersion)();\n    const childRef = major >= 19 ? children.props.ref : children.ref;\n    const nodeRef = (0, _react.useRef)(null);\n    const mergedRef = (0, _useMergedRefs.default)(nodeRef, typeof children === \"function\" ? null : childRef);\n    const normalize = (callback)=>(param)=>{\n            if (callback && nodeRef.current) {\n                callback(nodeRef.current, param);\n            }\n        };\n    /* eslint-disable react-hooks/exhaustive-deps */ const handleEnter = (0, _react.useCallback)(normalize(onEnter), [\n        onEnter\n    ]);\n    const handleEntering = (0, _react.useCallback)(normalize(onEntering), [\n        onEntering\n    ]);\n    const handleEntered = (0, _react.useCallback)(normalize(onEntered), [\n        onEntered\n    ]);\n    const handleExit = (0, _react.useCallback)(normalize(onExit), [\n        onExit\n    ]);\n    const handleExiting = (0, _react.useCallback)(normalize(onExiting), [\n        onExiting\n    ]);\n    const handleExited = (0, _react.useCallback)(normalize(onExited), [\n        onExited\n    ]);\n    const handleAddEndListener = (0, _react.useCallback)(normalize(addEndListener), [\n        addEndListener\n    ]);\n    /* eslint-enable react-hooks/exhaustive-deps */ return Object.assign({}, props, {\n        nodeRef\n    }, onEnter && {\n        onEnter: handleEnter\n    }, onEntering && {\n        onEntering: handleEntering\n    }, onEntered && {\n        onEntered: handleEntered\n    }, onExit && {\n        onExit: handleExit\n    }, onExiting && {\n        onExiting: handleExiting\n    }, onExited && {\n        onExited: handleExited\n    }, addEndListener && {\n        addEndListener: handleAddEndListener\n    }, {\n        children: typeof children === \"function\" ? (status, innerProps)=>// TODO: Types for RTG missing innerProps, so need to cast.\n            children(status, Object.assign({}, innerProps, {\n                ref: mergedRef\n            })) : /*#__PURE__*/ (0, _react.cloneElement)(children, {\n            ref: mergedRef\n        })\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/useRTGTransitionProps.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/useRootClose.js":
/*!******************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/useRootClose.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _listen = _interopRequireDefault(__webpack_require__(/*! dom-helpers/listen */ \"(ssr)/./node_modules/dom-helpers/esm/listen.js\"));\nvar _ownerDocument = _interopRequireDefault(__webpack_require__(/*! dom-helpers/ownerDocument */ \"(ssr)/./node_modules/dom-helpers/esm/ownerDocument.js\"));\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _useEventCallback = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useEventCallback */ \"(ssr)/./node_modules/@restart/hooks/cjs/useEventCallback.js\"));\nvar _useClickOutside = _interopRequireWildcard(__webpack_require__(/*! ./useClickOutside */ \"(ssr)/./node_modules/@restart/ui/cjs/useClickOutside.js\"));\nvar _utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@restart/ui/cjs/utils.js\");\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst noop = ()=>{};\n/**\n * The `useRootClose` hook registers your callback on the document\n * when rendered. Powers the `<Overlay/>` component. This is used achieve modal\n * style behavior where your callback is triggered when the user tries to\n * interact with the rest of the document or hits the `esc` key.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onRootClose\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */ function useRootClose(ref, onRootClose, { disabled, clickTrigger } = {}) {\n    const onClose = onRootClose || noop;\n    (0, _useClickOutside.default)(ref, onClose, {\n        disabled,\n        clickTrigger\n    });\n    const handleKeyUp = (0, _useEventCallback.default)((e)=>{\n        if ((0, _utils.isEscKey)(e)) {\n            onClose(e);\n        }\n    });\n    (0, _react.useEffect)(()=>{\n        if (disabled || ref == null) return undefined;\n        const doc = (0, _ownerDocument.default)((0, _useClickOutside.getRefTarget)(ref));\n        // Store the current event to avoid triggering handlers immediately\n        // https://github.com/facebook/react/issues/20074\n        let currentEvent = (doc.defaultView || window).event;\n        const removeKeyupListener = (0, _listen.default)(doc, \"keyup\", (e)=>{\n            // skip if this event is the same as the one running when we added the handlers\n            if (e === currentEvent) {\n                currentEvent = undefined;\n                return;\n            }\n            handleKeyUp(e);\n        });\n        return ()=>{\n            removeKeyupListener();\n        };\n    }, [\n        ref,\n        disabled,\n        handleKeyUp\n    ]);\n}\nvar _default = useRootClose;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/useRootClose.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/useWaitForDOMRef.js":
/*!**********************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/useWaitForDOMRef.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useWaitForDOMRef;\nexports.resolveContainerRef = void 0;\nvar _ownerDocument = _interopRequireDefault(__webpack_require__(/*! dom-helpers/ownerDocument */ \"(ssr)/./node_modules/dom-helpers/esm/ownerDocument.js\"));\nvar _canUseDOM = _interopRequireDefault(__webpack_require__(/*! dom-helpers/canUseDOM */ \"(ssr)/./node_modules/dom-helpers/esm/canUseDOM.js\"));\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _useWindow = _interopRequireDefault(__webpack_require__(/*! ./useWindow */ \"(ssr)/./node_modules/@restart/ui/cjs/useWindow.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst resolveContainerRef = (ref, document)=>{\n    if (!_canUseDOM.default) return null;\n    if (ref == null) return (document || (0, _ownerDocument.default)()).body;\n    if (typeof ref === \"function\") ref = ref();\n    if (ref && \"current\" in ref) ref = ref.current;\n    if (ref && (\"nodeType\" in ref || ref.getBoundingClientRect)) return ref;\n    return null;\n};\nexports.resolveContainerRef = resolveContainerRef;\nfunction useWaitForDOMRef(ref, onResolved) {\n    const window = (0, _useWindow.default)();\n    const [resolvedRef, setRef] = (0, _react.useState)(()=>resolveContainerRef(ref, window == null ? void 0 : window.document));\n    if (!resolvedRef) {\n        const earlyRef = resolveContainerRef(ref);\n        if (earlyRef) setRef(earlyRef);\n    }\n    (0, _react.useEffect)(()=>{\n        if (onResolved && resolvedRef) {\n            onResolved(resolvedRef);\n        }\n    }, [\n        onResolved,\n        resolvedRef\n    ]);\n    (0, _react.useEffect)(()=>{\n        const nextRef = resolveContainerRef(ref);\n        if (nextRef !== resolvedRef) {\n            setRef(nextRef);\n        }\n    }, [\n        ref,\n        resolvedRef\n    ]);\n    return resolvedRef;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL3VzZVdhaXRGb3JET01SZWYuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGtCQUFlLEdBQUdHO0FBQ2xCSCwyQkFBMkIsR0FBRyxLQUFLO0FBQ25DLElBQUlLLGlCQUFpQkMsdUJBQXVCQyxtQkFBT0EsQ0FBQyx3RkFBMkI7QUFDL0UsSUFBSUMsYUFBYUYsdUJBQXVCQyxtQkFBT0EsQ0FBQyxnRkFBdUI7QUFDdkUsSUFBSUUsU0FBU0YsbUJBQU9BLENBQUMsd0dBQU87QUFDNUIsSUFBSUcsYUFBYUosdUJBQXVCQyxtQkFBT0EsQ0FBQyxzRUFBYTtBQUM3RCxTQUFTRCx1QkFBdUJLLEdBQUc7SUFBSSxPQUFPQSxPQUFPQSxJQUFJVixVQUFVLEdBQUdVLE1BQU07UUFBRVQsU0FBU1M7SUFBSTtBQUFHO0FBQzlGLE1BQU1QLHNCQUFzQixDQUFDUSxLQUFLQztJQUNoQyxJQUFJLENBQUNMLFdBQVdOLE9BQU8sRUFBRSxPQUFPO0lBQ2hDLElBQUlVLE9BQU8sTUFBTSxPQUFPLENBQUNDLFlBQVksQ0FBQyxHQUFHUixlQUFlSCxPQUFPLEdBQUUsRUFBR1ksSUFBSTtJQUN4RSxJQUFJLE9BQU9GLFFBQVEsWUFBWUEsTUFBTUE7SUFDckMsSUFBSUEsT0FBTyxhQUFhQSxLQUFLQSxNQUFNQSxJQUFJRyxPQUFPO0lBQzlDLElBQUlILE9BQVEsZUFBY0EsT0FBT0EsSUFBSUkscUJBQXFCLEdBQUcsT0FBT0o7SUFDcEUsT0FBTztBQUNUO0FBQ0FaLDJCQUEyQixHQUFHSTtBQUM5QixTQUFTRCxpQkFBaUJTLEdBQUcsRUFBRUssVUFBVTtJQUN2QyxNQUFNQyxTQUFTLENBQUMsR0FBR1IsV0FBV1IsT0FBTztJQUNyQyxNQUFNLENBQUNpQixhQUFhQyxPQUFPLEdBQUcsQ0FBQyxHQUFHWCxPQUFPWSxRQUFRLEVBQUUsSUFBTWpCLG9CQUFvQlEsS0FBS00sVUFBVSxPQUFPLEtBQUssSUFBSUEsT0FBT0wsUUFBUTtJQUMzSCxJQUFJLENBQUNNLGFBQWE7UUFDaEIsTUFBTUcsV0FBV2xCLG9CQUFvQlE7UUFDckMsSUFBSVUsVUFBVUYsT0FBT0U7SUFDdkI7SUFDQyxJQUFHYixPQUFPYyxTQUFTLEVBQUU7UUFDcEIsSUFBSU4sY0FBY0UsYUFBYTtZQUM3QkYsV0FBV0U7UUFDYjtJQUNGLEdBQUc7UUFBQ0Y7UUFBWUU7S0FBWTtJQUMzQixJQUFHVixPQUFPYyxTQUFTLEVBQUU7UUFDcEIsTUFBTUMsVUFBVXBCLG9CQUFvQlE7UUFDcEMsSUFBSVksWUFBWUwsYUFBYTtZQUMzQkMsT0FBT0k7UUFDVDtJQUNGLEdBQUc7UUFBQ1o7UUFBS087S0FBWTtJQUNyQixPQUFPQTtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC91aS9janMvdXNlV2FpdEZvckRPTVJlZi5qcz8wODBkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdXNlV2FpdEZvckRPTVJlZjtcbmV4cG9ydHMucmVzb2x2ZUNvbnRhaW5lclJlZiA9IHZvaWQgMDtcbnZhciBfb3duZXJEb2N1bWVudCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcImRvbS1oZWxwZXJzL293bmVyRG9jdW1lbnRcIikpO1xudmFyIF9jYW5Vc2VET00gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJkb20taGVscGVycy9jYW5Vc2VET01cIikpO1xudmFyIF9yZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbnZhciBfdXNlV2luZG93ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91c2VXaW5kb3dcIikpO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cbmNvbnN0IHJlc29sdmVDb250YWluZXJSZWYgPSAocmVmLCBkb2N1bWVudCkgPT4ge1xuICBpZiAoIV9jYW5Vc2VET00uZGVmYXVsdCkgcmV0dXJuIG51bGw7XG4gIGlmIChyZWYgPT0gbnVsbCkgcmV0dXJuIChkb2N1bWVudCB8fCAoMCwgX293bmVyRG9jdW1lbnQuZGVmYXVsdCkoKSkuYm9keTtcbiAgaWYgKHR5cGVvZiByZWYgPT09ICdmdW5jdGlvbicpIHJlZiA9IHJlZigpO1xuICBpZiAocmVmICYmICdjdXJyZW50JyBpbiByZWYpIHJlZiA9IHJlZi5jdXJyZW50O1xuICBpZiAocmVmICYmICgnbm9kZVR5cGUnIGluIHJlZiB8fCByZWYuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KSkgcmV0dXJuIHJlZjtcbiAgcmV0dXJuIG51bGw7XG59O1xuZXhwb3J0cy5yZXNvbHZlQ29udGFpbmVyUmVmID0gcmVzb2x2ZUNvbnRhaW5lclJlZjtcbmZ1bmN0aW9uIHVzZVdhaXRGb3JET01SZWYocmVmLCBvblJlc29sdmVkKSB7XG4gIGNvbnN0IHdpbmRvdyA9ICgwLCBfdXNlV2luZG93LmRlZmF1bHQpKCk7XG4gIGNvbnN0IFtyZXNvbHZlZFJlZiwgc2V0UmVmXSA9ICgwLCBfcmVhY3QudXNlU3RhdGUpKCgpID0+IHJlc29sdmVDb250YWluZXJSZWYocmVmLCB3aW5kb3cgPT0gbnVsbCA/IHZvaWQgMCA6IHdpbmRvdy5kb2N1bWVudCkpO1xuICBpZiAoIXJlc29sdmVkUmVmKSB7XG4gICAgY29uc3QgZWFybHlSZWYgPSByZXNvbHZlQ29udGFpbmVyUmVmKHJlZik7XG4gICAgaWYgKGVhcmx5UmVmKSBzZXRSZWYoZWFybHlSZWYpO1xuICB9XG4gICgwLCBfcmVhY3QudXNlRWZmZWN0KSgoKSA9PiB7XG4gICAgaWYgKG9uUmVzb2x2ZWQgJiYgcmVzb2x2ZWRSZWYpIHtcbiAgICAgIG9uUmVzb2x2ZWQocmVzb2x2ZWRSZWYpO1xuICAgIH1cbiAgfSwgW29uUmVzb2x2ZWQsIHJlc29sdmVkUmVmXSk7XG4gICgwLCBfcmVhY3QudXNlRWZmZWN0KSgoKSA9PiB7XG4gICAgY29uc3QgbmV4dFJlZiA9IHJlc29sdmVDb250YWluZXJSZWYocmVmKTtcbiAgICBpZiAobmV4dFJlZiAhPT0gcmVzb2x2ZWRSZWYpIHtcbiAgICAgIHNldFJlZihuZXh0UmVmKTtcbiAgICB9XG4gIH0sIFtyZWYsIHJlc29sdmVkUmVmXSk7XG4gIHJldHVybiByZXNvbHZlZFJlZjtcbn0iXSwibmFtZXMiOlsiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidXNlV2FpdEZvckRPTVJlZiIsInJlc29sdmVDb250YWluZXJSZWYiLCJfb3duZXJEb2N1bWVudCIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2NhblVzZURPTSIsIl9yZWFjdCIsIl91c2VXaW5kb3ciLCJvYmoiLCJyZWYiLCJkb2N1bWVudCIsImJvZHkiLCJjdXJyZW50IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0Iiwib25SZXNvbHZlZCIsIndpbmRvdyIsInJlc29sdmVkUmVmIiwic2V0UmVmIiwidXNlU3RhdGUiLCJlYXJseVJlZiIsInVzZUVmZmVjdCIsIm5leHRSZWYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/useWaitForDOMRef.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/useWindow.js":
/*!***************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/useWindow.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useWindow;\nexports.WindowProvider = void 0;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _canUseDOM = _interopRequireDefault(__webpack_require__(/*! dom-helpers/canUseDOM */ \"(ssr)/./node_modules/dom-helpers/esm/canUseDOM.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst Context = /*#__PURE__*/ (0, _react.createContext)(_canUseDOM.default ? window : undefined);\nconst WindowProvider = Context.Provider;\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */ exports.WindowProvider = WindowProvider;\nfunction useWindow() {\n    return (0, _react.useContext)(Context);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL3VzZVdpbmRvdy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSxrQkFBa0IsR0FBRztBQUNyQkEsa0JBQWUsR0FBR0c7QUFDbEJILHNCQUFzQixHQUFHLEtBQUs7QUFDOUIsSUFBSUssU0FBU0MsbUJBQU9BLENBQUMsd0dBQU87QUFDNUIsSUFBSUMsYUFBYUMsdUJBQXVCRixtQkFBT0EsQ0FBQyxnRkFBdUI7QUFDdkUsU0FBU0UsdUJBQXVCQyxHQUFHO0lBQUksT0FBT0EsT0FBT0EsSUFBSVIsVUFBVSxHQUFHUSxNQUFNO1FBQUVQLFNBQVNPO0lBQUk7QUFBRztBQUM5RixNQUFNQyxVQUF1QixXQUFGLEdBQUcsSUFBR0wsT0FBT00sYUFBYSxFQUFFSixXQUFXTCxPQUFPLEdBQUdVLFNBQVNDO0FBQ3JGLE1BQU1ULGlCQUFpQk0sUUFBUUksUUFBUTtBQUV2Qzs7Ozs7Q0FLQyxHQUNEZCxzQkFBc0IsR0FBR0k7QUFDekIsU0FBU0Q7SUFDUCxPQUFPLENBQUMsR0FBR0UsT0FBT1UsVUFBVSxFQUFFTDtBQUNoQyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL3VzZVdpbmRvdy5qcz83NjEzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdXNlV2luZG93O1xuZXhwb3J0cy5XaW5kb3dQcm92aWRlciA9IHZvaWQgMDtcbnZhciBfcmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG52YXIgX2NhblVzZURPTSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcImRvbS1oZWxwZXJzL2NhblVzZURPTVwiKSk7XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuY29uc3QgQ29udGV4dCA9IC8qI19fUFVSRV9fKi8oMCwgX3JlYWN0LmNyZWF0ZUNvbnRleHQpKF9jYW5Vc2VET00uZGVmYXVsdCA/IHdpbmRvdyA6IHVuZGVmaW5lZCk7XG5jb25zdCBXaW5kb3dQcm92aWRlciA9IENvbnRleHQuUHJvdmlkZXI7XG5cbi8qKlxuICogVGhlIGRvY3VtZW50IFwid2luZG93XCIgcGxhY2VkIGluIFJlYWN0IGNvbnRleHQuIEhlbHBmdWwgZm9yIGRldGVybWluaW5nXG4gKiBTU1IgY29udGV4dCwgb3Igd2hlbiByZW5kZXJpbmcgaW50byBhbiBpZnJhbWUuXG4gKlxuICogQHJldHVybnMgdGhlIGN1cnJlbnQgd2luZG93XG4gKi9cbmV4cG9ydHMuV2luZG93UHJvdmlkZXIgPSBXaW5kb3dQcm92aWRlcjtcbmZ1bmN0aW9uIHVzZVdpbmRvdygpIHtcbiAgcmV0dXJuICgwLCBfcmVhY3QudXNlQ29udGV4dCkoQ29udGV4dCk7XG59Il0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInVzZVdpbmRvdyIsIldpbmRvd1Byb3ZpZGVyIiwiX3JlYWN0IiwicmVxdWlyZSIsIl9jYW5Vc2VET00iLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0Iiwib2JqIiwiQ29udGV4dCIsImNyZWF0ZUNvbnRleHQiLCJ3aW5kb3ciLCJ1bmRlZmluZWQiLCJQcm92aWRlciIsInVzZUNvbnRleHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/useWindow.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/utils.js":
/*!***********************************************!*\
  !*** ./node_modules/@restart/ui/cjs/utils.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports.isEscKey = isEscKey;\nexports.getReactVersion = getReactVersion;\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction isEscKey(e) {\n    return e.code === \"Escape\" || e.keyCode === 27;\n}\nfunction getReactVersion() {\n    const parts = React.version.split(\".\");\n    return {\n        major: +parts[0],\n        minor: +parts[1],\n        patch: +parts[2]\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxnQkFBZ0IsR0FBR0U7QUFDbkJGLHVCQUF1QixHQUFHRztBQUMxQixJQUFJQyxRQUFRQyx3QkFBd0JDLG1CQUFPQSxDQUFDLHdHQUFPO0FBQ25ELFNBQVNDLHlCQUF5QkMsV0FBVztJQUFJLElBQUksT0FBT0MsWUFBWSxZQUFZLE9BQU87SUFBTSxJQUFJQyxvQkFBb0IsSUFBSUQ7SUFBVyxJQUFJRSxtQkFBbUIsSUFBSUY7SUFBVyxPQUFPLENBQUNGLDJCQUEyQixTQUFVQyxXQUFXO1FBQUksT0FBT0EsY0FBY0csbUJBQW1CRDtJQUFtQixHQUFHRjtBQUFjO0FBQ3RULFNBQVNILHdCQUF3Qk8sR0FBRyxFQUFFSixXQUFXO0lBQUksSUFBSSxDQUFDQSxlQUFlSSxPQUFPQSxJQUFJWCxVQUFVLEVBQUU7UUFBRSxPQUFPVztJQUFLO0lBQUUsSUFBSUEsUUFBUSxRQUFRLE9BQU9BLFFBQVEsWUFBWSxPQUFPQSxRQUFRLFlBQVk7UUFBRSxPQUFPO1lBQUVDLFNBQVNEO1FBQUk7SUFBRztJQUFFLElBQUlFLFFBQVFQLHlCQUF5QkM7SUFBYyxJQUFJTSxTQUFTQSxNQUFNQyxHQUFHLENBQUNILE1BQU07UUFBRSxPQUFPRSxNQUFNRSxHQUFHLENBQUNKO0lBQU07SUFBRSxJQUFJSyxTQUFTLENBQUM7SUFBRyxJQUFJQyx3QkFBd0JDLE9BQU9DLGNBQWMsSUFBSUQsT0FBT0Usd0JBQXdCO0lBQUUsSUFBSyxJQUFJQyxPQUFPVixJQUFLO1FBQUUsSUFBSVUsUUFBUSxhQUFhSCxPQUFPSSxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDYixLQUFLVSxNQUFNO1lBQUUsSUFBSUksT0FBT1Isd0JBQXdCQyxPQUFPRSx3QkFBd0IsQ0FBQ1QsS0FBS1UsT0FBTztZQUFNLElBQUlJLFFBQVNBLENBQUFBLEtBQUtWLEdBQUcsSUFBSVUsS0FBS0MsR0FBRyxHQUFHO2dCQUFFUixPQUFPQyxjQUFjLENBQUNILFFBQVFLLEtBQUtJO1lBQU8sT0FBTztnQkFBRVQsTUFBTSxDQUFDSyxJQUFJLEdBQUdWLEdBQUcsQ0FBQ1UsSUFBSTtZQUFFO1FBQUU7SUFBRTtJQUFFTCxPQUFPSixPQUFPLEdBQUdEO0lBQUssSUFBSUUsT0FBTztRQUFFQSxNQUFNYSxHQUFHLENBQUNmLEtBQUtLO0lBQVM7SUFBRSxPQUFPQTtBQUFRO0FBQ255QixTQUFTZixTQUFTMEIsQ0FBQztJQUNqQixPQUFPQSxFQUFFQyxJQUFJLEtBQUssWUFBWUQsRUFBRUUsT0FBTyxLQUFLO0FBQzlDO0FBQ0EsU0FBUzNCO0lBQ1AsTUFBTTRCLFFBQVEzQixNQUFNNEIsT0FBTyxDQUFDQyxLQUFLLENBQUM7SUFDbEMsT0FBTztRQUNMQyxPQUFPLENBQUNILEtBQUssQ0FBQyxFQUFFO1FBQ2hCSSxPQUFPLENBQUNKLEtBQUssQ0FBQyxFQUFFO1FBQ2hCSyxPQUFPLENBQUNMLEtBQUssQ0FBQyxFQUFFO0lBQ2xCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L3VpL2Nqcy91dGlscy5qcz85NTkwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5pc0VzY0tleSA9IGlzRXNjS2V5O1xuZXhwb3J0cy5nZXRSZWFjdFZlcnNpb24gPSBnZXRSZWFjdFZlcnNpb247XG52YXIgUmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKFwicmVhY3RcIikpO1xuZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKSB7IGlmICh0eXBlb2YgV2Vha01hcCAhPT0gXCJmdW5jdGlvblwiKSByZXR1cm4gbnVsbDsgdmFyIGNhY2hlQmFiZWxJbnRlcm9wID0gbmV3IFdlYWtNYXAoKTsgdmFyIGNhY2hlTm9kZUludGVyb3AgPSBuZXcgV2Vha01hcCgpOyByZXR1cm4gKF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSA9IGZ1bmN0aW9uIChub2RlSW50ZXJvcCkgeyByZXR1cm4gbm9kZUludGVyb3AgPyBjYWNoZU5vZGVJbnRlcm9wIDogY2FjaGVCYWJlbEludGVyb3A7IH0pKG5vZGVJbnRlcm9wKTsgfVxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqLCBub2RlSW50ZXJvcCkgeyBpZiAoIW5vZGVJbnRlcm9wICYmIG9iaiAmJiBvYmouX19lc01vZHVsZSkgeyByZXR1cm4gb2JqOyB9IGlmIChvYmogPT09IG51bGwgfHwgdHlwZW9mIG9iaiAhPT0gXCJvYmplY3RcIiAmJiB0eXBlb2Ygb2JqICE9PSBcImZ1bmN0aW9uXCIpIHsgcmV0dXJuIHsgZGVmYXVsdDogb2JqIH07IH0gdmFyIGNhY2hlID0gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKTsgaWYgKGNhY2hlICYmIGNhY2hlLmhhcyhvYmopKSB7IHJldHVybiBjYWNoZS5nZXQob2JqKTsgfSB2YXIgbmV3T2JqID0ge307IHZhciBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjsgZm9yICh2YXIga2V5IGluIG9iaikgeyBpZiAoa2V5ICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7IHZhciBkZXNjID0gaGFzUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiBudWxsOyBpZiAoZGVzYyAmJiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7IH0gZWxzZSB7IG5ld09ialtrZXldID0gb2JqW2tleV07IH0gfSB9IG5ld09iai5kZWZhdWx0ID0gb2JqOyBpZiAoY2FjaGUpIHsgY2FjaGUuc2V0KG9iaiwgbmV3T2JqKTsgfSByZXR1cm4gbmV3T2JqOyB9XG5mdW5jdGlvbiBpc0VzY0tleShlKSB7XG4gIHJldHVybiBlLmNvZGUgPT09ICdFc2NhcGUnIHx8IGUua2V5Q29kZSA9PT0gMjc7XG59XG5mdW5jdGlvbiBnZXRSZWFjdFZlcnNpb24oKSB7XG4gIGNvbnN0IHBhcnRzID0gUmVhY3QudmVyc2lvbi5zcGxpdCgnLicpO1xuICByZXR1cm4ge1xuICAgIG1ham9yOiArcGFydHNbMF0sXG4gICAgbWlub3I6ICtwYXJ0c1sxXSxcbiAgICBwYXRjaDogK3BhcnRzWzJdXG4gIH07XG59Il0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiaXNFc2NLZXkiLCJnZXRSZWFjdFZlcnNpb24iLCJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsIm9iaiIsImRlZmF1bHQiLCJjYWNoZSIsImhhcyIsImdldCIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsInNldCIsImUiLCJjb2RlIiwia2V5Q29kZSIsInBhcnRzIiwidmVyc2lvbiIsInNwbGl0IiwibWFqb3IiLCJtaW5vciIsInBhdGNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/utils.js\n");

/***/ })

};
;